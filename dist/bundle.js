!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("ecstatic",[],t):"object"==typeof exports?exports.ecstatic=t():n.ecstatic=t()}(self,()=>(()=>{"use strict";var __webpack_modules__={309:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('{// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Entity: () => (/* reexport */ Entity_Entity),\n  World: () => (/* reexport */ World_World),\n  trackComponent: () => (/* reexport */ trackComponent)\n});\n\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== \'undefined\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== \'undefined\' && typeof msCrypto.getRandomValues === \'function\' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error(\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/regex.js\n/* ESM default export */ const regex = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/validate.js\n\n\nfunction validate(uuid) {\n  return typeof uuid === \'string\' && regex.test(uuid);\n}\n\n/* ESM default export */ const esm_browser_validate = (validate);\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/stringify.js\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var stringify_i = 0; stringify_i < 256; ++stringify_i) {\n  byteToHex.push((stringify_i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It\'s been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \'-\' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \'-\' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \'-\' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \'-\' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it\'s likely due to one\n  // of the following:\n  // - One or more input array values don\'t map to a hex octet (leading to\n  // "undefined" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!esm_browser_validate(uuid)) {\n    throw TypeError(\'Stringified UUID is invalid\');\n  }\n\n  return uuid;\n}\n\n/* ESM default export */ const esm_browser_stringify = (stringify);\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\n\n\n\nfunction v4_v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return esm_browser_stringify(rnds);\n}\n\n/* ESM default export */ const v4 = (v4_v4);\n;// CONCATENATED MODULE: ./src/guards.ts\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nfunction isComponentInstance(// eslint-disable-next-line @typescript-eslint/no-explicit-any, no-unused-vars\nClass, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncomp) {\n    if (!comp) {\n        return false;\n    }\n    if (!_instanceof(comp, Class)) {\n        return false;\n    }\n    return true;\n}\n\n;// CONCATENATED MODULE: ./src/ComponentCollection.ts\n/* eslint-disable @typescript-eslint/no-explicit-any */ function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n\nvar ComponentCollection_ComponentCollection = /*#__PURE__*/ function() {\n    "use strict";\n    function ComponentCollection() {\n        var _this = this;\n        _class_call_check(this, ComponentCollection);\n        _define_property(this, "components", new Map());\n        // instance of a component\n        _define_property(this, "add", function(component) {\n            _this.components.set(component.constructor.name, component);\n        });\n        // eslint-disable-next-line no-unused-vars\n        _define_property(this, "update", function(cl, func) {\n            var c = _this.components.get(cl.name);\n            if (isComponentInstance(cl, c)) {\n                var updatedComponent = func(c);\n                _this.components.set(cl.name, updatedComponent);\n            }\n        });\n        /**\n   * Remove a component.\n   * @param cType Class of component to remove.\n   */ _define_property(this, "remove", function(cType) {\n            _this.components.delete(cType.name);\n        });\n        /**\n   * Get a component that matches the passed class.\n   * Will throw an error if an instance of the given component\n   * doesn\'t exist in the collection, so if you don\'t know if it\'s safe\n   * to get a component, you should test with has() or hasByName() first.\n   * You have been warned.\n   * @param cl component Class reference.\n   */ _define_property(this, "get", function(cl) {\n            var comp = _this.components.get(cl.name);\n            if (isComponentInstance(cl, comp)) {\n                return comp;\n            } else {\n                throw new Error("ComponentCollection does not have component of type ".concat(cl.name));\n            }\n        });\n        /**\n   * Test to see if the collection contains a specific Class or Classes.\n   * @param cType component Class, or array of component Classes.\n   */ _define_property(this, "has", function(cType) {\n            return Array.isArray(cType) ? cType.every(function(ct) {\n                return _this.components.has(ct.name) === true;\n            }) : _this.components.has(cType.name);\n        });\n        /**\n   * Test to see if the collection has a component instance based on a\n   * class name. Some build steps/minifiers will change the name of Classes,\n   * so it\'s usually best to pass in a MyClass.name instead of \'MyClass\'.\n   * @param cName The name of a Class, or array of Class names.\n   */ _define_property(this, "hasByName", function(cName) {\n            return Array.isArray(cName) ? cName.every(function(ct) {\n                return _this.components.has(ct) === true;\n            }) : _this.components.has(cName);\n        });\n    }\n    _create_class(ComponentCollection, [\n        {\n            key: "componentTypes",\n            get: /**\n   * Get the component type names that are currently being used in the collection.\n   */ function get() {\n                return _to_consumable_array(this.components.keys());\n            }\n        },\n        {\n            key: "size",\n            get: /**\n   * Get the current number of components that are in the collection.\n   */ function get() {\n                return this.components.size;\n            }\n        },\n        {\n            key: "toDevComponents",\n            value: function toDevComponents() {\n                var obj = {};\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.components[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = _sliced_to_array(_step.value, 2), compName = _step_value[0], comp = _step_value[1];\n                        obj[compName] = comp;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return obj;\n            }\n        }\n    ]);\n    return ComponentCollection;\n}();\n// CT is a Union, like `type = FirstComponent | SecondComponent`.\n\n\n;// CONCATENATED MODULE: ./src/DevEntity.ts\nfunction DevEntity_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction DevEntity_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction DevEntity_array_without_holes(arr) {\n    if (Array.isArray(arr)) return DevEntity_array_like_to_array(arr);\n}\nfunction DevEntity_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction DevEntity_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction DevEntity_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) DevEntity_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) DevEntity_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction DevEntity_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction DevEntity_iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction DevEntity_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction DevEntity_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevEntity_non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevEntity_sliced_to_array(arr, i) {\n    return DevEntity_array_with_holes(arr) || DevEntity_iterable_to_array_limit(arr, i) || DevEntity_unsupported_iterable_to_array(arr, i) || DevEntity_non_iterable_rest();\n}\nfunction DevEntity_to_consumable_array(arr) {\n    return DevEntity_array_without_holes(arr) || DevEntity_iterable_to_array(arr) || DevEntity_unsupported_iterable_to_array(arr) || DevEntity_non_iterable_spread();\n}\nfunction DevEntity_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return DevEntity_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DevEntity_array_like_to_array(o, minLen);\n}\nvar DevEntity_DevEntity = /*#__PURE__*/ function() {\n    "use strict";\n    function DevEntity(entity, world) {\n        DevEntity_class_call_check(this, DevEntity);\n        DevEntity_define_property(this, "id", void 0);\n        DevEntity_define_property(this, "components", void 0);\n        DevEntity_define_property(this, "tags", void 0);\n        DevEntity_define_property(this, "systems", []);\n        DevEntity_define_property(this, "state", void 0);\n        this.id = entity.id;\n        this.components = entity.components.toDevComponents(), this.tags = DevEntity_to_consumable_array(entity.tags);\n        this.state = entity.state;\n        var compNames = Object.keys(this.components);\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = world.systems.compNamesBySystemName[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _step_value = DevEntity_sliced_to_array(_step.value, 2), systemName = _step_value[0], cNames = _step_value[1];\n                if (cNames.every(function(cName) {\n                    return compNames.includes(cName);\n                })) {\n                    this.systems.push(systemName);\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    DevEntity_create_class(DevEntity, [\n        {\n            key: "toTableRow",\n            value: function toTableRow() {\n                return {\n                    id: this.id,\n                    components: Object.keys(this.components).join(\', \'),\n                    tags: this.tags.join(\', \'),\n                    systems: this.systems.join(\', \')\n                };\n            }\n        }\n    ]);\n    return DevEntity;\n}();\n/* ESM default export */ const src_DevEntity = (DevEntity_DevEntity);\n\n;// CONCATENATED MODULE: ./src/SimpleFSM.ts\nfunction SimpleFSM_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction SimpleFSM_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction SimpleFSM_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) SimpleFSM_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) SimpleFSM_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction SimpleFSM_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar SimpleFSM_SimpleFSM = /*#__PURE__*/ function() {\n    "use strict";\n    function SimpleFSM(initialState, transitions) {\n        SimpleFSM_class_call_check(this, SimpleFSM);\n        SimpleFSM_define_property(this, "current", void 0);\n        SimpleFSM_define_property(this, "inital", void 0);\n        SimpleFSM_define_property(this, "transitions", void 0);\n        this.inital = initialState;\n        this.current = initialState;\n        this.transitions = transitions;\n    }\n    SimpleFSM_create_class(SimpleFSM, [\n        {\n            key: "next",\n            value: function next(data) {\n                if (this.transitions[this.current]) {\n                    this.current = this.transitions[this.current](data, this.current);\n                }\n            }\n        },\n        {\n            key: "reset",\n            value: function reset() {\n                this.current = this.inital;\n            }\n        },\n        {\n            key: "is",\n            value: function is(checkState) {\n                return this.current === checkState;\n            }\n        }\n    ]);\n    return SimpleFSM;\n}();\n\n\n;// CONCATENATED MODULE: ./src/Entity.ts\nfunction Entity_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction Entity_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction Entity_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction Entity_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction Entity_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) Entity_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) Entity_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction Entity_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction Entity_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction Entity_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction Entity_sliced_to_array(arr, i) {\n    return Entity_array_with_holes(arr) || Entity_iterable_to_array_limit(arr, i) || Entity_unsupported_iterable_to_array(arr, i) || Entity_non_iterable_rest();\n}\nfunction Entity_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return Entity_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Entity_array_like_to_array(o, minLen);\n}\n\n\n\n\nvar Entity_Entity = /*#__PURE__*/ function() {\n    "use strict";\n    function Entity(world) {\n        var _this = this;\n        Entity_class_call_check(this, Entity);\n        Entity_define_property(this, "_id", void 0);\n        Entity_define_property(this, "_world", void 0);\n        Entity_define_property(this, "_error", void 0);\n        Entity_define_property(this, "_state", void 0);\n        this._id = v4();\n        this._world = world;\n        this._error = null;\n        var fsmTransition = function(ns) {\n            if (ns === \'error\' || _this._error) return \'error\';\n            return ns;\n        };\n        this._state = new SimpleFSM_SimpleFSM(\'creating\', {\n            creating: fsmTransition,\n            created: fsmTransition,\n            destroying: fsmTransition,\n            destroyed: function() {\n                return \'destroyed\';\n            },\n            error: function() {\n                return \'error\';\n            }\n        });\n        /*\n    Registering with the World.\n    */ this._world.registerEntity(this);\n        if (this._world.systems.compNamesBySystemName.size === 0) {\n            this._state.next(\'created\');\n        }\n    }\n    Entity_create_class(Entity, [\n        {\n            key: "id",\n            get: function get() {\n                return this._id;\n            }\n        },\n        {\n            key: "world",\n            get: function get() {\n                return this._world;\n            }\n        },\n        {\n            key: "state",\n            get: function get() {\n                return this._state.current;\n            }\n        },\n        {\n            /* LifeCycle methods, meant to be overridden */ // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n            key: "onCreate",\n            value: function onCreate(world) {\n            // abstract\n            }\n        },\n        {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n            key: "onDestroy",\n            value: function onDestroy(world) {\n            // abstract\n            }\n        },\n        {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n            key: "onComponentAdd",\n            value: function onComponentAdd(args) {\n            // abstract\n            }\n        },\n        {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n            key: "onTrackedComponentUpdate",\n            value: function onTrackedComponentUpdate(args) {\n            // abstract\n            }\n        },\n        {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n            key: "onComponentRemove",\n            value: function onComponentRemove(args) {\n            // abstract\n            }\n        },\n        {\n            /**\n   * Add a component to an Entity, doh.\n   */ key: "add",\n            value: function add(component) {\n                this._world.add(this._id, component);\n                return this;\n            }\n        },\n        {\n            /**\n   * Add a tag to a component\n   */ key: "addTag",\n            value: function addTag(tag) {\n                var entitySet = this._world.entitiesByTags.has(tag) ? this._world.entitiesByTags.get(tag) : new Set();\n                if (entitySet) {\n                    entitySet.add(this._id);\n                    this._world.entitiesByTags.set(tag, entitySet);\n                }\n                return this;\n            }\n        },\n        {\n            /**\n   * Determines if an entity has a component related to it.\n   */ key: "has",\n            value: function has(cType) {\n                var cc = this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n                return cc.has(cType);\n            }\n        },\n        {\n            /**\n   * Check to see if an entity tagged with a given tag.\n   */ key: "hasTag",\n            value: function hasTag(tag) {\n                if (this._world.entitiesByTags.has(tag)) {\n                    var entitySet = this._world.entitiesByTags.get(tag);\n                    if (entitySet) {\n                        return entitySet.has(this._id);\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            /**\n   * Get a component that belongs to an entity.\n   */ key: "get",\n            value: function get(cl) {\n                var cc = this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n                var component = cc.get(cl);\n                return component;\n            }\n        },\n        {\n            /**\n   * Get all components that have been added to an entity, via a ComponentCollection\n   */ key: "getAll",\n            value: function getAll() {\n                return this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n            }\n        },\n        {\n            /**\n   * Remove a component from an entity.\n   * @param cType A component class, eg MyComponent\n   */ key: "remove",\n            value: function remove(cType) {\n                this._world.remove(this._id, cType);\n                return this;\n            }\n        },\n        {\n            /**\n   * Remove a tag from an entity\n   */ key: "removeTag",\n            value: function removeTag(tag) {\n                if (this._world.entitiesByTags.has(tag)) {\n                    var entitySet = this._world.entitiesByTags.get(tag);\n                    if (entitySet) {\n                        entitySet.delete(this._id);\n                        if (entitySet.size === 0) {\n                            this._world.entitiesByTags.delete(tag);\n                        }\n                    }\n                }\n                return this;\n            }\n        },\n        {\n            /** Clears all components from an Entity */ key: "clear",\n            value: function clear() {\n                this._world.clearEntityComponents(this._id);\n                return this;\n            }\n        },\n        {\n            /**\n   * Remove all tags on an entity\n   */ key: "clearTags",\n            value: function clearTags() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this._world.entitiesByTags.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = Entity_sliced_to_array(_step.value, 2), tag = _step_value[0], entitySet = _step_value[1];\n                        entitySet.delete(this._id);\n                        if (entitySet.size === 0) {\n                            this._world.entitiesByTags.delete(tag);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return this;\n            }\n        },\n        {\n            /**\n   * Sets the state of the entity to \'created\'. that\'s it.\n   */ key: "finishCreation",\n            value: function finishCreation() {\n                this._state.next(\'created\');\n            }\n        },\n        {\n            /**\n   * Destroy an entity. Actual destruction is deferred until after the next pass of systems.\n   * This gives the systems a chance to do any cleanup that might be needed.\n   */ key: "destroy",\n            value: function destroy() {\n                // If no systems are added, the destroy immediately.\n                if (this._world.systems.compNamesBySystemName.size === 0) {\n                    this.destroyImmediately();\n                    return;\n                }\n                // Mark as "destroying" so that systems can act on it before actually being destroyed.\n                this._state.next(\'destroying\');\n            }\n        },\n        {\n            key: "destroyImmediately",\n            value: function destroyImmediately() {\n                // Right now calling before the actual destorying of the entity.\n                // Might want to change this to post destruction in the future, who knows.\n                this.onDestroy(this._world);\n                // Actually destroy entity.\n                this._world.destroyEntity(this._id); // should return an error??\n                this._state.next(\'destroyed\');\n            }\n        },\n        {\n            key: "components",\n            get: /**\n   * Get all components that have been added to an entity, via a ComponentCollection.\n   * Does the same thing as entityInstance.getAll().\n   */ function get() {\n                return this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n            }\n        },\n        {\n            key: "tags",\n            get: /**\n   * Retrieves all the tags that have been added to this entity.\n   */ function get() {\n                var tags = new Set();\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this._world.entitiesByTags.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = Entity_sliced_to_array(_step.value, 2), tag = _step_value[0], entitySet = _step_value[1];\n                        if (entitySet.has(this._id)) {\n                            tags.add(tag);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return tags;\n            }\n        },\n        {\n            /**\n   * Convert Entity to a DevEntity. Very helpful in for debugging.\n   */ key: "toDevEntity",\n            value: function toDevEntity() {\n                return new src_DevEntity(this, this._world);\n            }\n        }\n    ]);\n    return Entity;\n}();\n\n\n;// CONCATENATED MODULE: ./src/DevTools.ts\nfunction DevTools_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction DevTools_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction DevTools_array_without_holes(arr) {\n    if (Array.isArray(arr)) return DevTools_array_like_to_array(arr);\n}\nfunction DevTools_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction DevTools_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction DevTools_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) DevTools_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) DevTools_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction DevTools_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction DevTools_iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction DevTools_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction DevTools_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevTools_non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevTools_sliced_to_array(arr, i) {\n    return DevTools_array_with_holes(arr) || DevTools_iterable_to_array_limit(arr, i) || DevTools_unsupported_iterable_to_array(arr, i) || DevTools_non_iterable_rest();\n}\nfunction DevTools_to_consumable_array(arr) {\n    return DevTools_array_without_holes(arr) || DevTools_iterable_to_array(arr) || DevTools_unsupported_iterable_to_array(arr) || DevTools_non_iterable_spread();\n}\nfunction DevTools_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return DevTools_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DevTools_array_like_to_array(o, minLen);\n}\nvar DevTools_DevTools = /*#__PURE__*/ function() {\n    "use strict";\n    function DevTools(world) {\n        DevTools_class_call_check(this, DevTools);\n        DevTools_define_property(this, "world", void 0);\n        this.world = world;\n    }\n    DevTools_create_class(DevTools, [\n        {\n            key: "systemComponents",\n            get: /**\n   * display the all systems of the world, and the components required by each system.\n   * Super helpful to use with console.table()\n   * @example\n   * ```\n   * console.table(world.dev.systemComponents);\n   * ```\n   */ function get() {\n                var compsBySystems = [];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.world.systems.compNamesBySystemName[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = DevTools_sliced_to_array(_step.value, 2), system = _step_value[0], compNames = _step_value[1];\n                        compsBySystems.push({\n                            system: system,\n                            components: compNames.join(\', \')\n                        });\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return compsBySystems;\n            }\n        },\n        {\n            key: "entities",\n            get: /**\n   * Create an array of DevEntites. Can be very helpful for things like inspecting component state,\n   * and which systems will be called on an entity.\n   * @example\n   * ```\n   * console.table(world.dev.entities);\n   *\n   * // Pro tip! try displaying a table of entities with console.table and DevEntity.toTableRow().\n   * console.table(world.dev.entities.map(devEntity => devEntity.toTableRow()));\n   * ```\n   */ function get() {\n                return DevTools_to_consumable_array(this.world.entities.values()).map(function(e) {\n                    return e.toDevEntity();\n                });\n            }\n        }\n    ]);\n    return DevTools;\n}();\n/* ESM default export */ const src_DevTools = (DevTools_DevTools);\n\n;// CONCATENATED MODULE: ./src/Systems.ts\nfunction Systems_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction Systems_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction Systems_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) Systems_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) Systems_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction Systems_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n\nvar Systems_Systems = /*#__PURE__*/ function() {\n    "use strict";\n    function Systems(world) {\n        Systems_class_call_check(this, Systems);\n        Systems_define_property(this, "world", void 0);\n        Systems_define_property(this, "systemFuncBySystemName", void 0);\n        Systems_define_property(this, "compNamesBySystemName", void 0);\n        this.world = world;\n        this.systemFuncBySystemName = new Map();\n        this.compNamesBySystemName = new Map();\n    }\n    Systems_create_class(Systems, [\n        {\n            key: "add",\n            value: function add(cTypes, systemFunc, canonicalKey, funcName) {\n                var cNames = cTypes.map(function(ct) {\n                    return ct.name;\n                });\n                var name = funcName || systemFunc.name;\n                if (name === \'\' || !name) {\n                    // Use a more robust way to get a unique name if needed,\n                    // for now we\'ll use the canonical key if no name is available.\n                    name = canonicalKey;\n                }\n                this.systemFuncBySystemName.set(name, {\n                    func: systemFunc,\n                    key: canonicalKey\n                });\n                this.compNamesBySystemName.set(name, cNames);\n                // Use the canonicalKey passed from the World\n                if (!this.world.entitiesByCTypes.has(canonicalKey)) {\n                    this.world.entitiesByCTypes.set(canonicalKey, new Set());\n                }\n                return this;\n            }\n        },\n        {\n            key: "run",\n            value: function run() {\n                // 1. EFFICIENTLY GATHER ENTITIES NEEDING LIFECYCLE CHANGES\n                // Instead of multiple loops, we find all entities to be created or\n                // destroyed in a single pass over the world\'s entities.\n                var entitiesToCreate = [];\n                var entitiesToDestroy = [];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.world.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entity = _step.value;\n                        if (entity.state === \'creating\') {\n                            entitiesToCreate.push(entity);\n                        } else if (entity.state === \'destroying\') {\n                            entitiesToDestroy.push(entity);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    // 2. RUN ALL SYSTEMS\n                    // We iterate over the system map, which now contains the function and the correct key.\n                    for(var _iterator1 = this.systemFuncBySystemName.values()[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var _step_value = _step1.value, func = _step_value.func, canonicalKey = _step_value.key;\n                        // Use the canonicalKey to get the precise set of entities for this system.\n                        var entityIdSet = this.world.entitiesByCTypes.get(canonicalKey) || new Set();\n                        var size = entityIdSet.size;\n                        // A small optimization: if no entities match this system, skip it.\n                        if (size === 0) {\n                            continue;\n                        }\n                        var index = 0;\n                        var _iteratorNormalCompletion2 = true, _didIteratorError2 = false, _iteratorError2 = undefined;\n                        try {\n                            for(var _iterator2 = entityIdSet[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){\n                                var eid = _step2.value;\n                                // Retrieve the entity and its components for this iteration.\n                                var entity1 = this.world.entities.get(eid);\n                                // Defensive check: if entity was removed mid-loop, skip.\n                                if (!entity1) continue;\n                                var components = this.world.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\n                                // Construct the arguments object for the system function.\n                                var args = {\n                                    entity: entity1,\n                                    components: components,\n                                    world: this.world,\n                                    index: index,\n                                    size: size,\n                                    isFirst: index === 0,\n                                    isLast: index + 1 === size\n                                };\n                                // Execute the system\'s logic.\n                                func(args);\n                                index++;\n                            }\n                        } catch (err) {\n                            _didIteratorError2 = true;\n                            _iteratorError2 = err;\n                        } finally{\n                            try {\n                                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                                    _iterator2.return();\n                                }\n                            } finally{\n                                if (_didIteratorError2) {\n                                    throw _iteratorError2;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion3 = true, _didIteratorError3 = false, _iteratorError3 = undefined;\n                try {\n                    // 3. FINALIZE LIFECYCLE CHANGES\n                    // This happens *after* all systems have had a chance to run.\n                    // Finalize the creation of all new entities.\n                    for(var _iterator3 = entitiesToCreate[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true){\n                        var entity2 = _step3.value;\n                        entity2.finishCreation();\n                    }\n                } catch (err) {\n                    _didIteratorError3 = true;\n                    _iteratorError3 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                            _iterator3.return();\n                        }\n                    } finally{\n                        if (_didIteratorError3) {\n                            throw _iteratorError3;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion4 = true, _didIteratorError4 = false, _iteratorError4 = undefined;\n                try {\n                    // Finalize the destruction of all marked entities.\n                    for(var _iterator4 = entitiesToDestroy[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true){\n                        var entity3 = _step4.value;\n                        entity3.destroyImmediately();\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                            _iterator4.return();\n                        }\n                    } finally{\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n            }\n        }\n    ]);\n    return Systems;\n}();\n\n\n;// CONCATENATED MODULE: ./src/TrackedComponent.ts\n/* eslint-disable no-unused-vars */ function TrackedComponent_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction TrackedComponent_array_without_holes(arr) {\n    if (Array.isArray(arr)) return TrackedComponent_array_like_to_array(arr);\n}\nfunction _construct(Parent, args, Class) {\n    if (_is_native_reflect_construct()) {\n        _construct = Reflect.construct;\n    } else {\n        _construct = function construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) _set_prototype_of(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return _construct.apply(null, arguments);\n}\nfunction TrackedComponent_iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction TrackedComponent_non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _set_prototype_of(o, p);\n}\nfunction TrackedComponent_to_consumable_array(arr) {\n    return TrackedComponent_array_without_holes(arr) || TrackedComponent_iterable_to_array(arr) || TrackedComponent_unsupported_iterable_to_array(arr) || TrackedComponent_non_iterable_spread();\n}\nfunction TrackedComponent_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return TrackedComponent_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return TrackedComponent_array_like_to_array(o, minLen);\n}\nfunction _is_native_reflect_construct() {\n    try {\n        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (_) {}\n    return (_is_native_reflect_construct = function() {\n        return !!result;\n    })();\n}\n// Waiting for Typescript 4.2 to come out so that Symbols are supporded keys.\nvar TrackedCompSymbolKeys = {\n    isTracked: Symbol.for(\'ecs.trackedComponent.isTracked\'),\n    world: Symbol.for(\'ecs.trackedComponent.world\'),\n    entityIDs: Symbol.for(\'ecs.trackedComponent.entityIDs\'),\n    getEntities: Symbol.for(\'ecs.trackedComponent.getEntities\'),\n    setWorld: Symbol.for(\'ecs.trackedComponent.setWorld\'),\n    onAdd: Symbol.for(\'ecs.trackedComponent.onAdd\'),\n    onUpdate: Symbol.for(\'ecs.trackedComponent.onUpdate\'),\n    onRemove: Symbol.for(\'ecs.trackedComponent.onRemove\')\n};\n// NOTE: Really need to get symbols working as keys in Typescript.\n//       Until then will have to cast to keyof CT.\n// https://stackoverflow.com/questions/54324323/typescript-type-string-is-not-assignable-to-type-keyof\n// https://github.com/microsoft/TypeScript/pull/26797\nfunction createClassInstanceProxyHandlers(trackedEventHandlers) {\n    var updatedProps = new Set();\n    return {\n        set: function set(component, property, value) {\n            updatedProps.add(property);\n            //@ts-ignore\n            var world = component[TrackedCompSymbolKeys.world];\n            var previousVal = component[property];\n            component[property] = value;\n            //@ts-ignore\n            var entities = component[TrackedCompSymbolKeys.getEntities](world);\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    entity.onTrackedComponentUpdate({\n                        world: world,\n                        component: component\n                    });\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            if (trackedEventHandlers.onUpdate) {\n                trackedEventHandlers.onUpdate({\n                    entities: entities,\n                    world: world,\n                    component: component,\n                    previousVal: previousVal,\n                    property: property\n                });\n            }\n            return true;\n        }\n    };\n}\nfunction trackComponent(CompClass, trackedEventHandlers) {\n    return new Proxy(CompClass, {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        construct: function construct(Component, args) {\n            var component = _construct(Component, TrackedComponent_to_consumable_array(args));\n            // For use in identifing a "tracked" class through the proxy.\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.isTracked] = true;\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.setWorld] = function(world) {\n                //@ts-ignore\n                component[TrackedCompSymbolKeys.world] = world;\n            };\n            // Holds entities that this component has been added to.\n            // Added and removed in world.add()/world.remove().\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.entityIDs] = new Set();\n            // Helper function to get the Entities from entityIDs\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.getEntities] = function(world) {\n                var entities = new Map();\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    //@ts-ignore\n                    for(var _iterator = component[TrackedCompSymbolKeys.entityIDs][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var eid = _step.value;\n                        var entity = world.entities.get(eid);\n                        if (entity) {\n                            entities.set(eid, entity);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return entities;\n            };\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.onAdd] = function(world, entity) {\n                if (trackedEventHandlers.onAdd) {\n                    //@ts-ignore\n                    var entities = component[TrackedCompSymbolKeys.getEntities](world);\n                    trackedEventHandlers.onAdd({\n                        component: component,\n                        world: world,\n                        entity: entity,\n                        entities: entities\n                    });\n                }\n            };\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.onRemove] = function(world, entity) {\n                if (trackedEventHandlers.onRemove) {\n                    //@ts-ignore\n                    var entities = component[TrackedCompSymbolKeys.getEntities](world);\n                    trackedEventHandlers.onRemove({\n                        component: component,\n                        world: world,\n                        entity: entity,\n                        entities: entities\n                    });\n                }\n            };\n            return new Proxy(component, createClassInstanceProxyHandlers(trackedEventHandlers));\n        }\n    });\n}\n\n;// CONCATENATED MODULE: ./src/World.ts\nfunction World_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction World_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction World_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction World_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction World_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) World_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) World_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction World_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction World_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction World_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction World_sliced_to_array(arr, i) {\n    return World_array_with_holes(arr) || World_iterable_to_array_limit(arr, i) || World_unsupported_iterable_to_array(arr, i) || World_non_iterable_rest();\n}\nfunction World_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return World_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return World_array_like_to_array(o, minLen);\n}\n\n\n\n\n\nvar World_World = /*#__PURE__*/ function() {\n    "use strict";\n    function World() {\n        var _this = this;\n        World_class_call_check(this, World);\n        World_define_property(this, "componentCollections", new Map());\n        World_define_property(this, "entities", new Map());\n        World_define_property(this, "entitiesByCTypes", new Map());\n        World_define_property(this, "entitiesByTags", new Map());\n        World_define_property(this, "systems", void 0);\n        World_define_property(this, "dev", void 0);\n        World_define_property(this, "componentToSystemQueries", new Map());\n        /**\n   * "finds" a single entity based on a predicate\n   */ // eslint-disable-next-line no-unused-vars\n        World_define_property(this, "find", function(predicate) {\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (predicate(entity)) {\n                        return entity;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return null;\n        });\n        /**\n   * "finds" all entities based on a predicate, kinda like filter.\n   */ // eslint-disable-next-line no-unused-vars\n        World_define_property(this, "findAll", function(predicate) {\n            var results = [];\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (predicate(entity)) {\n                        results.push(entity);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return results;\n        });\n        /**\n   * "locates" a single entity based on its Components.\n   */ World_define_property(this, "locate", function(cl) {\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (entity.components.has(cl)) {\n                        return entity;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return null;\n        });\n        /**\n   * Locates all entities that contain the components named\n   */ World_define_property(this, "locateAll", function(cl) {\n            var results = [];\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (entity.components.has(cl)) {\n                        results.push(entity);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return results;\n        });\n        /**\n   * Grabs the first entity, and its related component, that matches the component type.\n   * @example\n   * ```\n   * const { entity, component } = world.grab(MyComponent);\n   * ```\n   */ World_define_property(this, "grab", function(cl) {\n            var entity = _this.locate(cl);\n            if (entity) {\n                var cc = _this.componentCollections.get(entity.id) || new ComponentCollection_ComponentCollection();\n                var component = cc.get(cl);\n                return {\n                    entity: entity,\n                    component: component\n                };\n            }\n            return null;\n        });\n        /**\n   * Grab single component based on component type and predicate.\n   *\n   * @example\n   * ```typescript\n   * const { entity, component } = world.grabBy(FirstComponent, (comp) => comp.id == \'awesome\')\n   * ```\n   */ World_define_property(this, "grabBy", function(cl, // eslint-disable-next-line no-unused-vars\n        predicate) {\n            var entities = _this.locateAll(cl);\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                // const entities = this.locateAll((cl as unknown) as CT);\n                for(var _iterator = entities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    var cc = _this.componentCollections.get(entity.id) || new ComponentCollection_ComponentCollection();\n                    var component = cc.get(cl);\n                    if (predicate(component)) {\n                        return {\n                            component: component,\n                            entity: entity\n                        };\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return null;\n        });\n        /**\n   * Grab all the components primarily, and the entities if needed\n   */ World_define_property(this, "grabAll", function(cl) {\n            var entities = _this.locateAll(cl);\n            return entities.map(function(entity) {\n                return {\n                    entity: entity,\n                    component: entity.components.get(cl)\n                };\n            });\n        });\n        // TODO: Add grabAllBy method\n        /**\n   * Given an entity id and componentType, returns component\n   */ World_define_property(this, "get", function(eid, cl) {\n            var cc = _this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\n            return cc.get(cl);\n        });\n        /**\n   * Find and get the first instance of a component, without any associated entities.\n   * Helpful is you know that only one instance of a component exists across all entities.\n   * @param cl Component Class Contructor\n   * @param defaultValue A default component instance if no components are found.\n   */ World_define_property(this, "getComponent", function(cl, defaultValue) {\n            var result = _this.grab(cl);\n            if (!result) {\n                return defaultValue ? defaultValue : null;\n            }\n            return result.component;\n        });\n        /**\n   * Get an entity that has been tagged with the given tag, or return null;\n   */ World_define_property(this, "getTagged", function(tag) {\n            var tagEntityIds = _this.entitiesByTags.get(tag);\n            if (tagEntityIds) {\n                var entityId = tagEntityIds.values().next().value;\n                if (entityId) {\n                    var entity = _this.entities.get(entityId);\n                    if (entity) {\n                        return entity;\n                    }\n                }\n            }\n            return null;\n        });\n        /**\n   * Gett all entities that have been tagged with the given tag.\n   * @param tag A string or number.\n   */ World_define_property(this, "getAllTagged", function(tag) {\n            var entities = []; // eslint-disable-line\n            var tagEntityIds = _this.entitiesByTags.get(tag);\n            if (tagEntityIds) {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = tagEntityIds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entityId = _step.value;\n                        var entity = _this.entities.get(entityId);\n                        if (entity) {\n                            entities.push(entity);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n            return entities;\n        });\n        /**\n   * Add a component on the given entity\n   */ World_define_property(this, "add", function(eid, component) {\n            var cc = _this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\n            var entity = _this.entities.get(eid);\n            if (!entity) {\n                throw new Error("world.add: Unable to locate entity with id ".concat(eid));\n            }\n            cc.add(component);\n            _this.componentCollections.set(eid, cc);\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entitiesByCTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var _step_value = World_sliced_to_array(_step.value, 2), ctArr = _step_value[0], entitySet = _step_value[1];\n                    if (ctArr.split(\',\').every(cc.hasByName)) {\n                        entitySet.add(eid);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            // @ts-ignore\n            if (component[TrackedCompSymbolKeys.isTracked]) {\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.setWorld](_this);\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.entityIDs].add(eid);\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.onAdd](_this, entity);\n            }\n            entity.onComponentAdd({\n                world: _this,\n                component: component\n            });\n            return _this;\n        });\n        /**\n   * Remove a component from the given entity.\n   * NOTE: This will change what systems will be called on the entity.\n   */ World_define_property(this, "remove", function(eid, cType) {\n            var cc = _this.componentCollections.get(eid);\n            if (!cc) {\n                return _this;\n            }\n            var componentName = cType.name;\n            if (!cc.hasByName(componentName)) {\n                return _this;\n            }\n            var component = cc.get(cType);\n            // Handle TrackedComponent logic first\n            // @ts-ignore\n            if (component[TrackedCompSymbolKeys.isTracked]) {\n                var entity = _this.entities.get(eid);\n                if (!entity) {\n                    throw new Error("world.remove: Unable to locate entity for TrackedComponent. eid: ".concat(eid, ", cType: ").concat(cType.name));\n                }\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.entityIDs].delete(eid);\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.onRemove](_this, entity);\n            }\n            // --- START OPTIMIZED REMOVAL ---\n            // 1. Find all system queries that depended on the component being removed.\n            var affectedQueryKeys = _this.componentToSystemQueries.get(componentName) || [];\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                // 2. Remove the entity from each of those systems\' entity sets.\n                for(var _iterator = affectedQueryKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var queryKey = _step.value;\n                    var entitySet = _this.entitiesByCTypes.get(queryKey);\n                    if (entitySet) {\n                        entitySet.delete(eid);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            // --- END OPTIMIZED REMOVAL ---\n            // 3. Physically remove the component from the entity\'s collection.\n            cc.remove(cType);\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                // 4. Re-evaluate which systems the entity now belongs to.\n                //    This adds the entity back to any sets that still match.\n                for(var _iterator1 = _this.entitiesByCTypes.entries()[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var _step_value = World_sliced_to_array(_step1.value, 2), canonicalKey = _step_value[0], entitySet1 = _step_value[1];\n                    if (canonicalKey.split(\',\').every(function(name) {\n                        return cc.hasByName(name);\n                    })) {\n                        entitySet1.add(eid);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            // 5. Trigger the entity\'s onComponentRemove lifecycle hook.\n            var entity1 = _this.entities.get(eid);\n            if (entity1) {\n                entity1.onComponentRemove({\n                    world: _this,\n                    component: component\n                });\n            }\n            return _this;\n        });\n        this.dev = new src_DevTools(this);\n        this.systems = new Systems_Systems(this);\n    }\n    World_create_class(World, [\n        {\n            /**\n   * Method for adding systems.\n   */ key: "addSystem",\n            value: function addSystem(cTypes, systemFunc, funcName) {\n                // --- START NEW LOGIC ---\n                var cNames = cTypes.map(function(ct) {\n                    return ct.name;\n                }).sort(); // Sort for consistency\n                var canonicalKey = cNames.join(\',\'); // Create a stable string key\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    // Populate the inverted index\n                    for(var _iterator = cNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var componentName = _step.value;\n                        var existingQueries = this.componentToSystemQueries.get(componentName) || [];\n                        if (!existingQueries.includes(canonicalKey)) {\n                            existingQueries.push(canonicalKey);\n                        }\n                        this.componentToSystemQueries.set(componentName, existingQueries);\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                // Pass the canonical key to the Systems manager\n                this.systems.add(cTypes, systemFunc, canonicalKey, funcName);\n                // --- END NEW LOGIC ---\n                return this;\n            }\n        },\n        {\n            /**\n   * Setup an entity to exist in the given world. This is mostly an internal method, but exposed just in case.\n   */ key: "registerEntity",\n            value: function registerEntity(entity) {\n                var cc = new ComponentCollection_ComponentCollection();\n                this.componentCollections.set(entity.id, cc);\n                this.entities.set(entity.id, entity);\n                entity.onCreate(this);\n                return this;\n            }\n        },\n        {\n            /**\n   * Remove all components that belong to an entity.\n   */ key: "clearEntityComponents",\n            value: function clearEntityComponents(entityId) {\n                this.componentCollections.set(entityId, new ComponentCollection_ComponentCollection());\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.entitiesByCTypes.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entitySet = _step.value;\n                        if (entitySet.has(entityId)) {\n                            entitySet.delete(entityId);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return this;\n            }\n        },\n        {\n            /**\n   * Create an entity that is in the world.\n   * Basically just new Entity(world), but saves an import of Entity.\n   */ key: "createEntity",\n            value: function createEntity() {\n                var entity = new Entity_Entity(this);\n                return entity;\n            // Register entity here....\n            }\n        },\n        {\n            /**\n   * Destroys an entity.\n   * Same as entity.destroy().\n   */ key: "destroyEntity",\n            value: function destroyEntity(entityId) {\n                this.componentCollections.delete(entityId);\n                var entity = this.entities.get(entityId);\n                if (!entity) {\n                    throw new Error("world.destroyEntity: No entity found. entity id: ".concat(entityId));\n                }\n                this.entities.delete(entityId);\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.entitiesByCTypes.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entitySet = _step.value;\n                        if (entitySet.has(entityId)) {\n                            entitySet.delete(entityId);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    // remove any tag associations with destroyed entities.\n                    for(var _iterator1 = this.entitiesByTags[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var _step_value = World_sliced_to_array(_step1.value, 2), tag = _step_value[0], entitySet1 = _step_value[1];\n                        if (entitySet1.has(entityId)) {\n                            entitySet1.delete(entityId);\n                        }\n                        if (entitySet1.size === 0) {\n                            this.entitiesByTags.delete(tag);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n                return this;\n            }\n        }\n    ]);\n    return World;\n}();\n\n\n;// CONCATENATED MODULE: ./src/index.ts\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbHRpbjpzd2MtbG9hZGVyPz9ydWxlU2V0WzFdLnJ1bGVzWzBdLnVzZVswXSEvVXNlcnMvYnJvY2gvcmVwb3MvZWNzdGF0aWMvc3JjL2luZGV4LnRzfDFmZjliYmFmZWY4ZmNlMzM2YWQzNTNjNzQ1YzMyODhjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWNzdGF0aWMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcz83NjU4Iiwid2VicGFjazovL2Vjc3RhdGljLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9yZWdleC5qcz80MjU1Iiwid2VicGFjazovL2Vjc3RhdGljLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92YWxpZGF0ZS5qcz8zYzNjIiwid2VicGFjazovL2Vjc3RhdGljLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9zdHJpbmdpZnkuanM/OWJjNyIsIndlYnBhY2s6Ly9lY3N0YXRpYy8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanM/ZTU3MCIsIndlYnBhY2s6Ly9lY3N0YXRpYy8uL3NyYy9ndWFyZHMudHM/Yjk2OCIsIndlYnBhY2s6Ly9lY3N0YXRpYy8uL3NyYy9Db21wb25lbnRDb2xsZWN0aW9uLnRzP2RlMzQiLCJ3ZWJwYWNrOi8vZWNzdGF0aWMvLi9zcmMvRGV2RW50aXR5LnRzP2ZmYzMiLCJ3ZWJwYWNrOi8vZWNzdGF0aWMvLi9zcmMvU2ltcGxlRlNNLnRzPzNiM2QiLCJ3ZWJwYWNrOi8vZWNzdGF0aWMvLi9zcmMvRW50aXR5LnRzPzg3NTUiLCJ3ZWJwYWNrOi8vZWNzdGF0aWMvLi9zcmMvRGV2VG9vbHMudHM/NjQ0ZSIsIndlYnBhY2s6Ly9lY3N0YXRpYy8uL3NyYy9TeXN0ZW1zLnRzPzJiNzAiLCJ3ZWJwYWNrOi8vZWNzdGF0aWMvLi9zcmMvVHJhY2tlZENvbXBvbmVudC50cz8xMDczIiwid2VicGFjazovL2Vjc3RhdGljLy4vc3JjL1dvcmxkLnRzP2VjOTYiLCJ3ZWJwYWNrOi8vZWNzdGF0aWMvLi9zcmMvaW5kZXgudHM/OGNjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbnZhciBnZXRSYW5kb21WYWx1ZXM7XG52YXIgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi4gQWxzbyxcbiAgICAvLyBmaW5kIHRoZSBjb21wbGV0ZSBpbXBsZW1lbnRhdGlvbiBvZiBjcnlwdG8gKG1zQ3J5cHRvKSBvbiBJRTExLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0bykgfHwgdHlwZW9mIG1zQ3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09PSAnZnVuY3Rpb24nICYmIG1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKG1zQ3J5cHRvKTtcblxuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgL14oPzpbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMS01XVswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfXwwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDApJC9pOyIsImltcG9ydCBSRUdFWCBmcm9tICcuL3JlZ2V4LmpzJztcblxuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIFJFR0VYLnRlc3QodXVpZCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlOyIsImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG52YXIgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIpIHtcbiAgdmFyIG9mZnNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHZhciB1dWlkID0gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyIsImltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuICBybmRzWzZdID0gcm5kc1s2XSAmIDB4MGYgfCAweDQwO1xuICBybmRzWzhdID0gcm5kc1s4XSAmIDB4M2YgfCAweDgwOyAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcblxuICBpZiAoYnVmKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHJuZHNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1ZjtcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdpZnkocm5kcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHY0OyIsImV4cG9ydCBmdW5jdGlvbiBpc0NvbXBvbmVudEluc3RhbmNlPFQ+KFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSwgbm8tdW51c2VkLXZhcnNcbiAgQ2xhc3M6IG5ldyAoLi4uYXJnczogYW55KSA9PiBULFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBjb21wOiBhbnlcbik6IGNvbXAgaXMgSW5zdGFuY2VUeXBlPHR5cGVvZiBDbGFzcz4ge1xuICBpZiAoIWNvbXApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoIShjb21wIGluc3RhbmNlb2YgQ2xhc3MpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG5pbXBvcnQgeyBpc0NvbXBvbmVudEluc3RhbmNlIH0gZnJvbSAnLi9ndWFyZHMnO1xuXG50eXBlIENvbXBOYW1lID0gc3RyaW5nO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG50eXBlIENsYXNzQ29uc3RydWN0b3I8VD4gPSB7IG5ldyAoLi4uYXJnczogYW55W10pOiBUIH07XG5cbi8vIENUIGlzIGEgVW5pb24sIGxpa2UgYHR5cGUgPSBGaXJzdENvbXBvbmVudCB8IFNlY29uZENvbXBvbmVudGAuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21wb25lbnRDb2xsZWN0aW9uPENUPiB7XG4gIGNvbXBvbmVudHM6IE1hcDxDb21wTmFtZSwgQ1Q+ID0gbmV3IE1hcCgpO1xuXG4gIC8vIGluc3RhbmNlIG9mIGEgY29tcG9uZW50XG4gIGFkZCA9IChjb21wb25lbnQ6IENUKTogdm9pZCA9PiB7XG4gICAgdGhpcy5jb21wb25lbnRzLnNldCgoPGFueT5jb21wb25lbnQpLmNvbnN0cnVjdG9yLm5hbWUsIGNvbXBvbmVudCk7XG4gIH07XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIHVwZGF0ZSA9IDxUIGV4dGVuZHMgQ1Q+KGNsOiBDbGFzc0NvbnN0cnVjdG9yPFQ+LCBmdW5jOiAoYzogVCkgPT4gVCk6IHZvaWQgPT4ge1xuICAgIGNvbnN0IGMgPSB0aGlzLmNvbXBvbmVudHMuZ2V0KGNsLm5hbWUpO1xuXG4gICAgaWYgKGlzQ29tcG9uZW50SW5zdGFuY2UoY2wsIGMpKSB7XG4gICAgICBjb25zdCB1cGRhdGVkQ29tcG9uZW50ID0gZnVuYyhjKTtcbiAgICAgIHRoaXMuY29tcG9uZW50cy5zZXQoY2wubmFtZSwgdXBkYXRlZENvbXBvbmVudCk7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBSZW1vdmUgYSBjb21wb25lbnQuXG4gICAqIEBwYXJhbSBjVHlwZSBDbGFzcyBvZiBjb21wb25lbnQgdG8gcmVtb3ZlLlxuICAgKi9cbiAgcmVtb3ZlID0gKGNUeXBlOiBDbGFzc0NvbnN0cnVjdG9yPENUPik6IHZvaWQgPT4ge1xuICAgIHRoaXMuY29tcG9uZW50cy5kZWxldGUoY1R5cGUubmFtZSk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEdldCBhIGNvbXBvbmVudCB0aGF0IG1hdGNoZXMgdGhlIHBhc3NlZCBjbGFzcy5cbiAgICogV2lsbCB0aHJvdyBhbiBlcnJvciBpZiBhbiBpbnN0YW5jZSBvZiB0aGUgZ2l2ZW4gY29tcG9uZW50XG4gICAqIGRvZXNuJ3QgZXhpc3QgaW4gdGhlIGNvbGxlY3Rpb24sIHNvIGlmIHlvdSBkb24ndCBrbm93IGlmIGl0J3Mgc2FmZVxuICAgKiB0byBnZXQgYSBjb21wb25lbnQsIHlvdSBzaG91bGQgdGVzdCB3aXRoIGhhcygpIG9yIGhhc0J5TmFtZSgpIGZpcnN0LlxuICAgKiBZb3UgaGF2ZSBiZWVuIHdhcm5lZC5cbiAgICogQHBhcmFtIGNsIGNvbXBvbmVudCBDbGFzcyByZWZlcmVuY2UuXG4gICAqL1xuICBnZXQgPSA8VCBleHRlbmRzIENUPihjbDogQ2xhc3NDb25zdHJ1Y3RvcjxUPik6IFQgPT4ge1xuICAgIGNvbnN0IGNvbXAgPSB0aGlzLmNvbXBvbmVudHMuZ2V0KGNsLm5hbWUpO1xuXG4gICAgaWYgKGlzQ29tcG9uZW50SW5zdGFuY2U8VD4oY2wsIGNvbXApKSB7XG4gICAgICByZXR1cm4gY29tcDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgQ29tcG9uZW50Q29sbGVjdGlvbiBkb2VzIG5vdCBoYXZlIGNvbXBvbmVudCBvZiB0eXBlICR7Y2wubmFtZX1gXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogVGVzdCB0byBzZWUgaWYgdGhlIGNvbGxlY3Rpb24gY29udGFpbnMgYSBzcGVjaWZpYyBDbGFzcyBvciBDbGFzc2VzLlxuICAgKiBAcGFyYW0gY1R5cGUgY29tcG9uZW50IENsYXNzLCBvciBhcnJheSBvZiBjb21wb25lbnQgQ2xhc3Nlcy5cbiAgICovXG4gIGhhcyA9IChjVHlwZTogQ2xhc3NDb25zdHJ1Y3RvcjxDVD4gfCBDbGFzc0NvbnN0cnVjdG9yPENUPltdKTogYm9vbGVhbiA9PiB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY1R5cGUpXG4gICAgICA/IGNUeXBlLmV2ZXJ5KGN0ID0+IHRoaXMuY29tcG9uZW50cy5oYXMoY3QubmFtZSkgPT09IHRydWUpXG4gICAgICA6IHRoaXMuY29tcG9uZW50cy5oYXMoY1R5cGUubmFtZSk7XG4gIH07XG5cbiAgLyoqXG4gICAqIFRlc3QgdG8gc2VlIGlmIHRoZSBjb2xsZWN0aW9uIGhhcyBhIGNvbXBvbmVudCBpbnN0YW5jZSBiYXNlZCBvbiBhXG4gICAqIGNsYXNzIG5hbWUuIFNvbWUgYnVpbGQgc3RlcHMvbWluaWZpZXJzIHdpbGwgY2hhbmdlIHRoZSBuYW1lIG9mIENsYXNzZXMsXG4gICAqIHNvIGl0J3MgdXN1YWxseSBiZXN0IHRvIHBhc3MgaW4gYSBNeUNsYXNzLm5hbWUgaW5zdGVhZCBvZiAnTXlDbGFzcycuXG4gICAqIEBwYXJhbSBjTmFtZSBUaGUgbmFtZSBvZiBhIENsYXNzLCBvciBhcnJheSBvZiBDbGFzcyBuYW1lcy5cbiAgICovXG4gIGhhc0J5TmFtZSA9IChjTmFtZTogc3RyaW5nIHwgc3RyaW5nW10pOiBib29sZWFuID0+IHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjTmFtZSlcbiAgICAgID8gY05hbWUuZXZlcnkoY3QgPT4gdGhpcy5jb21wb25lbnRzLmhhcyhjdCkgPT09IHRydWUpXG4gICAgICA6IHRoaXMuY29tcG9uZW50cy5oYXMoY05hbWUpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGNvbXBvbmVudCB0eXBlIG5hbWVzIHRoYXQgYXJlIGN1cnJlbnRseSBiZWluZyB1c2VkIGluIHRoZSBjb2xsZWN0aW9uLlxuICAgKi9cbiAgZ2V0IGNvbXBvbmVudFR5cGVzKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gWy4uLnRoaXMuY29tcG9uZW50cy5rZXlzKCldO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgY3VycmVudCBudW1iZXIgb2YgY29tcG9uZW50cyB0aGF0IGFyZSBpbiB0aGUgY29sbGVjdGlvbi5cbiAgICovXG4gIGdldCBzaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuY29tcG9uZW50cy5zaXplO1xuICB9XG5cbiAgdG9EZXZDb21wb25lbnRzKCk6IFJlY29yZDxzdHJpbmcsIENUPiB7XG4gICAgY29uc3Qgb2JqOiBSZWNvcmQ8c3RyaW5nLCBDVD4gPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtjb21wTmFtZSwgY29tcF0gb2YgdGhpcy5jb21wb25lbnRzKSB7XG4gICAgICBvYmpbY29tcE5hbWVdID0gY29tcDtcbiAgICB9XG5cbiAgICByZXR1cm4gb2JqO1xuICB9XG59XG4iLCJpbXBvcnQgeyBFbnRpdHlTdGF0ZSB9IGZyb20gJ2Vjc3RhdGljJztcblxuaW1wb3J0IFdvcmxkIGZyb20gJy4vV29ybGQnO1xuaW1wb3J0IEVudGl0eSBmcm9tICcuL0VudGl0eSc7XG5pbXBvcnQgeyBUYWcgfSBmcm9tICcuL1RhZyc7XG5cbmludGVyZmFjZSBEZXZFbnRpdHlUYWJsZVJvdyB7XG4gIGlkOiBzdHJpbmc7XG4gIGNvbXBvbmVudHM6IHN0cmluZztcbiAgdGFnczogc3RyaW5nO1xuICBzeXN0ZW1zOiBzdHJpbmc7XG59XG5cbmNsYXNzIERldkVudGl0eTxDVD4ge1xuICBpZDogc3RyaW5nO1xuXG4gIGNvbXBvbmVudHM6IFJlY29yZDxzdHJpbmcsIENUPjtcblxuICB0YWdzOiBUYWdbXTtcblxuICBzeXN0ZW1zOiBzdHJpbmdbXSA9IFtdO1xuXG4gIHN0YXRlOiBFbnRpdHlTdGF0ZTtcblxuICBjb25zdHJ1Y3RvcihlbnRpdHk6IEVudGl0eTxDVD4sIHdvcmxkOiBXb3JsZDxDVD4pIHtcbiAgICB0aGlzLmlkID0gZW50aXR5LmlkO1xuICAgICgodGhpcy5jb21wb25lbnRzID0gZW50aXR5LmNvbXBvbmVudHMudG9EZXZDb21wb25lbnRzKCkpLFxuICAgICAgKHRoaXMudGFncyA9IFsuLi5lbnRpdHkudGFnc10pKTtcbiAgICB0aGlzLnN0YXRlID0gZW50aXR5LnN0YXRlO1xuXG4gICAgY29uc3QgY29tcE5hbWVzID0gT2JqZWN0LmtleXModGhpcy5jb21wb25lbnRzKTtcblxuICAgIGZvciAoY29uc3QgW3N5c3RlbU5hbWUsIGNOYW1lc10gb2Ygd29ybGQuc3lzdGVtcy5jb21wTmFtZXNCeVN5c3RlbU5hbWUpIHtcbiAgICAgIGlmIChjTmFtZXMuZXZlcnkoY05hbWUgPT4gY29tcE5hbWVzLmluY2x1ZGVzKGNOYW1lKSkpIHtcbiAgICAgICAgdGhpcy5zeXN0ZW1zLnB1c2goc3lzdGVtTmFtZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdG9UYWJsZVJvdygpOiBEZXZFbnRpdHlUYWJsZVJvdyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgY29tcG9uZW50czogT2JqZWN0LmtleXModGhpcy5jb21wb25lbnRzKS5qb2luKCcsICcpLFxuICAgICAgdGFnczogdGhpcy50YWdzLmpvaW4oJywgJyksXG4gICAgICBzeXN0ZW1zOiB0aGlzLnN5c3RlbXMuam9pbignLCAnKSxcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERldkVudGl0eTtcbiIsImV4cG9ydCB0eXBlIFN0YXRlID0gc3RyaW5nIHwgbnVtYmVyIHwgc3ltYm9sO1xuXG5leHBvcnQgdHlwZSBUcmFuc2l0aW9uczxTIGV4dGVuZHMgU3RhdGUsIEQgPSB1bmRlZmluZWQ+ID0gUmVjb3JkPFxuICBTLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgKGRhdGE6IEQsIGN1cnJlbnQ6IFMpID0+IFNcbj47XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNpbXBsZUZTTTxTIGV4dGVuZHMgU3RhdGUsIEQgPSB1bmRlZmluZWQ+IHtcbiAgY3VycmVudDogUztcblxuICBpbml0YWw6IFM7XG5cbiAgdHJhbnNpdGlvbnM6IFRyYW5zaXRpb25zPFMsIEQ+O1xuXG4gIGNvbnN0cnVjdG9yKGluaXRpYWxTdGF0ZTogUywgdHJhbnNpdGlvbnM6IFRyYW5zaXRpb25zPFMsIEQ+KSB7XG4gICAgdGhpcy5pbml0YWwgPSBpbml0aWFsU3RhdGU7XG4gICAgdGhpcy5jdXJyZW50ID0gaW5pdGlhbFN0YXRlO1xuICAgIHRoaXMudHJhbnNpdGlvbnMgPSB0cmFuc2l0aW9ucztcbiAgfVxuXG4gIG5leHQoZGF0YTogRCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnRyYW5zaXRpb25zW3RoaXMuY3VycmVudF0pIHtcbiAgICAgIHRoaXMuY3VycmVudCA9IHRoaXMudHJhbnNpdGlvbnNbdGhpcy5jdXJyZW50XShkYXRhLCB0aGlzLmN1cnJlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0KCk6IHZvaWQge1xuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuaW5pdGFsO1xuICB9XG5cbiAgaXMoY2hlY2tTdGF0ZTogUyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnQgPT09IGNoZWNrU3RhdGU7XG4gIH1cbn1cbiIsImltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gJ3V1aWQnO1xuXG5pbXBvcnQgV29ybGQsIHsgQ2xhc3NDb25zdHJ1Y3RvciB9IGZyb20gJy4vV29ybGQnO1xuaW1wb3J0IENvbXBvbmVudENvbGxlY3Rpb24gZnJvbSAnLi9Db21wb25lbnRDb2xsZWN0aW9uJztcbmltcG9ydCB7IFRhZyB9IGZyb20gJy4vVGFnJztcbmltcG9ydCBEZXZFbnRpdHkgZnJvbSAnLi9EZXZFbnRpdHknO1xuaW1wb3J0IFNpbXBsZUZTTSBmcm9tICcuL1NpbXBsZUZTTSc7XG5cbmV4cG9ydCB0eXBlIEVudGl0eUlkID0gc3RyaW5nO1xuXG5leHBvcnQgdHlwZSBFbnRpdHlTdGF0ZSA9XG4gIHwgJ2NyZWF0aW5nJ1xuICB8ICdjcmVhdGVkJ1xuICB8ICdkZXN0cm95aW5nJ1xuICB8ICdkZXN0cm95ZWQnXG4gIHwgJ2Vycm9yJztcblxuZXhwb3J0IGludGVyZmFjZSBFbnRpdHlDb21wRXZlbnRBcmdzPENUPiB7XG4gIHdvcmxkOiBXb3JsZDxDVD47XG4gIGNvbXBvbmVudDogQ1Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVudGl0eTxDVD4ge1xuICBwcml2YXRlIF9pZDogc3RyaW5nO1xuICBwcml2YXRlIF93b3JsZDogV29ybGQ8Q1Q+O1xuXG4gIHByaXZhdGUgX2Vycm9yOiBFcnJvciB8IG51bGw7XG5cbiAgcHJpdmF0ZSBfc3RhdGU6IFNpbXBsZUZTTTxFbnRpdHlTdGF0ZSwgRW50aXR5U3RhdGU+O1xuXG4gIGdldCBpZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9pZDtcbiAgfVxuXG4gIGdldCB3b3JsZCgpOiBXb3JsZDxDVD4ge1xuICAgIHJldHVybiB0aGlzLl93b3JsZDtcbiAgfVxuXG4gIGdldCBzdGF0ZSgpOiBFbnRpdHlTdGF0ZSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YXRlLmN1cnJlbnQ7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcih3b3JsZDogV29ybGQ8Q1Q+KSB7XG4gICAgdGhpcy5faWQgPSB1dWlkdjQoKTtcbiAgICB0aGlzLl93b3JsZCA9IHdvcmxkO1xuXG4gICAgdGhpcy5fZXJyb3IgPSBudWxsO1xuXG4gICAgY29uc3QgZnNtVHJhbnNpdGlvbiA9IChuczogRW50aXR5U3RhdGUpOiBFbnRpdHlTdGF0ZSA9PiB7XG4gICAgICBpZiAobnMgPT09ICdlcnJvcicgfHwgdGhpcy5fZXJyb3IpIHJldHVybiAnZXJyb3InO1xuICAgICAgcmV0dXJuIG5zO1xuICAgIH07XG5cbiAgICB0aGlzLl9zdGF0ZSA9IG5ldyBTaW1wbGVGU008RW50aXR5U3RhdGUsIEVudGl0eVN0YXRlPignY3JlYXRpbmcnLCB7XG4gICAgICBjcmVhdGluZzogZnNtVHJhbnNpdGlvbixcbiAgICAgIGNyZWF0ZWQ6IGZzbVRyYW5zaXRpb24sXG4gICAgICBkZXN0cm95aW5nOiBmc21UcmFuc2l0aW9uLFxuICAgICAgZGVzdHJveWVkOiAoKSA9PiAnZGVzdHJveWVkJyxcbiAgICAgIGVycm9yOiAoKSA9PiAnZXJyb3InLFxuICAgIH0pO1xuXG4gICAgLypcbiAgICBSZWdpc3RlcmluZyB3aXRoIHRoZSBXb3JsZC5cbiAgICAqL1xuICAgIHRoaXMuX3dvcmxkLnJlZ2lzdGVyRW50aXR5KHRoaXMpO1xuXG4gICAgaWYgKHRoaXMuX3dvcmxkLnN5c3RlbXMuY29tcE5hbWVzQnlTeXN0ZW1OYW1lLnNpemUgPT09IDApIHtcbiAgICAgIHRoaXMuX3N0YXRlLm5leHQoJ2NyZWF0ZWQnKTtcbiAgICB9XG4gIH1cblxuICAvKiBMaWZlQ3ljbGUgbWV0aG9kcywgbWVhbnQgdG8gYmUgb3ZlcnJpZGRlbiAqL1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMsIG5vLXVudXNlZC12YXJzXG4gIG9uQ3JlYXRlKHdvcmxkOiBXb3JsZDxDVD4pOiB2b2lkIHtcbiAgICAvLyBhYnN0cmFjdFxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycywgbm8tdW51c2VkLXZhcnNcbiAgb25EZXN0cm95KHdvcmxkOiBXb3JsZDxDVD4pOiB2b2lkIHtcbiAgICAvLyBhYnN0cmFjdFxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycywgbm8tdW51c2VkLXZhcnNcbiAgb25Db21wb25lbnRBZGQoYXJnczogRW50aXR5Q29tcEV2ZW50QXJnczxDVD4pOiB2b2lkIHtcbiAgICAvLyBhYnN0cmFjdFxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycywgbm8tdW51c2VkLXZhcnNcbiAgb25UcmFja2VkQ29tcG9uZW50VXBkYXRlKGFyZ3M6IEVudGl0eUNvbXBFdmVudEFyZ3M8Q1Q+KTogdm9pZCB7XG4gICAgLy8gYWJzdHJhY3RcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMsIG5vLXVudXNlZC12YXJzXG4gIG9uQ29tcG9uZW50UmVtb3ZlKGFyZ3M6IEVudGl0eUNvbXBFdmVudEFyZ3M8Q1Q+KTogdm9pZCB7XG4gICAgLy8gYWJzdHJhY3RcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBjb21wb25lbnQgdG8gYW4gRW50aXR5LCBkb2guXG4gICAqL1xuICBhZGQ8VCBleHRlbmRzIENUPihjb21wb25lbnQ6IFQpOiB0aGlzIHtcbiAgICB0aGlzLl93b3JsZC5hZGQodGhpcy5faWQsIGNvbXBvbmVudCk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSB0YWcgdG8gYSBjb21wb25lbnRcbiAgICovXG4gIGFkZFRhZyh0YWc6IFRhZyk6IHRoaXMge1xuICAgIGNvbnN0IGVudGl0eVNldCA9IHRoaXMuX3dvcmxkLmVudGl0aWVzQnlUYWdzLmhhcyh0YWcpXG4gICAgICA/IHRoaXMuX3dvcmxkLmVudGl0aWVzQnlUYWdzLmdldCh0YWcpXG4gICAgICA6IG5ldyBTZXQ8RW50aXR5SWQ+KCk7XG5cbiAgICBpZiAoZW50aXR5U2V0KSB7XG4gICAgICBlbnRpdHlTZXQuYWRkKHRoaXMuX2lkKTtcbiAgICAgIHRoaXMuX3dvcmxkLmVudGl0aWVzQnlUYWdzLnNldCh0YWcsIGVudGl0eVNldCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyBpZiBhbiBlbnRpdHkgaGFzIGEgY29tcG9uZW50IHJlbGF0ZWQgdG8gaXQuXG4gICAqL1xuICBoYXM8VCBleHRlbmRzIENUPihjVHlwZTogQ2xhc3NDb25zdHJ1Y3RvcjxUPik6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGNjID1cbiAgICAgIHRoaXMuX3dvcmxkLmNvbXBvbmVudENvbGxlY3Rpb25zLmdldCh0aGlzLl9pZCkgfHxcbiAgICAgIG5ldyBDb21wb25lbnRDb2xsZWN0aW9uPENUPigpO1xuXG4gICAgcmV0dXJuIGNjLmhhcyhjVHlwZSk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgdG8gc2VlIGlmIGFuIGVudGl0eSB0YWdnZWQgd2l0aCBhIGdpdmVuIHRhZy5cbiAgICovXG4gIGhhc1RhZyh0YWc6IFRhZyk6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLl93b3JsZC5lbnRpdGllc0J5VGFncy5oYXModGFnKSkge1xuICAgICAgY29uc3QgZW50aXR5U2V0ID0gdGhpcy5fd29ybGQuZW50aXRpZXNCeVRhZ3MuZ2V0KHRhZyk7XG4gICAgICBpZiAoZW50aXR5U2V0KSB7XG4gICAgICAgIHJldHVybiBlbnRpdHlTZXQuaGFzKHRoaXMuX2lkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGEgY29tcG9uZW50IHRoYXQgYmVsb25ncyB0byBhbiBlbnRpdHkuXG4gICAqL1xuICBnZXQ8VCBleHRlbmRzIENUPihjbDogQ2xhc3NDb25zdHJ1Y3RvcjxUPik6IFQge1xuICAgIGNvbnN0IGNjID1cbiAgICAgIHRoaXMuX3dvcmxkLmNvbXBvbmVudENvbGxlY3Rpb25zLmdldCh0aGlzLl9pZCkgfHxcbiAgICAgIG5ldyBDb21wb25lbnRDb2xsZWN0aW9uPENUPigpO1xuXG4gICAgY29uc3QgY29tcG9uZW50ID0gY2MuZ2V0PFQ+KGNsKTtcblxuICAgIHJldHVybiBjb21wb25lbnQ7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFsbCBjb21wb25lbnRzIHRoYXQgaGF2ZSBiZWVuIGFkZGVkIHRvIGFuIGVudGl0eSwgdmlhIGEgQ29tcG9uZW50Q29sbGVjdGlvblxuICAgKi9cbiAgZ2V0QWxsKCk6IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+IHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5fd29ybGQuY29tcG9uZW50Q29sbGVjdGlvbnMuZ2V0KHRoaXMuX2lkKSB8fFxuICAgICAgbmV3IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+KClcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBhIGNvbXBvbmVudCBmcm9tIGFuIGVudGl0eS5cbiAgICogQHBhcmFtIGNUeXBlIEEgY29tcG9uZW50IGNsYXNzLCBlZyBNeUNvbXBvbmVudFxuICAgKi9cbiAgcmVtb3ZlKGNUeXBlOiBDbGFzc0NvbnN0cnVjdG9yPENUPik6IHRoaXMge1xuICAgIHRoaXMuX3dvcmxkLnJlbW92ZSh0aGlzLl9pZCwgY1R5cGUpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGEgdGFnIGZyb20gYW4gZW50aXR5XG4gICAqL1xuICByZW1vdmVUYWcodGFnOiBUYWcpOiB0aGlzIHtcbiAgICBpZiAodGhpcy5fd29ybGQuZW50aXRpZXNCeVRhZ3MuaGFzKHRhZykpIHtcbiAgICAgIGNvbnN0IGVudGl0eVNldCA9IHRoaXMuX3dvcmxkLmVudGl0aWVzQnlUYWdzLmdldCh0YWcpO1xuXG4gICAgICBpZiAoZW50aXR5U2V0KSB7XG4gICAgICAgIGVudGl0eVNldC5kZWxldGUodGhpcy5faWQpO1xuXG4gICAgICAgIGlmIChlbnRpdHlTZXQuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgIHRoaXMuX3dvcmxkLmVudGl0aWVzQnlUYWdzLmRlbGV0ZSh0YWcpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqIENsZWFycyBhbGwgY29tcG9uZW50cyBmcm9tIGFuIEVudGl0eSAqL1xuICBjbGVhcigpOiB0aGlzIHtcbiAgICB0aGlzLl93b3JsZC5jbGVhckVudGl0eUNvbXBvbmVudHModGhpcy5faWQpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGFsbCB0YWdzIG9uIGFuIGVudGl0eVxuICAgKi9cbiAgY2xlYXJUYWdzKCk6IHRoaXMge1xuICAgIGZvciAoY29uc3QgW3RhZywgZW50aXR5U2V0XSBvZiB0aGlzLl93b3JsZC5lbnRpdGllc0J5VGFncy5lbnRyaWVzKCkpIHtcbiAgICAgIGVudGl0eVNldC5kZWxldGUodGhpcy5faWQpO1xuXG4gICAgICBpZiAoZW50aXR5U2V0LnNpemUgPT09IDApIHtcbiAgICAgICAgdGhpcy5fd29ybGQuZW50aXRpZXNCeVRhZ3MuZGVsZXRlKHRhZyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgc3RhdGUgb2YgdGhlIGVudGl0eSB0byAnY3JlYXRlZCcuIHRoYXQncyBpdC5cbiAgICovXG4gIGZpbmlzaENyZWF0aW9uKCk6IHZvaWQge1xuICAgIHRoaXMuX3N0YXRlLm5leHQoJ2NyZWF0ZWQnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXN0cm95IGFuIGVudGl0eS4gQWN0dWFsIGRlc3RydWN0aW9uIGlzIGRlZmVycmVkIHVudGlsIGFmdGVyIHRoZSBuZXh0IHBhc3Mgb2Ygc3lzdGVtcy5cbiAgICogVGhpcyBnaXZlcyB0aGUgc3lzdGVtcyBhIGNoYW5jZSB0byBkbyBhbnkgY2xlYW51cCB0aGF0IG1pZ2h0IGJlIG5lZWRlZC5cbiAgICovXG4gIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgLy8gSWYgbm8gc3lzdGVtcyBhcmUgYWRkZWQsIHRoZSBkZXN0cm95IGltbWVkaWF0ZWx5LlxuICAgIGlmICh0aGlzLl93b3JsZC5zeXN0ZW1zLmNvbXBOYW1lc0J5U3lzdGVtTmFtZS5zaXplID09PSAwKSB7XG4gICAgICB0aGlzLmRlc3Ryb3lJbW1lZGlhdGVseSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIE1hcmsgYXMgXCJkZXN0cm95aW5nXCIgc28gdGhhdCBzeXN0ZW1zIGNhbiBhY3Qgb24gaXQgYmVmb3JlIGFjdHVhbGx5IGJlaW5nIGRlc3Ryb3llZC5cbiAgICB0aGlzLl9zdGF0ZS5uZXh0KCdkZXN0cm95aW5nJyk7XG4gIH1cblxuICBkZXN0cm95SW1tZWRpYXRlbHkoKTogdm9pZCB7XG4gICAgLy8gUmlnaHQgbm93IGNhbGxpbmcgYmVmb3JlIHRoZSBhY3R1YWwgZGVzdG9yeWluZyBvZiB0aGUgZW50aXR5LlxuICAgIC8vIE1pZ2h0IHdhbnQgdG8gY2hhbmdlIHRoaXMgdG8gcG9zdCBkZXN0cnVjdGlvbiBpbiB0aGUgZnV0dXJlLCB3aG8ga25vd3MuXG4gICAgdGhpcy5vbkRlc3Ryb3kodGhpcy5fd29ybGQpO1xuXG4gICAgLy8gQWN0dWFsbHkgZGVzdHJveSBlbnRpdHkuXG4gICAgdGhpcy5fd29ybGQuZGVzdHJveUVudGl0eSh0aGlzLl9pZCk7IC8vIHNob3VsZCByZXR1cm4gYW4gZXJyb3I/P1xuXG4gICAgdGhpcy5fc3RhdGUubmV4dCgnZGVzdHJveWVkJyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFsbCBjb21wb25lbnRzIHRoYXQgaGF2ZSBiZWVuIGFkZGVkIHRvIGFuIGVudGl0eSwgdmlhIGEgQ29tcG9uZW50Q29sbGVjdGlvbi5cbiAgICogRG9lcyB0aGUgc2FtZSB0aGluZyBhcyBlbnRpdHlJbnN0YW5jZS5nZXRBbGwoKS5cbiAgICovXG4gIGdldCBjb21wb25lbnRzKCk6IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+IHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5fd29ybGQuY29tcG9uZW50Q29sbGVjdGlvbnMuZ2V0KHRoaXMuX2lkKSB8fFxuICAgICAgbmV3IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+KClcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHJpZXZlcyBhbGwgdGhlIHRhZ3MgdGhhdCBoYXZlIGJlZW4gYWRkZWQgdG8gdGhpcyBlbnRpdHkuXG4gICAqL1xuICBnZXQgdGFncygpOiBTZXQ8VGFnPiB7XG4gICAgY29uc3QgdGFncyA9IG5ldyBTZXQ8VGFnPigpO1xuICAgIGZvciAoY29uc3QgW3RhZywgZW50aXR5U2V0XSBvZiB0aGlzLl93b3JsZC5lbnRpdGllc0J5VGFncy5lbnRyaWVzKCkpIHtcbiAgICAgIGlmIChlbnRpdHlTZXQuaGFzKHRoaXMuX2lkKSkge1xuICAgICAgICB0YWdzLmFkZCh0YWcpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YWdzO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnQgRW50aXR5IHRvIGEgRGV2RW50aXR5LiBWZXJ5IGhlbHBmdWwgaW4gZm9yIGRlYnVnZ2luZy5cbiAgICovXG4gIHRvRGV2RW50aXR5KCk6IERldkVudGl0eTxDVD4ge1xuICAgIHJldHVybiBuZXcgRGV2RW50aXR5PENUPih0aGlzLCB0aGlzLl93b3JsZCk7XG4gIH1cbn1cbiIsImltcG9ydCBXb3JsZCBmcm9tICcuL1dvcmxkJztcbmltcG9ydCBEZXZFbnRpdHkgZnJvbSAnLi9EZXZFbnRpdHknO1xuXG5pbnRlcmZhY2UgRGV2U3lzdGVtQ29tcHMge1xuICBzeXN0ZW06IHN0cmluZztcbiAgY29tcG9uZW50czogc3RyaW5nO1xufVxuXG5jbGFzcyBEZXZUb29sczxDVD4ge1xuICB3b3JsZDogV29ybGQ8Q1Q+O1xuXG4gIGNvbnN0cnVjdG9yKHdvcmxkOiBXb3JsZDxDVD4pIHtcbiAgICB0aGlzLndvcmxkID0gd29ybGQ7XG4gIH1cbiAgLyoqXG4gICAqIGRpc3BsYXkgdGhlIGFsbCBzeXN0ZW1zIG9mIHRoZSB3b3JsZCwgYW5kIHRoZSBjb21wb25lbnRzIHJlcXVpcmVkIGJ5IGVhY2ggc3lzdGVtLlxuICAgKiBTdXBlciBoZWxwZnVsIHRvIHVzZSB3aXRoIGNvbnNvbGUudGFibGUoKVxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBcbiAgICogY29uc29sZS50YWJsZSh3b3JsZC5kZXYuc3lzdGVtQ29tcG9uZW50cyk7XG4gICAqIGBgYFxuICAgKi9cbiAgZ2V0IHN5c3RlbUNvbXBvbmVudHMoKTogRGV2U3lzdGVtQ29tcHNbXSB7XG4gICAgY29uc3QgY29tcHNCeVN5c3RlbXMgPSBbXTtcblxuICAgIGZvciAoY29uc3QgW3N5c3RlbSwgY29tcE5hbWVzXSBvZiB0aGlzLndvcmxkLnN5c3RlbXNcbiAgICAgIC5jb21wTmFtZXNCeVN5c3RlbU5hbWUpIHtcbiAgICAgIGNvbXBzQnlTeXN0ZW1zLnB1c2goeyBzeXN0ZW0sIGNvbXBvbmVudHM6IGNvbXBOYW1lcy5qb2luKCcsICcpIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBjb21wc0J5U3lzdGVtcztcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYW4gYXJyYXkgb2YgRGV2RW50aXRlcy4gQ2FuIGJlIHZlcnkgaGVscGZ1bCBmb3IgdGhpbmdzIGxpa2UgaW5zcGVjdGluZyBjb21wb25lbnQgc3RhdGUsXG4gICAqIGFuZCB3aGljaCBzeXN0ZW1zIHdpbGwgYmUgY2FsbGVkIG9uIGFuIGVudGl0eS5cbiAgICogQGV4YW1wbGVcbiAgICogYGBgXG4gICAqIGNvbnNvbGUudGFibGUod29ybGQuZGV2LmVudGl0aWVzKTtcbiAgICpcbiAgICogLy8gUHJvIHRpcCEgdHJ5IGRpc3BsYXlpbmcgYSB0YWJsZSBvZiBlbnRpdGllcyB3aXRoIGNvbnNvbGUudGFibGUgYW5kIERldkVudGl0eS50b1RhYmxlUm93KCkuXG4gICAqIGNvbnNvbGUudGFibGUod29ybGQuZGV2LmVudGl0aWVzLm1hcChkZXZFbnRpdHkgPT4gZGV2RW50aXR5LnRvVGFibGVSb3coKSkpO1xuICAgKiBgYGBcbiAgICovXG5cbiAgZ2V0IGVudGl0aWVzKCk6IERldkVudGl0eTxDVD5bXSB7XG4gICAgcmV0dXJuIFsuLi50aGlzLndvcmxkLmVudGl0aWVzLnZhbHVlcygpXS5tYXAoZSA9PiBlLnRvRGV2RW50aXR5KCkpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERldlRvb2xzO1xuIiwiaW1wb3J0IEVudGl0eSwgeyBFbnRpdHlJZCB9IGZyb20gJy4vRW50aXR5JztcbmltcG9ydCBXb3JsZCwgeyBDbGFzc0NvbnN0cnVjdG9yIH0gZnJvbSAnLi9Xb3JsZCc7XG5pbXBvcnQgQ29tcG9uZW50Q29sbGVjdGlvbiBmcm9tICcuL0NvbXBvbmVudENvbGxlY3Rpb24nO1xuXG4vKipcbiAqIEFyZ3VtZW50cyB0aGF0IGFyZSBwYXNzZWQgaW50byBhIFN5c3RlbSBmdW5jdGlvbiBvbiBlYWNoIGl0ZXJhdGlvbi5cbiAqIFRoaXMgaXMgaG93IHlvdSBhY2NlcyB0aGluZ3MgbGlrZSB0aGUgZW50aXR5IHRoYXQgcGFydGljdWxhciBlbnRpdHkgdG8gYWN0IG9uLFxuICogYXMgd2VsbCBhcyBzb21lIG90aGVyIGhlbHBmdWwgcGFyYW1zIGxpa2UgaWYgdGhlIGVudGl0eSBpcyB0aGUgZmlyc3Qgb3IgbGFzdCBlbnRpdHlcbiAqIGluIHRoZSBncm91cCBvZiBlbnRpdGllcyB0aGF0IGJlaW5nIGl0ZXJhdGVkIG92ZXIuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3lzdGVtRnVuY0FyZ3M8Q1Q+IHtcbiAgLyoqXG4gICAqIFRoZSBjdXJyZW50IGVudGl0eSBiZWluZyBpdGVyYXRlZC5cbiAgICovXG4gIGVudGl0eTogRW50aXR5PENUPjtcbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnRzIHRoYXQgYmVsb25nIHRvIHRoZSBlbnRpdHlcbiAgICovXG4gIGNvbXBvbmVudHM6IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+O1xuICAvKipcbiAgICogVGhlIFdvcmxkIGluc3RhbmNlLlxuICAgKiBVc2UgdGhpcyB0byBhY2Nlc3Mgb3RoZXIgZW50aXRpZXMuXG4gICAqL1xuICB3b3JsZDogV29ybGQ8Q1Q+O1xuICBpbmRleDogbnVtYmVyO1xuICBzaXplOiBudW1iZXI7XG4gIC8qKlxuICAgKiBJcyB0aGUgZmlyc3QgZW50aXR5IHRvIGJlIGl0ZXJhdGVkIG9uIHRoaXMgcnVuIG9mIGEgc3lzdGVtLlxuICAgKiBIZWxwZnVsIGZvciBzZXR0aW5nIHVwIHN0YXRlIHRoYXQgaXMgdGhlIHNhbWUgZm9yIGFsbCBlbnRpdGllcyBvbmx5IG9uY2UuXG4gICAqL1xuICBpc0ZpcnN0OiBib29sZWFuO1xuICAvKipcbiAgICogSXMgdGhlIGxhc3QgZW50aXR5IHRvIGJlIGl0ZXJhdGVkIG9uIHRoaXMgcnVuIG9mIGEgc3lzdGVtLlxuICAgKiBDYW4gYmUgaGVscGZ1bCB0byB0ZWFyIGRvd24gYW55dGhpbmcgdGhhdCBzaG91bGQgYmUgZGVhbHQgd2l0aCBhZnRlciBhbGwgdGhlIGVudGl0ZXMgaGF2ZSByYW4uXG4gICAqL1xuICBpc0xhc3Q6IGJvb2xlYW47XG59XG5cbi8qKlxuICogRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbiBhIHN5c3RlbSBpcyBydW4uXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuZXhwb3J0IHR5cGUgU3lzdGVtRnVuYzxDVD4gPSAoc3l0ZW1GdW5jQXJnczogU3lzdGVtRnVuY0FyZ3M8Q1Q+KSA9PiB2b2lkO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTeXN0ZW1zPENUPiB7XG4gIHdvcmxkOiBXb3JsZDxDVD47XG5cbiAgc3lzdGVtRnVuY0J5U3lzdGVtTmFtZTogTWFwPHN0cmluZywgeyBmdW5jOiBTeXN0ZW1GdW5jPENUPjsga2V5OiBzdHJpbmcgfT47XG5cbiAgY29tcE5hbWVzQnlTeXN0ZW1OYW1lOiBNYXA8c3RyaW5nLCBzdHJpbmdbXT47XG5cbiAgY29uc3RydWN0b3Iod29ybGQ6IFdvcmxkPENUPikge1xuICAgIHRoaXMud29ybGQgPSB3b3JsZDtcbiAgICB0aGlzLnN5c3RlbUZ1bmNCeVN5c3RlbU5hbWUgPSBuZXcgTWFwKCk7XG4gICAgdGhpcy5jb21wTmFtZXNCeVN5c3RlbU5hbWUgPSBuZXcgTWFwKCk7XG4gIH1cblxuICBhZGQoXG4gICAgY1R5cGVzOiBDbGFzc0NvbnN0cnVjdG9yPENUPltdLFxuICAgIHN5c3RlbUZ1bmM6IFN5c3RlbUZ1bmM8Q1Q+LFxuICAgIGNhbm9uaWNhbEtleTogc3RyaW5nLCAvLyBBY2NlcHQgdGhlIHByZS1jb21wdXRlZCBrZXlcbiAgICBmdW5jTmFtZT86IHN0cmluZ1xuICApOiB0aGlzIHtcbiAgICBjb25zdCBjTmFtZXMgPSBjVHlwZXMubWFwKGN0ID0+IGN0Lm5hbWUpO1xuXG4gICAgbGV0IG5hbWUgPSBmdW5jTmFtZSB8fCBzeXN0ZW1GdW5jLm5hbWU7XG4gICAgaWYgKG5hbWUgPT09ICcnIHx8ICFuYW1lKSB7XG4gICAgICAvLyBVc2UgYSBtb3JlIHJvYnVzdCB3YXkgdG8gZ2V0IGEgdW5pcXVlIG5hbWUgaWYgbmVlZGVkLFxuICAgICAgLy8gZm9yIG5vdyB3ZSdsbCB1c2UgdGhlIGNhbm9uaWNhbCBrZXkgaWYgbm8gbmFtZSBpcyBhdmFpbGFibGUuXG4gICAgICBuYW1lID0gY2Fub25pY2FsS2V5O1xuICAgIH1cblxuICAgIHRoaXMuc3lzdGVtRnVuY0J5U3lzdGVtTmFtZS5zZXQobmFtZSwge1xuICAgICAgZnVuYzogc3lzdGVtRnVuYyxcbiAgICAgIGtleTogY2Fub25pY2FsS2V5LFxuICAgIH0pO1xuICAgIHRoaXMuY29tcE5hbWVzQnlTeXN0ZW1OYW1lLnNldChuYW1lLCBjTmFtZXMpO1xuXG4gICAgLy8gVXNlIHRoZSBjYW5vbmljYWxLZXkgcGFzc2VkIGZyb20gdGhlIFdvcmxkXG4gICAgaWYgKCF0aGlzLndvcmxkLmVudGl0aWVzQnlDVHlwZXMuaGFzKGNhbm9uaWNhbEtleSkpIHtcbiAgICAgIHRoaXMud29ybGQuZW50aXRpZXNCeUNUeXBlcy5zZXQoY2Fub25pY2FsS2V5LCBuZXcgU2V0PEVudGl0eUlkPigpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHJ1bigpOiB2b2lkIHtcbiAgICAvLyAxLiBFRkZJQ0lFTlRMWSBHQVRIRVIgRU5USVRJRVMgTkVFRElORyBMSUZFQ1lDTEUgQ0hBTkdFU1xuICAgIC8vIEluc3RlYWQgb2YgbXVsdGlwbGUgbG9vcHMsIHdlIGZpbmQgYWxsIGVudGl0aWVzIHRvIGJlIGNyZWF0ZWQgb3JcbiAgICAvLyBkZXN0cm95ZWQgaW4gYSBzaW5nbGUgcGFzcyBvdmVyIHRoZSB3b3JsZCdzIGVudGl0aWVzLlxuICAgIGNvbnN0IGVudGl0aWVzVG9DcmVhdGU6IEVudGl0eTxDVD5bXSA9IFtdO1xuICAgIGNvbnN0IGVudGl0aWVzVG9EZXN0cm95OiBFbnRpdHk8Q1Q+W10gPSBbXTtcblxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIHRoaXMud29ybGQuZW50aXRpZXMudmFsdWVzKCkpIHtcbiAgICAgIGlmIChlbnRpdHkuc3RhdGUgPT09ICdjcmVhdGluZycpIHtcbiAgICAgICAgZW50aXRpZXNUb0NyZWF0ZS5wdXNoKGVudGl0eSk7XG4gICAgICB9IGVsc2UgaWYgKGVudGl0eS5zdGF0ZSA9PT0gJ2Rlc3Ryb3lpbmcnKSB7XG4gICAgICAgIGVudGl0aWVzVG9EZXN0cm95LnB1c2goZW50aXR5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyAyLiBSVU4gQUxMIFNZU1RFTVNcbiAgICAvLyBXZSBpdGVyYXRlIG92ZXIgdGhlIHN5c3RlbSBtYXAsIHdoaWNoIG5vdyBjb250YWlucyB0aGUgZnVuY3Rpb24gYW5kIHRoZSBjb3JyZWN0IGtleS5cbiAgICBmb3IgKGNvbnN0IHtcbiAgICAgIGZ1bmMsXG4gICAgICBrZXk6IGNhbm9uaWNhbEtleSxcbiAgICB9IG9mIHRoaXMuc3lzdGVtRnVuY0J5U3lzdGVtTmFtZS52YWx1ZXMoKSkge1xuICAgICAgLy8gVXNlIHRoZSBjYW5vbmljYWxLZXkgdG8gZ2V0IHRoZSBwcmVjaXNlIHNldCBvZiBlbnRpdGllcyBmb3IgdGhpcyBzeXN0ZW0uXG4gICAgICBjb25zdCBlbnRpdHlJZFNldCA9XG4gICAgICAgIHRoaXMud29ybGQuZW50aXRpZXNCeUNUeXBlcy5nZXQoY2Fub25pY2FsS2V5KSB8fCBuZXcgU2V0KCk7XG4gICAgICBjb25zdCBzaXplID0gZW50aXR5SWRTZXQuc2l6ZTtcblxuICAgICAgLy8gQSBzbWFsbCBvcHRpbWl6YXRpb246IGlmIG5vIGVudGl0aWVzIG1hdGNoIHRoaXMgc3lzdGVtLCBza2lwIGl0LlxuICAgICAgaWYgKHNpemUgPT09IDApIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICBmb3IgKGNvbnN0IGVpZCBvZiBlbnRpdHlJZFNldCkge1xuICAgICAgICAvLyBSZXRyaWV2ZSB0aGUgZW50aXR5IGFuZCBpdHMgY29tcG9uZW50cyBmb3IgdGhpcyBpdGVyYXRpb24uXG4gICAgICAgIGNvbnN0IGVudGl0eSA9IHRoaXMud29ybGQuZW50aXRpZXMuZ2V0KGVpZCk7XG5cbiAgICAgICAgLy8gRGVmZW5zaXZlIGNoZWNrOiBpZiBlbnRpdHkgd2FzIHJlbW92ZWQgbWlkLWxvb3AsIHNraXAuXG4gICAgICAgIGlmICghZW50aXR5KSBjb250aW51ZTtcblxuICAgICAgICBjb25zdCBjb21wb25lbnRzID1cbiAgICAgICAgICB0aGlzLndvcmxkLmNvbXBvbmVudENvbGxlY3Rpb25zLmdldChlaWQpIHx8XG4gICAgICAgICAgbmV3IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+KCk7XG5cbiAgICAgICAgLy8gQ29uc3RydWN0IHRoZSBhcmd1bWVudHMgb2JqZWN0IGZvciB0aGUgc3lzdGVtIGZ1bmN0aW9uLlxuICAgICAgICBjb25zdCBhcmdzOiBTeXN0ZW1GdW5jQXJnczxDVD4gPSB7XG4gICAgICAgICAgZW50aXR5LFxuICAgICAgICAgIGNvbXBvbmVudHMsXG4gICAgICAgICAgd29ybGQ6IHRoaXMud29ybGQsXG4gICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgc2l6ZSwgLy8gUGFzcyB0aGUgY29ycmVjdCBzaXplIG9mIHRoZSBjdXJyZW50IGVudGl0eSBzZXQuXG4gICAgICAgICAgaXNGaXJzdDogaW5kZXggPT09IDAsXG4gICAgICAgICAgaXNMYXN0OiBpbmRleCArIDEgPT09IHNpemUsXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgc3lzdGVtJ3MgbG9naWMuXG4gICAgICAgIGZ1bmMoYXJncyk7XG5cbiAgICAgICAgaW5kZXgrKztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyAzLiBGSU5BTElaRSBMSUZFQ1lDTEUgQ0hBTkdFU1xuICAgIC8vIFRoaXMgaGFwcGVucyAqYWZ0ZXIqIGFsbCBzeXN0ZW1zIGhhdmUgaGFkIGEgY2hhbmNlIHRvIHJ1bi5cblxuICAgIC8vIEZpbmFsaXplIHRoZSBjcmVhdGlvbiBvZiBhbGwgbmV3IGVudGl0aWVzLlxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGVudGl0aWVzVG9DcmVhdGUpIHtcbiAgICAgIGVudGl0eS5maW5pc2hDcmVhdGlvbigpO1xuICAgIH1cblxuICAgIC8vIEZpbmFsaXplIHRoZSBkZXN0cnVjdGlvbiBvZiBhbGwgbWFya2VkIGVudGl0aWVzLlxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGVudGl0aWVzVG9EZXN0cm95KSB7XG4gICAgICBlbnRpdHkuZGVzdHJveUltbWVkaWF0ZWx5KCk7XG4gICAgfVxuICB9XG5cbiAgLypcbiAgICBUT0RPOiBOaWNlIHRvIGhhdmUgb3B0aW9ucyBoZXJlOlxuICAgICAgLSBzeXN0ZW1zLmFjdGl2ZVN5c3RlbXMgPSBuZXcgU2V0KCk7IC8vIGlmIG5vdCBpbiBzZXQsIHN5c3RlbSBkb2Vzbid0IHJ1bi5cbiAgICAgIC0gc3lzdGVtcy5kZWFjdGl2YXRlU3lzdGVtKCdzeXN0ZW1OYW1lJykgLy8gcmVtb3ZlIHN5c3RlbSBmcm9tIGFjdGl2ZVN5c3RlbXNcbiAgICAgIC0gc3lzdGVtcy5hY3RpdmF0ZVN5c3RlbSgnc3lzdGVtTmFtZSkgLy8gYWRkcyBzeXN0ZW0gYmFjayB0byBhY3RpdmVTeXN0ZW1zXG4gICAgICAtIHN5c3RlbXMucGF1c2UoKSAvLyBwYXVzZXMgcnVubmluZyBvZiBzeXN0ZW1zLiBiYXNpY2FsbHkgcmV0dXJuIGltbWVkaWF0ZWx5IG9uIHJ1bigpLlxuICAgICAgLSBzeXN0ZW1zLnJlc3VtZSgpIC8vIHJlc3VtZSBydW5uaW5nIG9mIHN5c3RlbXMuXG4gICovXG59XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IFdvcmxkLCB7IENsYXNzQ29uc3RydWN0b3IgfSBmcm9tICcuL1dvcmxkJztcbmltcG9ydCBFbnRpdHksIHsgRW50aXR5SWQgfSBmcm9tICcuL0VudGl0eSc7XG5cbi8vIFdhaXRpbmcgZm9yIFR5cGVzY3JpcHQgNC4yIHRvIGNvbWUgb3V0IHNvIHRoYXQgU3ltYm9scyBhcmUgc3VwcG9yZGVkIGtleXMuXG5leHBvcnQgY29uc3QgVHJhY2tlZENvbXBTeW1ib2xLZXlzID0ge1xuICBpc1RyYWNrZWQ6IFN5bWJvbC5mb3IoJ2Vjcy50cmFja2VkQ29tcG9uZW50LmlzVHJhY2tlZCcpLFxuICB3b3JsZDogU3ltYm9sLmZvcignZWNzLnRyYWNrZWRDb21wb25lbnQud29ybGQnKSxcbiAgZW50aXR5SURzOiBTeW1ib2wuZm9yKCdlY3MudHJhY2tlZENvbXBvbmVudC5lbnRpdHlJRHMnKSxcbiAgZ2V0RW50aXRpZXM6IFN5bWJvbC5mb3IoJ2Vjcy50cmFja2VkQ29tcG9uZW50LmdldEVudGl0aWVzJyksXG4gIHNldFdvcmxkOiBTeW1ib2wuZm9yKCdlY3MudHJhY2tlZENvbXBvbmVudC5zZXRXb3JsZCcpLFxuICBvbkFkZDogU3ltYm9sLmZvcignZWNzLnRyYWNrZWRDb21wb25lbnQub25BZGQnKSxcbiAgb25VcGRhdGU6IFN5bWJvbC5mb3IoJ2Vjcy50cmFja2VkQ29tcG9uZW50Lm9uVXBkYXRlJyksXG4gIG9uUmVtb3ZlOiBTeW1ib2wuZm9yKCdlY3MudHJhY2tlZENvbXBvbmVudC5vblJlbW92ZScpLFxufSBhcyBjb25zdDtcblxuLy9AdHMtaWdub3JlXG50eXBlIFRyYWNrZWRDb21wb25lbnQ8Q1Q+ID0ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBuZXcgKC4uLmFyZ3M6IGFueVtdKTogQ1Q7XG5cbiAgLy9AdHMtaWdub3JlXG4gIFtUcmFja2VkQ29tcFN5bWJvbEtleXMuaXNUcmFja2VkXTogYm9vbGVhbjtcbiAgLy9AdHMtaWdub3JlXG4gIFtUcmFja2VkQ29tcFN5bWJvbEtleXMuc2V0V29ybGRdOiAod29ybGQ6IFdvcmxkPENUPikgPT4gdm9pZDtcbiAgLy9AdHMtaWdub3JlXG4gIFtUcmFja2VkQ29tcFN5bWJvbEtleXMud29ybGRdOiBXb3JsZDxDVD47XG4gIC8vQHRzLWlnbm9yZVxuICBbVHJhY2tlZENvbXBTeW1ib2xLZXlzLmVudGl0eUlEc106IFNldDxFbnRpdHlJZD47XG4gIC8vQHRzLWlnbm9yZVxuICBbVHJhY2tlZENvbXBTeW1ib2xLZXlzLmdldEVudGl0aWVzXTogKCkgPT4gTWFwPEVudGl0eUlkLCBFbnRpdHk8Q1Q+PjtcbiAgLy9AdHMtaWdub3JlXG4gIFtUcmFja2VkQ29tcFN5bWJvbEtleXMub25BZGRdOiAod29ybGQ6IFdvcmxkPENUPiwgZW50aXR5OiBFbnRpdHk8Q1Q+KSA9PiB2b2lkO1xuICAvL0B0cy1pZ25vcmVcbiAgW1RyYWNrZWRDb21wU3ltYm9sS2V5cy5vblJlbW92ZV06IChcbiAgICB3b3JsZDogV29ybGQ8Q1Q+LFxuICAgIGVudGl0eTogRW50aXR5PENUPlxuICApID0+IHZvaWQ7XG59O1xuXG5pbnRlcmZhY2UgQWRkRXZlbnRBcmdzPENUPiB7XG4gIHdvcmxkOiBXb3JsZDxDVD47XG4gIGNvbXBvbmVudDogQ1Q7XG4gIGVudGl0eTogRW50aXR5PENUPjtcbiAgZW50aXRpZXM6IE1hcDxFbnRpdHlJZCwgRW50aXR5PENUPj47XG59XG5cbmludGVyZmFjZSBVcGRhdGVFdmVudEFyZ3M8Q1Q+IHtcbiAgZW50aXRpZXM6IE1hcDxFbnRpdHlJZCwgRW50aXR5PENUPj47XG4gIGNvbXBvbmVudDogQ1Q7XG4gIHdvcmxkOiBXb3JsZDxDVD47XG4gIHByZXZpb3VzVmFsOiBDVFtrZXlvZiBDVF07XG4gIHByb3BlcnR5OiBrZXlvZiBDVDtcbn1cblxuaW50ZXJmYWNlIFJlbW92ZUV2ZW50QXJnczxDVD4ge1xuICB3b3JsZDogV29ybGQ8Q1Q+O1xuICBjb21wb25lbnQ6IENUO1xuICBlbnRpdHk6IEVudGl0eTxDVD47XG4gIGVudGl0aWVzOiBNYXA8RW50aXR5SWQsIEVudGl0eTxDVD4+O1xufVxuXG5pbnRlcmZhY2UgVHJhY2tlZEV2ZW50SGFuZGxlcnM8Q1Q+IHtcbiAgb25BZGQ/OiAoYXJnczogQWRkRXZlbnRBcmdzPENUPikgPT4gdm9pZDtcbiAgb25VcGRhdGU/OiAoYXJnczogVXBkYXRlRXZlbnRBcmdzPENUPikgPT4gdm9pZDtcbiAgb25SZW1vdmU/OiAoYXJnczogUmVtb3ZlRXZlbnRBcmdzPENUPikgPT4gdm9pZDtcbn1cblxuLy8gTk9URTogUmVhbGx5IG5lZWQgdG8gZ2V0IHN5bWJvbHMgd29ya2luZyBhcyBrZXlzIGluIFR5cGVzY3JpcHQuXG4vLyAgICAgICBVbnRpbCB0aGVuIHdpbGwgaGF2ZSB0byBjYXN0IHRvIGtleW9mIENULlxuLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTQzMjQzMjMvdHlwZXNjcmlwdC10eXBlLXN0cmluZy1pcy1ub3QtYXNzaWduYWJsZS10by10eXBlLWtleW9mXG4vLyBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvcHVsbC8yNjc5N1xuZnVuY3Rpb24gY3JlYXRlQ2xhc3NJbnN0YW5jZVByb3h5SGFuZGxlcnM8Q1Q+KFxuICB0cmFja2VkRXZlbnRIYW5kbGVyczogVHJhY2tlZEV2ZW50SGFuZGxlcnM8Q1Q+XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4pOiBQcm94eUhhbmRsZXI8YW55PiB7XG4gIGNvbnN0IHVwZGF0ZWRQcm9wcyA9IG5ldyBTZXQoKTtcbiAgcmV0dXJuIHtcbiAgICBzZXQoY29tcG9uZW50OiBDVCwgcHJvcGVydHk6IHN0cmluZywgdmFsdWU6IENUW2tleW9mIENUXSkge1xuICAgICAgdXBkYXRlZFByb3BzLmFkZChwcm9wZXJ0eSk7XG5cbiAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgY29uc3Qgd29ybGQgPSBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLndvcmxkXSBhcyBXb3JsZDxDVD47XG5cbiAgICAgIGNvbnN0IHByZXZpb3VzVmFsID0gY29tcG9uZW50W3Byb3BlcnR5IGFzIGtleW9mIENUXTtcblxuICAgICAgY29tcG9uZW50W3Byb3BlcnR5IGFzIGtleW9mIENUXSA9IHZhbHVlO1xuXG4gICAgICAvL0B0cy1pZ25vcmVcbiAgICAgIGNvbnN0IGVudGl0aWVzID0gY29tcG9uZW50W1RyYWNrZWRDb21wU3ltYm9sS2V5cy5nZXRFbnRpdGllc10oXG4gICAgICAgIHdvcmxkXG4gICAgICApIGFzIE1hcDxFbnRpdHlJZCwgRW50aXR5PENUPj47XG5cbiAgICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGVudGl0aWVzLnZhbHVlcygpKSB7XG4gICAgICAgIGVudGl0eS5vblRyYWNrZWRDb21wb25lbnRVcGRhdGUoeyB3b3JsZCwgY29tcG9uZW50IH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAodHJhY2tlZEV2ZW50SGFuZGxlcnMub25VcGRhdGUpIHtcbiAgICAgICAgdHJhY2tlZEV2ZW50SGFuZGxlcnMub25VcGRhdGUoe1xuICAgICAgICAgIGVudGl0aWVzLFxuICAgICAgICAgIHdvcmxkLFxuICAgICAgICAgIGNvbXBvbmVudCxcbiAgICAgICAgICBwcmV2aW91c1ZhbCxcbiAgICAgICAgICBwcm9wZXJ0eTogcHJvcGVydHkgYXMga2V5b2YgQ1QsXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhY2tDb21wb25lbnQ8Q1Q+KFxuICBDb21wQ2xhc3M6IENsYXNzQ29uc3RydWN0b3I8Q1Q+LFxuICB0cmFja2VkRXZlbnRIYW5kbGVyczogVHJhY2tlZEV2ZW50SGFuZGxlcnM8Q1Q+XG4pOiBUcmFja2VkQ29tcG9uZW50PENUPiB7XG4gIHJldHVybiBuZXcgUHJveHkoQ29tcENsYXNzLCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBjb25zdHJ1Y3QoQ29tcG9uZW50OiBhbnksIGFyZ3M6IGFueSkge1xuICAgICAgY29uc3QgY29tcG9uZW50ID0gbmV3IENvbXBvbmVudCguLi5hcmdzKSBhcyBDVCAmIFRyYWNrZWRDb21wb25lbnQ8Q1Q+O1xuXG4gICAgICAvLyBGb3IgdXNlIGluIGlkZW50aWZpbmcgYSBcInRyYWNrZWRcIiBjbGFzcyB0aHJvdWdoIHRoZSBwcm94eS5cbiAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgY29tcG9uZW50W1RyYWNrZWRDb21wU3ltYm9sS2V5cy5pc1RyYWNrZWRdID0gdHJ1ZTtcblxuICAgICAgLy9AdHMtaWdub3JlXG4gICAgICBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLnNldFdvcmxkXSA9ICh3b3JsZDogV29ybGQ8Q1Q+KSA9PiB7XG4gICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLndvcmxkXSA9IHdvcmxkO1xuICAgICAgfTtcblxuICAgICAgLy8gSG9sZHMgZW50aXRpZXMgdGhhdCB0aGlzIGNvbXBvbmVudCBoYXMgYmVlbiBhZGRlZCB0by5cbiAgICAgIC8vIEFkZGVkIGFuZCByZW1vdmVkIGluIHdvcmxkLmFkZCgpL3dvcmxkLnJlbW92ZSgpLlxuICAgICAgLy9AdHMtaWdub3JlXG4gICAgICBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLmVudGl0eUlEc10gPSBuZXcgU2V0KCk7XG5cbiAgICAgIC8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgdGhlIEVudGl0aWVzIGZyb20gZW50aXR5SURzXG4gICAgICAvL0B0cy1pZ25vcmVcbiAgICAgIGNvbXBvbmVudFtUcmFja2VkQ29tcFN5bWJvbEtleXMuZ2V0RW50aXRpZXNdID0gKFxuICAgICAgICB3b3JsZDogV29ybGQ8Q1Q+XG4gICAgICApOiBNYXA8RW50aXR5SWQsIEVudGl0eTxDVD4+ID0+IHtcbiAgICAgICAgY29uc3QgZW50aXRpZXMgPSBuZXcgTWFwPEVudGl0eUlkLCBFbnRpdHk8Q1Q+PigpO1xuXG4gICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICBmb3IgKGNvbnN0IGVpZCBvZiBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLmVudGl0eUlEc10pIHtcbiAgICAgICAgICBjb25zdCBlbnRpdHkgPSB3b3JsZC5lbnRpdGllcy5nZXQoZWlkKTtcbiAgICAgICAgICBpZiAoZW50aXR5KSB7XG4gICAgICAgICAgICBlbnRpdGllcy5zZXQoZWlkLCBlbnRpdHkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBlbnRpdGllcztcbiAgICAgIH07XG5cbiAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgY29tcG9uZW50W1RyYWNrZWRDb21wU3ltYm9sS2V5cy5vbkFkZF0gPSAoXG4gICAgICAgIHdvcmxkOiBXb3JsZDxDVD4sXG4gICAgICAgIGVudGl0eTogRW50aXR5PENUPlxuICAgICAgKSA9PiB7XG4gICAgICAgIGlmICh0cmFja2VkRXZlbnRIYW5kbGVycy5vbkFkZCkge1xuICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgIGNvbnN0IGVudGl0aWVzID0gY29tcG9uZW50W1RyYWNrZWRDb21wU3ltYm9sS2V5cy5nZXRFbnRpdGllc10oXG4gICAgICAgICAgICB3b3JsZFxuICAgICAgICAgICkgYXMgTWFwPEVudGl0eUlkLCBFbnRpdHk8Q1Q+PjtcblxuICAgICAgICAgIHRyYWNrZWRFdmVudEhhbmRsZXJzLm9uQWRkKHsgY29tcG9uZW50LCB3b3JsZCwgZW50aXR5LCBlbnRpdGllcyB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgLy9AdHMtaWdub3JlXG4gICAgICBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLm9uUmVtb3ZlXSA9IChcbiAgICAgICAgd29ybGQ6IFdvcmxkPENUPixcbiAgICAgICAgZW50aXR5OiBFbnRpdHk8Q1Q+XG4gICAgICApID0+IHtcbiAgICAgICAgaWYgKHRyYWNrZWRFdmVudEhhbmRsZXJzLm9uUmVtb3ZlKSB7XG4gICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgY29uc3QgZW50aXRpZXMgPSBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLmdldEVudGl0aWVzXShcbiAgICAgICAgICAgIHdvcmxkXG4gICAgICAgICAgKSBhcyBNYXA8RW50aXR5SWQsIEVudGl0eTxDVD4+O1xuXG4gICAgICAgICAgdHJhY2tlZEV2ZW50SGFuZGxlcnMub25SZW1vdmUoeyBjb21wb25lbnQsIHdvcmxkLCBlbnRpdHksIGVudGl0aWVzIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gbmV3IFByb3h5KFxuICAgICAgICBjb21wb25lbnQsXG4gICAgICAgIGNyZWF0ZUNsYXNzSW5zdGFuY2VQcm94eUhhbmRsZXJzKHRyYWNrZWRFdmVudEhhbmRsZXJzKVxuICAgICAgKTtcbiAgICB9LFxuICB9KTtcbn1cbiIsImltcG9ydCBFbnRpdHksIHsgRW50aXR5SWQgfSBmcm9tICcuL0VudGl0eSc7XG5pbXBvcnQgQ29tcG9uZW50Q29sbGVjdGlvbiBmcm9tICcuL0NvbXBvbmVudENvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVGFnIH0gZnJvbSAnLi9UYWcnO1xuaW1wb3J0IHsgU3lzdGVtRnVuYyB9IGZyb20gJy4vU3lzdGVtcyc7XG5pbXBvcnQgRGV2VG9vbHMgZnJvbSAnLi9EZXZUb29scyc7XG5pbXBvcnQgU3lzdGVtcyBmcm9tICcuL1N5c3RlbXMnO1xuaW1wb3J0IHsgVHJhY2tlZENvbXBTeW1ib2xLZXlzIH0gZnJvbSAnLi9UcmFja2VkQ29tcG9uZW50JztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIG5vLXVudXNlZC12YXJzXG5leHBvcnQgdHlwZSBDbGFzc0NvbnN0cnVjdG9yPFQ+ID0geyBuZXcgKC4uLmFyZ3M6IGFueVtdKTogVCB9O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXb3JsZDxDVD4ge1xuICBjb21wb25lbnRDb2xsZWN0aW9uczogTWFwPEVudGl0eUlkLCBDb21wb25lbnRDb2xsZWN0aW9uPENUPj4gPSBuZXcgTWFwKCk7XG5cbiAgZW50aXRpZXM6IE1hcDxFbnRpdHlJZCwgRW50aXR5PENUPj4gPSBuZXcgTWFwKCk7XG5cbiAgZW50aXRpZXNCeUNUeXBlczogTWFwPHN0cmluZywgU2V0PEVudGl0eUlkPj4gPSBuZXcgTWFwKCk7XG5cbiAgZW50aXRpZXNCeVRhZ3M6IE1hcDxUYWcsIFNldDxFbnRpdHlJZD4+ID0gbmV3IE1hcCgpO1xuXG4gIHN5c3RlbXM6IFN5c3RlbXM8Q1Q+O1xuXG4gIGRldjogRGV2VG9vbHM8Q1Q+O1xuXG4gIHByaXZhdGUgY29tcG9uZW50VG9TeXN0ZW1RdWVyaWVzOiBNYXA8c3RyaW5nLCBzdHJpbmdbXT4gPSBuZXcgTWFwKCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5kZXYgPSBuZXcgRGV2VG9vbHModGhpcyk7XG4gICAgdGhpcy5zeXN0ZW1zID0gbmV3IFN5c3RlbXModGhpcyk7XG4gIH1cblxuICAvKipcbiAgICogXCJmaW5kc1wiIGEgc2luZ2xlIGVudGl0eSBiYXNlZCBvbiBhIHByZWRpY2F0ZVxuICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIGZpbmQgPSAocHJlZGljYXRlOiAoZW50aXR5OiBFbnRpdHk8Q1Q+KSA9PiBib29sZWFuKTogRW50aXR5PENUPiB8IG51bGwgPT4ge1xuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIHRoaXMuZW50aXRpZXMudmFsdWVzKCkpIHtcbiAgICAgIGlmIChwcmVkaWNhdGUoZW50aXR5KSkge1xuICAgICAgICByZXR1cm4gZW50aXR5O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIC8qKlxuICAgKiBcImZpbmRzXCIgYWxsIGVudGl0aWVzIGJhc2VkIG9uIGEgcHJlZGljYXRlLCBraW5kYSBsaWtlIGZpbHRlci5cbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBmaW5kQWxsID0gKHByZWRpY2F0ZTogKGVudGl0eTogRW50aXR5PENUPikgPT4gYm9vbGVhbik6IEVudGl0eTxDVD5bXSA9PiB7XG4gICAgY29uc3QgcmVzdWx0czogRW50aXR5PENUPltdID0gW107XG5cbiAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiB0aGlzLmVudGl0aWVzLnZhbHVlcygpKSB7XG4gICAgICBpZiAocHJlZGljYXRlKGVudGl0eSkpIHtcbiAgICAgICAgcmVzdWx0cy5wdXNoKGVudGl0eSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH07XG5cbiAgLyoqXG4gICAqIFwibG9jYXRlc1wiIGEgc2luZ2xlIGVudGl0eSBiYXNlZCBvbiBpdHMgQ29tcG9uZW50cy5cbiAgICovXG4gIGxvY2F0ZSA9IChcbiAgICBjbDogQ2xhc3NDb25zdHJ1Y3RvcjxDVD4gfCBDbGFzc0NvbnN0cnVjdG9yPENUPltdXG4gICk6IEVudGl0eTxDVD4gfCBudWxsID0+IHtcbiAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiB0aGlzLmVudGl0aWVzLnZhbHVlcygpKSB7XG4gICAgICBpZiAoZW50aXR5LmNvbXBvbmVudHMuaGFzKGNsKSkge1xuICAgICAgICByZXR1cm4gZW50aXR5O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIC8qKlxuICAgKiBMb2NhdGVzIGFsbCBlbnRpdGllcyB0aGF0IGNvbnRhaW4gdGhlIGNvbXBvbmVudHMgbmFtZWRcbiAgICovXG4gIGxvY2F0ZUFsbCA9IChcbiAgICBjbDogQ2xhc3NDb25zdHJ1Y3RvcjxDVD4gfCBDbGFzc0NvbnN0cnVjdG9yPENUPltdXG4gICk6IEVudGl0eTxDVD5bXSA9PiB7XG4gICAgY29uc3QgcmVzdWx0czogRW50aXR5PENUPltdID0gW107XG5cbiAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiB0aGlzLmVudGl0aWVzLnZhbHVlcygpKSB7XG4gICAgICBpZiAoZW50aXR5LmNvbXBvbmVudHMuaGFzKGNsKSkge1xuICAgICAgICByZXN1bHRzLnB1c2goZW50aXR5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfTtcblxuICAvKipcbiAgICogR3JhYnMgdGhlIGZpcnN0IGVudGl0eSwgYW5kIGl0cyByZWxhdGVkIGNvbXBvbmVudCwgdGhhdCBtYXRjaGVzIHRoZSBjb21wb25lbnQgdHlwZS5cbiAgICogQGV4YW1wbGVcbiAgICogYGBgXG4gICAqIGNvbnN0IHsgZW50aXR5LCBjb21wb25lbnQgfSA9IHdvcmxkLmdyYWIoTXlDb21wb25lbnQpO1xuICAgKiBgYGBcbiAgICovXG4gIGdyYWIgPSA8VCBleHRlbmRzIENUPihcbiAgICBjbDogQ2xhc3NDb25zdHJ1Y3RvcjxUPlxuICApOiB7IGVudGl0eTogRW50aXR5PENUPjsgY29tcG9uZW50OiBUIH0gfCBudWxsID0+IHtcbiAgICBjb25zdCBlbnRpdHkgPSB0aGlzLmxvY2F0ZShjbCk7XG5cbiAgICBpZiAoZW50aXR5KSB7XG4gICAgICBjb25zdCBjYyA9XG4gICAgICAgIHRoaXMuY29tcG9uZW50Q29sbGVjdGlvbnMuZ2V0KGVudGl0eS5pZCkgfHxcbiAgICAgICAgbmV3IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+KCk7XG5cbiAgICAgIGNvbnN0IGNvbXBvbmVudCA9IGNjLmdldDxUPihjbCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGVudGl0eSxcbiAgICAgICAgY29tcG9uZW50LFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICAvKipcbiAgICogR3JhYiBzaW5nbGUgY29tcG9uZW50IGJhc2VkIG9uIGNvbXBvbmVudCB0eXBlIGFuZCBwcmVkaWNhdGUuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3QgeyBlbnRpdHksIGNvbXBvbmVudCB9ID0gd29ybGQuZ3JhYkJ5KEZpcnN0Q29tcG9uZW50LCAoY29tcCkgPT4gY29tcC5pZCA9PSAnYXdlc29tZScpXG4gICAqIGBgYFxuICAgKi9cbiAgZ3JhYkJ5ID0gPFQgZXh0ZW5kcyBDVD4oXG4gICAgY2w6IENsYXNzQ29uc3RydWN0b3I8VD4sXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgcHJlZGljYXRlOiAoY29tcDogVCkgPT4gYm9vbGVhblxuICApOiB7IGVudGl0eTogRW50aXR5PENUPjsgY29tcG9uZW50OiBUIH0gfCBudWxsID0+IHtcbiAgICBjb25zdCBlbnRpdGllcyA9IHRoaXMubG9jYXRlQWxsKGNsKTtcbiAgICAvLyBjb25zdCBlbnRpdGllcyA9IHRoaXMubG9jYXRlQWxsKChjbCBhcyB1bmtub3duKSBhcyBDVCk7XG5cbiAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiBlbnRpdGllcykge1xuICAgICAgY29uc3QgY2MgPVxuICAgICAgICB0aGlzLmNvbXBvbmVudENvbGxlY3Rpb25zLmdldChlbnRpdHkuaWQpIHx8XG4gICAgICAgIG5ldyBDb21wb25lbnRDb2xsZWN0aW9uPENUPigpO1xuXG4gICAgICBjb25zdCBjb21wb25lbnQgPSBjYy5nZXQ8VD4oY2wpO1xuXG4gICAgICBpZiAocHJlZGljYXRlKGNvbXBvbmVudCkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBjb21wb25lbnQsXG4gICAgICAgICAgZW50aXR5LFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHcmFiIGFsbCB0aGUgY29tcG9uZW50cyBwcmltYXJpbHksIGFuZCB0aGUgZW50aXRpZXMgaWYgbmVlZGVkXG4gICAqL1xuICBncmFiQWxsID0gPFQgZXh0ZW5kcyBDVD4oXG4gICAgY2w6IENsYXNzQ29uc3RydWN0b3I8VD5cbiAgKTogeyBlbnRpdHk6IEVudGl0eTxDVD47IGNvbXBvbmVudDogVCB9W10gPT4ge1xuICAgIGNvbnN0IGVudGl0aWVzID0gdGhpcy5sb2NhdGVBbGwoY2wpO1xuXG4gICAgcmV0dXJuIGVudGl0aWVzLm1hcChlbnRpdHkgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZW50aXR5LFxuICAgICAgICBjb21wb25lbnQ6IGVudGl0eS5jb21wb25lbnRzLmdldDxUPihjbCksXG4gICAgICB9O1xuICAgIH0pO1xuICB9O1xuXG4gIC8vIFRPRE86IEFkZCBncmFiQWxsQnkgbWV0aG9kXG5cbiAgLyoqXG4gICAqIEdpdmVuIGFuIGVudGl0eSBpZCBhbmQgY29tcG9uZW50VHlwZSwgcmV0dXJucyBjb21wb25lbnRcbiAgICovXG4gIGdldCA9IDxUIGV4dGVuZHMgQ1Q+KGVpZDogRW50aXR5SWQsIGNsOiBDbGFzc0NvbnN0cnVjdG9yPFQ+KTogVCA9PiB7XG4gICAgY29uc3QgY2MgPVxuICAgICAgdGhpcy5jb21wb25lbnRDb2xsZWN0aW9ucy5nZXQoZWlkKSB8fCBuZXcgQ29tcG9uZW50Q29sbGVjdGlvbjxDVD4oKTtcblxuICAgIHJldHVybiBjYy5nZXQ8VD4oY2wpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBGaW5kIGFuZCBnZXQgdGhlIGZpcnN0IGluc3RhbmNlIG9mIGEgY29tcG9uZW50LCB3aXRob3V0IGFueSBhc3NvY2lhdGVkIGVudGl0aWVzLlxuICAgKiBIZWxwZnVsIGlzIHlvdSBrbm93IHRoYXQgb25seSBvbmUgaW5zdGFuY2Ugb2YgYSBjb21wb25lbnQgZXhpc3RzIGFjcm9zcyBhbGwgZW50aXRpZXMuXG4gICAqIEBwYXJhbSBjbCBDb21wb25lbnQgQ2xhc3MgQ29udHJ1Y3RvclxuICAgKiBAcGFyYW0gZGVmYXVsdFZhbHVlIEEgZGVmYXVsdCBjb21wb25lbnQgaW5zdGFuY2UgaWYgbm8gY29tcG9uZW50cyBhcmUgZm91bmQuXG4gICAqL1xuICBnZXRDb21wb25lbnQgPSA8VCBleHRlbmRzIENUPihcbiAgICBjbDogQ2xhc3NDb25zdHJ1Y3RvcjxUPixcbiAgICBkZWZhdWx0VmFsdWU/OiBUXG4gICk6IFQgfCBudWxsID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmdyYWIoY2wpO1xuXG4gICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgIHJldHVybiBkZWZhdWx0VmFsdWUgPyBkZWZhdWx0VmFsdWUgOiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQuY29tcG9uZW50O1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXQgYW4gZW50aXR5IHRoYXQgaGFzIGJlZW4gdGFnZ2VkIHdpdGggdGhlIGdpdmVuIHRhZywgb3IgcmV0dXJuIG51bGw7XG4gICAqL1xuICBnZXRUYWdnZWQgPSAodGFnOiBUYWcpOiBFbnRpdHk8Q1Q+IHwgbnVsbCA9PiB7XG4gICAgY29uc3QgdGFnRW50aXR5SWRzID0gdGhpcy5lbnRpdGllc0J5VGFncy5nZXQodGFnKTtcblxuICAgIGlmICh0YWdFbnRpdHlJZHMpIHtcbiAgICAgIGNvbnN0IGVudGl0eUlkID0gdGFnRW50aXR5SWRzLnZhbHVlcygpLm5leHQoKS52YWx1ZTtcblxuICAgICAgaWYgKGVudGl0eUlkKSB7XG4gICAgICAgIGNvbnN0IGVudGl0eSA9IHRoaXMuZW50aXRpZXMuZ2V0KGVudGl0eUlkKTtcblxuICAgICAgICBpZiAoZW50aXR5KSB7XG4gICAgICAgICAgcmV0dXJuIGVudGl0eTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXR0IGFsbCBlbnRpdGllcyB0aGF0IGhhdmUgYmVlbiB0YWdnZWQgd2l0aCB0aGUgZ2l2ZW4gdGFnLlxuICAgKiBAcGFyYW0gdGFnIEEgc3RyaW5nIG9yIG51bWJlci5cbiAgICovXG4gIGdldEFsbFRhZ2dlZCA9ICh0YWc6IFRhZyk6IEVudGl0eTxDVD5bXSA9PiB7XG4gICAgbGV0IGVudGl0aWVzOiBFbnRpdHk8Q1Q+W10gPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgY29uc3QgdGFnRW50aXR5SWRzID0gdGhpcy5lbnRpdGllc0J5VGFncy5nZXQodGFnKTtcblxuICAgIGlmICh0YWdFbnRpdHlJZHMpIHtcbiAgICAgIGZvciAoY29uc3QgZW50aXR5SWQgb2YgdGFnRW50aXR5SWRzKSB7XG4gICAgICAgIGNvbnN0IGVudGl0eSA9IHRoaXMuZW50aXRpZXMuZ2V0KGVudGl0eUlkKTtcbiAgICAgICAgaWYgKGVudGl0eSkge1xuICAgICAgICAgIGVudGl0aWVzLnB1c2goZW50aXR5KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBlbnRpdGllcztcbiAgfTtcblxuICAvKipcbiAgICogQWRkIGEgY29tcG9uZW50IG9uIHRoZSBnaXZlbiBlbnRpdHlcbiAgICovXG4gIGFkZCA9IDxUIGV4dGVuZHMgQ1Q+KGVpZDogRW50aXR5SWQsIGNvbXBvbmVudDogVCk6IHRoaXMgPT4ge1xuICAgIGNvbnN0IGNjID1cbiAgICAgIHRoaXMuY29tcG9uZW50Q29sbGVjdGlvbnMuZ2V0KGVpZCkgfHwgbmV3IENvbXBvbmVudENvbGxlY3Rpb248Q1Q+KCk7XG5cbiAgICBjb25zdCBlbnRpdHkgPSB0aGlzLmVudGl0aWVzLmdldChlaWQpO1xuXG4gICAgaWYgKCFlbnRpdHkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgd29ybGQuYWRkOiBVbmFibGUgdG8gbG9jYXRlIGVudGl0eSB3aXRoIGlkICR7ZWlkfWApO1xuICAgIH1cblxuICAgIGNjLmFkZChjb21wb25lbnQpO1xuXG4gICAgdGhpcy5jb21wb25lbnRDb2xsZWN0aW9ucy5zZXQoZWlkLCBjYyk7XG5cbiAgICBmb3IgKGNvbnN0IFtjdEFyciwgZW50aXR5U2V0XSBvZiB0aGlzLmVudGl0aWVzQnlDVHlwZXMpIHtcbiAgICAgIGlmIChjdEFyci5zcGxpdCgnLCcpLmV2ZXJ5KGNjLmhhc0J5TmFtZSkpIHtcbiAgICAgICAgZW50aXR5U2V0LmFkZChlaWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAoY29tcG9uZW50W1RyYWNrZWRDb21wU3ltYm9sS2V5cy5pc1RyYWNrZWRdKSB7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLnNldFdvcmxkXSh0aGlzKTtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGNvbXBvbmVudFtUcmFja2VkQ29tcFN5bWJvbEtleXMuZW50aXR5SURzXS5hZGQoZWlkKTtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGNvbXBvbmVudFtUcmFja2VkQ29tcFN5bWJvbEtleXMub25BZGRdKHRoaXMsIGVudGl0eSk7XG4gICAgfVxuXG4gICAgZW50aXR5Lm9uQ29tcG9uZW50QWRkKHsgd29ybGQ6IHRoaXMsIGNvbXBvbmVudCB9KTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZW1vdmUgYSBjb21wb25lbnQgZnJvbSB0aGUgZ2l2ZW4gZW50aXR5LlxuICAgKiBOT1RFOiBUaGlzIHdpbGwgY2hhbmdlIHdoYXQgc3lzdGVtcyB3aWxsIGJlIGNhbGxlZCBvbiB0aGUgZW50aXR5LlxuICAgKi9cbiAgcmVtb3ZlID0gKGVpZDogRW50aXR5SWQsIGNUeXBlOiBDbGFzc0NvbnN0cnVjdG9yPENUPik6IHRoaXMgPT4ge1xuICAgIGNvbnN0IGNjID0gdGhpcy5jb21wb25lbnRDb2xsZWN0aW9ucy5nZXQoZWlkKTtcbiAgICBpZiAoIWNjKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBjb25zdCBjb21wb25lbnROYW1lID0gY1R5cGUubmFtZTtcbiAgICBpZiAoIWNjLmhhc0J5TmFtZShjb21wb25lbnROYW1lKSkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgY29uc3QgY29tcG9uZW50ID0gY2MuZ2V0KGNUeXBlKTtcblxuICAgIC8vIEhhbmRsZSBUcmFja2VkQ29tcG9uZW50IGxvZ2ljIGZpcnN0XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGlmIChjb21wb25lbnRbVHJhY2tlZENvbXBTeW1ib2xLZXlzLmlzVHJhY2tlZF0pIHtcbiAgICAgIGNvbnN0IGVudGl0eSA9IHRoaXMuZW50aXRpZXMuZ2V0KGVpZCk7XG4gICAgICBpZiAoIWVudGl0eSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYHdvcmxkLnJlbW92ZTogVW5hYmxlIHRvIGxvY2F0ZSBlbnRpdHkgZm9yIFRyYWNrZWRDb21wb25lbnQuIGVpZDogJHtlaWR9LCBjVHlwZTogJHtjVHlwZS5uYW1lfWBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGNvbXBvbmVudFtUcmFja2VkQ29tcFN5bWJvbEtleXMuZW50aXR5SURzXS5kZWxldGUoZWlkKTtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGNvbXBvbmVudFtUcmFja2VkQ29tcFN5bWJvbEtleXMub25SZW1vdmVdKHRoaXMsIGVudGl0eSk7XG4gICAgfVxuXG4gICAgLy8gLS0tIFNUQVJUIE9QVElNSVpFRCBSRU1PVkFMIC0tLVxuXG4gICAgLy8gMS4gRmluZCBhbGwgc3lzdGVtIHF1ZXJpZXMgdGhhdCBkZXBlbmRlZCBvbiB0aGUgY29tcG9uZW50IGJlaW5nIHJlbW92ZWQuXG4gICAgY29uc3QgYWZmZWN0ZWRRdWVyeUtleXMgPVxuICAgICAgdGhpcy5jb21wb25lbnRUb1N5c3RlbVF1ZXJpZXMuZ2V0KGNvbXBvbmVudE5hbWUpIHx8IFtdO1xuXG4gICAgLy8gMi4gUmVtb3ZlIHRoZSBlbnRpdHkgZnJvbSBlYWNoIG9mIHRob3NlIHN5c3RlbXMnIGVudGl0eSBzZXRzLlxuICAgIGZvciAoY29uc3QgcXVlcnlLZXkgb2YgYWZmZWN0ZWRRdWVyeUtleXMpIHtcbiAgICAgIGNvbnN0IGVudGl0eVNldCA9IHRoaXMuZW50aXRpZXNCeUNUeXBlcy5nZXQocXVlcnlLZXkpO1xuICAgICAgaWYgKGVudGl0eVNldCkge1xuICAgICAgICBlbnRpdHlTZXQuZGVsZXRlKGVpZCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gLS0tIEVORCBPUFRJTUlaRUQgUkVNT1ZBTCAtLS1cblxuICAgIC8vIDMuIFBoeXNpY2FsbHkgcmVtb3ZlIHRoZSBjb21wb25lbnQgZnJvbSB0aGUgZW50aXR5J3MgY29sbGVjdGlvbi5cbiAgICBjYy5yZW1vdmUoY1R5cGUpO1xuXG4gICAgLy8gNC4gUmUtZXZhbHVhdGUgd2hpY2ggc3lzdGVtcyB0aGUgZW50aXR5IG5vdyBiZWxvbmdzIHRvLlxuICAgIC8vICAgIFRoaXMgYWRkcyB0aGUgZW50aXR5IGJhY2sgdG8gYW55IHNldHMgdGhhdCBzdGlsbCBtYXRjaC5cbiAgICBmb3IgKGNvbnN0IFtjYW5vbmljYWxLZXksIGVudGl0eVNldF0gb2YgdGhpcy5lbnRpdGllc0J5Q1R5cGVzLmVudHJpZXMoKSkge1xuICAgICAgaWYgKGNhbm9uaWNhbEtleS5zcGxpdCgnLCcpLmV2ZXJ5KG5hbWUgPT4gY2MuaGFzQnlOYW1lKG5hbWUpKSkge1xuICAgICAgICBlbnRpdHlTZXQuYWRkKGVpZCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gNS4gVHJpZ2dlciB0aGUgZW50aXR5J3Mgb25Db21wb25lbnRSZW1vdmUgbGlmZWN5Y2xlIGhvb2suXG4gICAgY29uc3QgZW50aXR5ID0gdGhpcy5lbnRpdGllcy5nZXQoZWlkKTtcbiAgICBpZiAoZW50aXR5KSB7XG4gICAgICBlbnRpdHkub25Db21wb25lbnRSZW1vdmUoeyB3b3JsZDogdGhpcywgY29tcG9uZW50IH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBNZXRob2QgZm9yIGFkZGluZyBzeXN0ZW1zLlxuICAgKi9cbiAgYWRkU3lzdGVtKFxuICAgIGNUeXBlczogQ2xhc3NDb25zdHJ1Y3RvcjxDVD5bXSxcbiAgICBzeXN0ZW1GdW5jOiBTeXN0ZW1GdW5jPENUPixcbiAgICBmdW5jTmFtZT86IHN0cmluZ1xuICApOiB0aGlzIHtcbiAgICAvLyAtLS0gU1RBUlQgTkVXIExPR0lDIC0tLVxuICAgIGNvbnN0IGNOYW1lcyA9IGNUeXBlcy5tYXAoY3QgPT4gY3QubmFtZSkuc29ydCgpOyAvLyBTb3J0IGZvciBjb25zaXN0ZW5jeVxuICAgIGNvbnN0IGNhbm9uaWNhbEtleSA9IGNOYW1lcy5qb2luKCcsJyk7IC8vIENyZWF0ZSBhIHN0YWJsZSBzdHJpbmcga2V5XG5cbiAgICAvLyBQb3B1bGF0ZSB0aGUgaW52ZXJ0ZWQgaW5kZXhcbiAgICBmb3IgKGNvbnN0IGNvbXBvbmVudE5hbWUgb2YgY05hbWVzKSB7XG4gICAgICBjb25zdCBleGlzdGluZ1F1ZXJpZXMgPVxuICAgICAgICB0aGlzLmNvbXBvbmVudFRvU3lzdGVtUXVlcmllcy5nZXQoY29tcG9uZW50TmFtZSkgfHwgW107XG4gICAgICBpZiAoIWV4aXN0aW5nUXVlcmllcy5pbmNsdWRlcyhjYW5vbmljYWxLZXkpKSB7XG4gICAgICAgIGV4aXN0aW5nUXVlcmllcy5wdXNoKGNhbm9uaWNhbEtleSk7XG4gICAgICB9XG4gICAgICB0aGlzLmNvbXBvbmVudFRvU3lzdGVtUXVlcmllcy5zZXQoY29tcG9uZW50TmFtZSwgZXhpc3RpbmdRdWVyaWVzKTtcbiAgICB9XG5cbiAgICAvLyBQYXNzIHRoZSBjYW5vbmljYWwga2V5IHRvIHRoZSBTeXN0ZW1zIG1hbmFnZXJcbiAgICB0aGlzLnN5c3RlbXMuYWRkKGNUeXBlcywgc3lzdGVtRnVuYywgY2Fub25pY2FsS2V5LCBmdW5jTmFtZSk7XG4gICAgLy8gLS0tIEVORCBORVcgTE9HSUMgLS0tXG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXR1cCBhbiBlbnRpdHkgdG8gZXhpc3QgaW4gdGhlIGdpdmVuIHdvcmxkLiBUaGlzIGlzIG1vc3RseSBhbiBpbnRlcm5hbCBtZXRob2QsIGJ1dCBleHBvc2VkIGp1c3QgaW4gY2FzZS5cbiAgICovXG4gIHJlZ2lzdGVyRW50aXR5KGVudGl0eTogRW50aXR5PENUPik6IFdvcmxkPENUPiB7XG4gICAgY29uc3QgY2MgPSBuZXcgQ29tcG9uZW50Q29sbGVjdGlvbjxDVD4oKTtcblxuICAgIHRoaXMuY29tcG9uZW50Q29sbGVjdGlvbnMuc2V0KGVudGl0eS5pZCwgY2MpO1xuICAgIHRoaXMuZW50aXRpZXMuc2V0KGVudGl0eS5pZCwgZW50aXR5KTtcblxuICAgIGVudGl0eS5vbkNyZWF0ZSh0aGlzKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBhbGwgY29tcG9uZW50cyB0aGF0IGJlbG9uZyB0byBhbiBlbnRpdHkuXG4gICAqL1xuICBjbGVhckVudGl0eUNvbXBvbmVudHMoZW50aXR5SWQ6IEVudGl0eUlkKTogdGhpcyB7XG4gICAgdGhpcy5jb21wb25lbnRDb2xsZWN0aW9ucy5zZXQoZW50aXR5SWQsIG5ldyBDb21wb25lbnRDb2xsZWN0aW9uPENUPigpKTtcblxuICAgIGZvciAoY29uc3QgZW50aXR5U2V0IG9mIHRoaXMuZW50aXRpZXNCeUNUeXBlcy52YWx1ZXMoKSkge1xuICAgICAgaWYgKGVudGl0eVNldC5oYXMoZW50aXR5SWQpKSB7XG4gICAgICAgIGVudGl0eVNldC5kZWxldGUoZW50aXR5SWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhbiBlbnRpdHkgdGhhdCBpcyBpbiB0aGUgd29ybGQuXG4gICAqIEJhc2ljYWxseSBqdXN0IG5ldyBFbnRpdHkod29ybGQpLCBidXQgc2F2ZXMgYW4gaW1wb3J0IG9mIEVudGl0eS5cbiAgICovXG4gIGNyZWF0ZUVudGl0eSgpOiBFbnRpdHk8Q1Q+IHtcbiAgICBjb25zdCBlbnRpdHkgPSBuZXcgRW50aXR5KHRoaXMpO1xuXG4gICAgcmV0dXJuIGVudGl0eTtcblxuICAgIC8vIFJlZ2lzdGVyIGVudGl0eSBoZXJlLi4uLlxuICB9XG5cbiAgLyoqXG4gICAqIERlc3Ryb3lzIGFuIGVudGl0eS5cbiAgICogU2FtZSBhcyBlbnRpdHkuZGVzdHJveSgpLlxuICAgKi9cbiAgZGVzdHJveUVudGl0eShlbnRpdHlJZDogRW50aXR5SWQpOiBXb3JsZDxDVD4ge1xuICAgIHRoaXMuY29tcG9uZW50Q29sbGVjdGlvbnMuZGVsZXRlKGVudGl0eUlkKTtcbiAgICBjb25zdCBlbnRpdHkgPSB0aGlzLmVudGl0aWVzLmdldChlbnRpdHlJZCk7XG5cbiAgICBpZiAoIWVudGl0eSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgd29ybGQuZGVzdHJveUVudGl0eTogTm8gZW50aXR5IGZvdW5kLiBlbnRpdHkgaWQ6ICR7ZW50aXR5SWR9YFxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLmVudGl0aWVzLmRlbGV0ZShlbnRpdHlJZCk7XG5cbiAgICBmb3IgKGNvbnN0IGVudGl0eVNldCBvZiB0aGlzLmVudGl0aWVzQnlDVHlwZXMudmFsdWVzKCkpIHtcbiAgICAgIGlmIChlbnRpdHlTZXQuaGFzKGVudGl0eUlkKSkge1xuICAgICAgICBlbnRpdHlTZXQuZGVsZXRlKGVudGl0eUlkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyByZW1vdmUgYW55IHRhZyBhc3NvY2lhdGlvbnMgd2l0aCBkZXN0cm95ZWQgZW50aXRpZXMuXG4gICAgZm9yIChjb25zdCBbdGFnLCBlbnRpdHlTZXRdIG9mIHRoaXMuZW50aXRpZXNCeVRhZ3MpIHtcbiAgICAgIGlmIChlbnRpdHlTZXQuaGFzKGVudGl0eUlkKSkge1xuICAgICAgICBlbnRpdHlTZXQuZGVsZXRlKGVudGl0eUlkKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGVudGl0eVNldC5zaXplID09PSAwKSB7XG4gICAgICAgIHRoaXMuZW50aXRpZXNCeVRhZ3MuZGVsZXRlKHRhZyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKlxuICBUT0RPOiB3b3JsZC5kZXN0cm95KCkgYW5kIHdvcmxkLmRlc3Ryb3lJbW1lZGlhdGVseSgpIG1ldGhvZHMuXG4gICovXG59XG4iLCJpbXBvcnQgV29ybGQgZnJvbSAnLi9Xb3JsZCc7XG5pbXBvcnQgeyB0cmFja0NvbXBvbmVudCB9IGZyb20gJy4vVHJhY2tlZENvbXBvbmVudCc7XG5pbXBvcnQgRW50aXR5IGZyb20gJy4vRW50aXR5JztcblxuZXhwb3J0IHsgV29ybGQsIHRyYWNrQ29tcG9uZW50LCBFbnRpdHkgfTtcbiJdLCJuYW1lcyI6WyJpc0NvbXBvbmVudEluc3RhbmNlIiwiQ2xhc3MiLCJjb21wIiwiX2luc3RhbmNlb2YiLCJDb21wb25lbnRDb2xsZWN0aW9uIiwiTWFwIiwiY29tcG9uZW50IiwiY2wiLCJmdW5jIiwiYyIsInVwZGF0ZWRDb21wb25lbnQiLCJjVHlwZSIsIkVycm9yIiwiQXJyYXkiLCJjdCIsImNOYW1lIiwidG9EZXZDb21wb25lbnRzIiwib2JqIiwiX2l0ZXJhdG9yRXJyb3IiLCJjb21wTmFtZSIsIkRldkVudGl0eSIsImVudGl0eSIsIndvcmxkIiwiY29tcE5hbWVzIiwiT2JqZWN0Iiwic3lzdGVtTmFtZSIsImNOYW1lcyIsInRvVGFibGVSb3ciLCJTaW1wbGVGU00iLCJpbml0aWFsU3RhdGUiLCJ0cmFuc2l0aW9ucyIsIm5leHQiLCJkYXRhIiwicmVzZXQiLCJpcyIsImNoZWNrU3RhdGUiLCJ2NCIsInV1aWR2NCIsIkVudGl0eSIsImZzbVRyYW5zaXRpb24iLCJucyIsIm9uQ3JlYXRlIiwib25EZXN0cm95Iiwib25Db21wb25lbnRBZGQiLCJhcmdzIiwib25UcmFja2VkQ29tcG9uZW50VXBkYXRlIiwib25Db21wb25lbnRSZW1vdmUiLCJhZGQiLCJhZGRUYWciLCJ0YWciLCJlbnRpdHlTZXQiLCJTZXQiLCJoYXMiLCJjYyIsImhhc1RhZyIsImdldCIsImdldEFsbCIsInJlbW92ZSIsInJlbW92ZVRhZyIsImNsZWFyIiwiY2xlYXJUYWdzIiwiZmluaXNoQ3JlYXRpb24iLCJkZXN0cm95IiwiZGVzdHJveUltbWVkaWF0ZWx5IiwidGFncyIsInRvRGV2RW50aXR5IiwiRGV2VG9vbHMiLCJjb21wc0J5U3lzdGVtcyIsInN5c3RlbSIsImUiLCJTeXN0ZW1zIiwiY1R5cGVzIiwic3lzdGVtRnVuYyIsImNhbm9uaWNhbEtleSIsImZ1bmNOYW1lIiwibmFtZSIsInJ1biIsImVudGl0aWVzVG9DcmVhdGUiLCJlbnRpdGllc1RvRGVzdHJveSIsIl9pdGVyYXRvckVycm9yMSIsImVudGl0eUlkU2V0Iiwic2l6ZSIsImluZGV4IiwiX2l0ZXJhdG9yRXJyb3IyIiwiZWlkIiwiZW50aXR5MSIsImNvbXBvbmVudHMiLCJfaXRlcmF0b3JFcnJvcjMiLCJlbnRpdHkyIiwiX2l0ZXJhdG9yRXJyb3I0IiwiZW50aXR5MyIsIlRyYWNrZWRDb21wU3ltYm9sS2V5cyIsIlN5bWJvbCIsImNyZWF0ZUNsYXNzSW5zdGFuY2VQcm94eUhhbmRsZXJzIiwidHJhY2tlZEV2ZW50SGFuZGxlcnMiLCJ1cGRhdGVkUHJvcHMiLCJzZXQiLCJwcm9wZXJ0eSIsInZhbHVlIiwicHJldmlvdXNWYWwiLCJlbnRpdGllcyIsInRyYWNrQ29tcG9uZW50IiwiQ29tcENsYXNzIiwiUHJveHkiLCJjb25zdHJ1Y3QiLCJDb21wb25lbnQiLCJXb3JsZCIsInByZWRpY2F0ZSIsInJlc3VsdHMiLCJkZWZhdWx0VmFsdWUiLCJyZXN1bHQiLCJ0YWdFbnRpdHlJZHMiLCJlbnRpdHlJZCIsImN0QXJyIiwiY29tcG9uZW50TmFtZSIsImFmZmVjdGVkUXVlcnlLZXlzIiwicXVlcnlLZXkiLCJlbnRpdHlTZXQxIiwiYWRkU3lzdGVtIiwiZXhpc3RpbmdRdWVyaWVzIiwicmVnaXN0ZXJFbnRpdHkiLCJjbGVhckVudGl0eUNvbXBvbmVudHMiLCJjcmVhdGVFbnRpdHkiLCJkZXN0cm95RW50aXR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxDOztBQ2xCQSx3Q0FBZSxjQUFjLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxVQUFVLEdBQUcseUNBQXlDLEU7O0FDQXJHOztBQUUvQjtBQUNBLHFDQUFxQyxVQUFVO0FBQy9DOztBQUVBLHVEQUFlLFFBQVEsRTs7QUNOYztBQUNyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxTQUFTLFdBQUMsTUFBTSxXQUFDLFFBQVEsRUFBRSxXQUFDO0FBQzVCLGtCQUFrQixXQUFDO0FBQ25COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMGdCQUEwZ0I7QUFDMWdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sb0JBQVE7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsd0RBQWUsU0FBUyxFOztBQzdCRztBQUNZOztBQUV2QyxTQUFTLEtBQUU7QUFDWDtBQUNBLCtDQUErQyxHQUFHLEtBQUs7O0FBRXZEO0FBQ0EsbUNBQW1DOztBQUVuQztBQUNBOztB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\n//# sourceURL=webpack-internal:///309\n\n}')}},__webpack_module_cache__={};function __webpack_require__(n){var t=__webpack_module_cache__[n];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var e=__webpack_module_cache__[n]={id:n,exports:{}};try{var r={id:n,module:e,factory:__webpack_modules__[n],require:__webpack_require__};if(__webpack_require__.i.forEach(function(n){n(r)}),e=r.module,!r.factory)throw console.error("undefined factory",n),Error("RuntimeError: factory is undefined ("+n+")");r.factory.call(e.exports,e,e.exports,r.require)}catch(n){throw e.error=n,n}return e.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.c=__webpack_module_cache__,__webpack_require__.i=[],(()=>{__webpack_require__.d=(n,t)=>{for(var e in t)__webpack_require__.o(t,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})}})(),(()=>{__webpack_require__.hu=n=>"hot/hot-update.js"})(),(()=>{__webpack_require__.hmrF=function(){return"hot/hot-update.json"}})(),(()=>{__webpack_require__.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t)})(),(()=>{var n,t,e,r={},o=__webpack_require__.c,i=[],Q=[],l="idle",s=0,B=[];function a(t,e){var r=o[e];if(!r)return t;var Q=function(Q){if(r.hot.active){if(o[Q]){var l=o[Q].parents;-1===l.indexOf(e)&&l.push(e)}else i=[e],n=Q;-1===r.children.indexOf(Q)&&r.children.push(Q)}else console.warn("[HMR] unexpected require("+Q+") from disposed module "+e),i=[];return t(Q)},l=function(n){return{configurable:!0,enumerable:!0,get:function(){return t[n]},set:function(e){t[n]=e}}};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&"e"!==s&&Object.defineProperty(Q,s,l(s));return Q.e=function(n,e){return F(t.e(n,e))},Q}function c(o,s){var B=n!==o,a={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:B,_requireSelf:function(){i=s.parents.slice(),n=B?void 0:o,__webpack_require__(o)},active:!0,accept:function(n,t,e){if(void 0===n)a._selfAccepted=!0;else if("function"==typeof n)a._selfAccepted=n;else if("object"==typeof n&&null!==n)for(var r=0;r<n.length;r++)a._acceptedDependencies[n[r]]=t||function(){},a._acceptedErrorHandlers[n[r]]=e;else a._acceptedDependencies[n]=t||function(){},a._acceptedErrorHandlers[n]=e},decline:function(n){if(void 0===n)a._selfDeclined=!0;else if("object"==typeof n&&null!==n)for(var t=0;t<n.length;t++)a._declinedDependencies[n[t]]=!0;else a._declinedDependencies[n]=!0},dispose:function(n){a._disposeHandlers.push(n)},addDisposeHandler:function(n){a._disposeHandlers.push(n)},removeDisposeHandler:function(n){var t=a._disposeHandlers.indexOf(n);t>=0&&a._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,l){case"idle":t=[],Object.keys(__webpack_require__.hmrI).forEach(function(n){__webpack_require__.hmrI[n](o,t)}),U("ready");break;case"ready":Object.keys(__webpack_require__.hmrI).forEach(function(n){__webpack_require__.hmrI[n](o,t)});break;case"prepare":case"check":case"dispose":case"apply":(e=e||[]).push(o)}},check:g,apply:b,status:function(n){if(!n)return l;Q.push(n)},addStatusHandler:function(n){Q.push(n)},removeStatusHandler:function(n){var t=Q.indexOf(n);t>=0&&Q.splice(t,1)},data:r[o]};return n=void 0,a}function U(n){l=n;for(var t=[],e=0;e<Q.length;e++)t[e]=Q[e].call(null,n);return Promise.all(t).then(function(){})}function d(){0==--s&&U("ready").then(function(){if(0===s){var n=B;B=[];for(var t=0;t<n.length;t++)n[t]()}})}function F(n){switch(l){case"ready":U("prepare");case"prepare":return s++,n.then(d,d),n;default:return n}}function I(n){return 0===s?n():new Promise(function(t){B.push(function(){t(n())})})}function g(n){if("idle"!==l)throw Error("check() is only allowed in idle status");return U("check").then(__webpack_require__.hmrM).then(function(e){return e?U("prepare").then(function(){var r=[];return t=[],Promise.all(Object.keys(__webpack_require__.hmrC).reduce(function(n,o){return __webpack_require__.hmrC[o](e.c,e.r,e.m,n,t,r),n},[])).then(function(){return I(function(){return n?u(n):U("ready").then(function(){return r})})})}):U(C()?"ready":"idle").then(function(){return null})})}function b(n){return"ready"!==l?Promise.resolve().then(function(){throw Error("apply() is only allowed in ready status (state: "+l+")")}):u(n)}function u(n){n=n||{},C();var r,o=t.map(function(t){return t(n)});t=void 0;var i=o.map(function(n){return n.error}).filter(Boolean);if(i.length>0)return U("abort").then(function(){throw i[0]});var Q=U("dispose");o.forEach(function(n){n.dispose&&n.dispose()});var l=U("apply"),s=function(n){r||(r=n)},B=[];return o.forEach(function(n){if(n.apply){var t=n.apply(s);if(t)for(var e=0;e<t.length;e++)B.push(t[e])}}),Promise.all([Q,l]).then(function(){return r?U("fail").then(function(){throw r}):e?u(n).then(function(n){return B.forEach(function(t){0>n.indexOf(t)&&n.push(t)}),n}):U("idle").then(function(){return B})})}function C(){if(e)return t||(t=[]),Object.keys(__webpack_require__.hmrI).forEach(function(n){e.forEach(function(e){__webpack_require__.hmrI[n](e,t)})}),e=void 0,!0}__webpack_require__.hmrD=r,__webpack_require__.i.push(function(n){var t=n.module,e=a(n.require,n.id);t.hot=c(n.id,t),t.parents=i,t.children=[],i=[],n.require=e}),__webpack_require__.hmrC={},__webpack_require__.hmrI={}})(),(()=>{var n={},t="ecstatic:";__webpack_require__.l=function(e,r,o,i){if(n[e])return void n[e].push(r);if(void 0!==o)for(var Q,l,s=document.getElementsByTagName("script"),B=0;B<s.length;B++){var a=s[B];if(a.getAttribute("src")==e||a.getAttribute("data-webpack")==t+o){Q=a;break}}Q||(l=!0,(Q=document.createElement("script")).charset="utf-8",Q.timeout=120,__webpack_require__.nc&&Q.setAttribute("nonce",__webpack_require__.nc),Q.setAttribute("data-webpack",t+o),Q.src=e),n[e]=[r];var c=function(t,r){Q.onerror=Q.onload=null,clearTimeout(U);var o=n[e];if(delete n[e],Q.parentNode&&Q.parentNode.removeChild(Q),o&&o.forEach(function(n){return n(r)}),t)return t(r)},U=setTimeout(c.bind(null,void 0,{type:"timeout",target:Q}),12e4);Q.onerror=c.bind(null,Q.onerror),Q.onload=c.bind(null,Q.onload),l&&document.head.appendChild(Q)}})(),(()=>{__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}})(),(()=>{__webpack_require__.p="/static/"})(),(()=>{var n,t,e,r,o,i=__webpack_require__.hmrS_jsonp=__webpack_require__.hmrS_jsonp||{889:0},Q={};function l(t,e){return n=e,new Promise((n,e)=>{Q[t]=n;var r=__webpack_require__.p+__webpack_require__.hu(t),o=Error(),i=n=>{if(Q[t]){Q[t]=void 0;var r=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading hot update chunk "+t+" failed.\n("+r+": "+i+")",o.name="ChunkLoadError",o.type=r,o.request=i,e(o)}};__webpack_require__.l(r,i)})}function s(n){function Q(n){for(var t=[n],e={},r=t.map(function(n){return{chain:[n],id:n}});r.length>0;){var o=r.pop(),i=o.id,Q=o.chain,s=__webpack_require__.c[i];if(s&&(!s.hot._selfAccepted||s.hot._selfInvalidated)){if(s.hot._selfDeclined)return{type:"self-declined",chain:Q,moduleId:i};if(s.hot._main)return{type:"unaccepted",chain:Q,moduleId:i};for(var B=0;B<s.parents.length;B++){var a=s.parents[B],c=__webpack_require__.c[a];if(c){if(c.hot._declinedDependencies[i])return{type:"declined",chain:Q.concat([a]),moduleId:i,parentId:a};if(-1===t.indexOf(a)){if(c.hot._acceptedDependencies[i]){e[a]||(e[a]=[]),l(e[a],[i]);continue}delete e[a],t.push(a),r.push({chain:Q.concat([a]),id:a})}}}}}return{type:"accepted",moduleId:n,outdatedModules:t,outdatedDependencies:e}}function l(n,t){for(var e=0;e<t.length;e++){var r=t[e];-1===n.indexOf(r)&&n.push(r)}}__webpack_require__.f&&delete __webpack_require__.f.jsonpHmr,t=void 0;var s,B={},a=[],c={},U=function(n){console.warn("[HMR] unexpected require("+n.id+") to disposed module")};for(var d in e)if(__webpack_require__.o(e,d)){var F=e[d],I=F?Q(d):{type:"disposed",moduleId:d},g=!1,b=!1,u=!1,C="";switch(I.chain&&(C="\nUpdate propagation: "+I.chain.join(" -> ")),I.type){case"self-declined":n.onDeclined&&n.onDeclined(I),n.ignoreDeclined||(g=Error("Aborted because of self decline: "+I.moduleId+C));break;case"declined":n.onDeclined&&n.onDeclined(I),n.ignoreDeclined||(g=Error("Aborted because of declined dependency: "+I.moduleId+" in "+I.parentId+C));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(I),n.ignoreUnaccepted||(g=Error("Aborted because "+d+" is not accepted"+C));break;case"accepted":n.onAccepted&&n.onAccepted(I),b=!0;break;case"disposed":n.onDisposed&&n.onDisposed(I),u=!0;break;default:throw Error("Unexception type "+I.type)}if(g)return{error:g};if(b)for(d in c[d]=F,l(a,I.outdatedModules),I.outdatedDependencies)__webpack_require__.o(I.outdatedDependencies,d)&&(B[d]||(B[d]=[]),l(B[d],I.outdatedDependencies[d]));u&&(l(a,[I.moduleId]),c[d]=U)}e=void 0;for(var y=[],G=0;G<a.length;G++){var p=a[G],m=__webpack_require__.c[p];m&&(m.hot._selfAccepted||m.hot._main)&&c[p]!==U&&!m.hot._selfInvalidated&&y.push({module:p,require:m.hot._requireSelf,errorHandler:m.hot._selfAccepted})}return{dispose:function(){r.forEach(function(n){delete i[n]}),r=void 0;for(var n,t,e=a.slice();e.length>0;){var o=e.pop(),Q=__webpack_require__.c[o];if(Q){var l={},c=Q.hot._disposeHandlers;for(G=0;G<c.length;G++)c[G].call(null,l);for(__webpack_require__.hmrD[o]=l,Q.hot.active=!1,delete __webpack_require__.c[o],delete B[o],G=0;G<Q.children.length;G++){var U=__webpack_require__.c[Q.children[G]];U&&(n=U.parents.indexOf(o))>=0&&U.parents.splice(n,1)}}}for(var d in B)if(__webpack_require__.o(B,d)&&(Q=__webpack_require__.c[d]))for(G=0,s=B[d];G<s.length;G++)t=s[G],(n=Q.children.indexOf(t))>=0&&Q.children.splice(n,1)},apply:function(t){for(var e in c)__webpack_require__.o(c,e)&&(__webpack_require__.m[e]=c[e]);for(var r=0;r<o.length;r++)o[r](__webpack_require__);for(var i in B)if(__webpack_require__.o(B,i)){var Q=__webpack_require__.c[i];if(Q){s=B[i];for(var l=[],U=[],d=[],F=0;F<s.length;F++){var I=s[F],g=Q.hot._acceptedDependencies[I],b=Q.hot._acceptedErrorHandlers[I];if(g){if(-1!==l.indexOf(g))continue;l.push(g),U.push(b),d.push(I)}}for(var u=0;u<l.length;u++)try{l[u].call(null,s)}catch(e){if("function"==typeof U[u])try{U[u](e,{moduleId:i,dependencyId:d[u]})}catch(r){n.onErrored&&n.onErrored({type:"accept-error-handler-errored",moduleId:i,dependencyId:d[u],error:r,originalError:e}),n.ignoreErrored||(t(r),t(e))}else n.onErrored&&n.onErrored({type:"accept-errored",moduleId:i,dependencyId:d[u],error:e}),n.ignoreErrored||t(e)}}}for(var C=0;C<y.length;C++){var G=y[C],p=G.module;try{G.require(p)}catch(e){if("function"==typeof G.errorHandler)try{G.errorHandler(e,{moduleId:p,module:__webpack_require__.c[p]})}catch(r){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:p,error:r,originalError:e}),n.ignoreErrored||(t(r),t(e))}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:p,error:e}),n.ignoreErrored||t(e)}}return a}}}self.webpackHotUpdateecstatic=(t,r,i)=>{for(var l in r)__webpack_require__.o(r,l)&&(e[l]=r[l],n&&n.push(l));i&&o.push(i),Q[t]&&(Q[t](),Q[t]=void 0)},__webpack_require__.hmrI.jsonp=function(n,t){e||(e={},o=[],r=[],t.push(s)),__webpack_require__.o(e,n)||(e[n]=__webpack_require__.m[n])},__webpack_require__.hmrC.jsonp=function(n,Q,B,a,c,U){c.push(s),t={},r=Q,e=B.reduce(function(n,t){return n[t]=!1,n},{}),o=[],n.forEach(function(n){__webpack_require__.o(i,n)&&void 0!==i[n]?(a.push(l(n,U)),t[n]=!0):t[n]=!1}),__webpack_require__.f&&(__webpack_require__.f.jsonpHmr=function(n,e){t&&__webpack_require__.o(t,n)&&!t[n]&&(e.push(l(n)),t[n]=!0)})},__webpack_require__.hmrM=()=>{if("undefined"==typeof fetch)throw Error("No browser support: need fetch API");return fetch(__webpack_require__.p+__webpack_require__.hmrF()).then(n=>{if(404!==n.status){if(!n.ok)throw Error("Failed to fetch update manifest "+n.statusText);return n.json()}})}})();var __webpack_exports__=__webpack_require__(309);return __webpack_exports__})());