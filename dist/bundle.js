!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("ecstatic",[],n):"object"==typeof exports?exports.ecstatic=n():e.ecstatic=n()}(window,(function(){return function(e){var n=window.webpackHotUpdateecstatic;window.webpackHotUpdateecstatic=function(e,t){!function(e,n){if(!a[e]||!G[e])return;for(var t in G[e]=!1,n)Object.prototype.hasOwnProperty.call(n,t)&&(b[t]=n[t]);0==--r&&0===u&&X()}(e,t),n&&n(e,t)};var t,Q=!0,B="1a6e8249c597dc709289",i={},s=[],c=[];function d(e){var n=Z[e];if(!n)return L;var Q=function(Q){return n.hot.active?(Z[Q]?-1===Z[Q].parents.indexOf(e)&&Z[Q].parents.push(e):(s=[e],t=Q),-1===n.children.indexOf(Q)&&n.children.push(Q)):(console.warn("[HMR] unexpected require("+Q+") from disposed module "+e),s=[]),L(Q)},B=function(e){return{configurable:!0,enumerable:!0,get:function(){return L[e]},set:function(n){L[e]=n}}};for(var i in L)Object.prototype.hasOwnProperty.call(L,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(Q,i,B(i));return Q.e=function(e){return"ready"===l&&U("prepare"),u++,L.e(e).then(n,(function(e){throw n(),e}));function n(){u--,"prepare"===l&&(C[e]||x(e),0===u&&0===r&&X())}},Q.t=function(e,n){return 1&n&&(e=Q(e)),L.t(e,-2&n)},Q}function o(e){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:t!==e,active:!0,accept:function(e,t){if(void 0===e)n._selfAccepted=!0;else if("function"==typeof e)n._selfAccepted=e;else if("object"==typeof e)for(var Q=0;Q<e.length;Q++)n._acceptedDependencies[e[Q]]=t||function(){};else n._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)n._selfDeclined=!0;else if("object"==typeof e)for(var t=0;t<e.length;t++)n._declinedDependencies[e[t]]=!0;else n._declinedDependencies[e]=!0},dispose:function(e){n._disposeHandlers.push(e)},addDisposeHandler:function(e){n._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=n._disposeHandlers.indexOf(e);t>=0&&n._disposeHandlers.splice(t,1)},check:y,apply:V,status:function(e){if(!e)return l;F.push(e)},addStatusHandler:function(e){F.push(e)},removeStatusHandler:function(e){var n=F.indexOf(e);n>=0&&F.splice(n,1)},data:i[e]};return t=void 0,n}var F=[],l="idle";function U(e){l=e;for(var n=0;n<F.length;n++)F[n].call(null,e)}var I,b,g,r=0,u=0,C={},G={},a={};function p(e){return+e+""===e?+e:e}function y(e){if("idle"!==l)throw new Error("check() is only allowed in idle status");return Q=e,U("check"),(n=1e4,n=n||1e4,new Promise((function(e,t){if("undefined"==typeof XMLHttpRequest)return t(new Error("No browser support"));try{var Q=new XMLHttpRequest,B=L.p+"hot/hot-update.json";Q.open("GET",B,!0),Q.timeout=n,Q.send(null)}catch(e){return t(e)}Q.onreadystatechange=function(){if(4===Q.readyState)if(0===Q.status)t(new Error("Manifest request to "+B+" timed out."));else if(404===Q.status)e();else if(200!==Q.status&&304!==Q.status)t(new Error("Manifest request to "+B+" failed."));else{try{var n=JSON.parse(Q.responseText)}catch(e){return void t(e)}e(n)}}}))).then((function(e){if(!e)return U("idle"),null;G={},C={},a=e.c,g=e.h,U("prepare");var n=new Promise((function(e,n){I={resolve:e,reject:n}}));b={};return x(0),"prepare"===l&&0===u&&0===r&&X(),n}));var n}function x(e){var n;a[e]?(G[e]=!0,r++,(n=document.createElement("script")).charset="utf-8",n.src=L.p+"hot/hot-update.js",document.head.appendChild(n)):C[e]=!0}function X(){U("ready");var e=I;if(I=null,e)if(Q)Promise.resolve().then((function(){return V(Q)})).then((function(n){e.resolve(n)}),(function(n){e.reject(n)}));else{var n=[];for(var t in b)Object.prototype.hasOwnProperty.call(b,t)&&n.push(p(t));e.resolve(n)}}function V(n){if("ready"!==l)throw new Error("apply() is only allowed in ready status");var t,Q,c,d,o;function F(e){for(var n=[e],t={},Q=n.map((function(e){return{chain:[e],id:e}}));Q.length>0;){var B=Q.pop(),i=B.id,s=B.chain;if((d=Z[i])&&!d.hot._selfAccepted){if(d.hot._selfDeclined)return{type:"self-declined",chain:s,moduleId:i};if(d.hot._main)return{type:"unaccepted",chain:s,moduleId:i};for(var c=0;c<d.parents.length;c++){var o=d.parents[c],F=Z[o];if(F){if(F.hot._declinedDependencies[i])return{type:"declined",chain:s.concat([o]),moduleId:i,parentId:o};-1===n.indexOf(o)&&(F.hot._acceptedDependencies[i]?(t[o]||(t[o]=[]),I(t[o],[i])):(delete t[o],n.push(o),Q.push({chain:s.concat([o]),id:o})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function I(e,n){for(var t=0;t<n.length;t++){var Q=n[t];-1===e.indexOf(Q)&&e.push(Q)}}n=n||{};var r={},u=[],C={},G=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var y in b)if(Object.prototype.hasOwnProperty.call(b,y)){var x;o=p(y);var X=!1,V=!1,R=!1,m="";switch((x=b[y]?F(o):{type:"disposed",moduleId:y}).chain&&(m="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(X=new Error("Aborted because of self decline: "+x.moduleId+m));break;case"declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(X=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+m));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(x),n.ignoreUnaccepted||(X=new Error("Aborted because "+o+" is not accepted"+m));break;case"accepted":n.onAccepted&&n.onAccepted(x),V=!0;break;case"disposed":n.onDisposed&&n.onDisposed(x),R=!0;break;default:throw new Error("Unexception type "+x.type)}if(X)return U("abort"),Promise.reject(X);if(V)for(o in C[o]=b[o],I(u,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,o)&&(r[o]||(r[o]=[]),I(r[o],x.outdatedDependencies[o]));R&&(I(u,[x.moduleId]),C[o]=G)}var E,N=[];for(Q=0;Q<u.length;Q++)o=u[Q],Z[o]&&Z[o].hot._selfAccepted&&C[o]!==G&&N.push({module:o,errorHandler:Z[o].hot._selfAccepted});U("dispose"),Object.keys(a).forEach((function(e){!1===a[e]&&function(e){delete installedChunks[e]}(e)}));for(var W,h,A=u.slice();A.length>0;)if(o=A.pop(),d=Z[o]){var v={},D=d.hot._disposeHandlers;for(c=0;c<D.length;c++)(t=D[c])(v);for(i[o]=v,d.hot.active=!1,delete Z[o],delete r[o],c=0;c<d.children.length;c++){var S=Z[d.children[c]];S&&((E=S.parents.indexOf(o))>=0&&S.parents.splice(E,1))}}for(o in r)if(Object.prototype.hasOwnProperty.call(r,o)&&(d=Z[o]))for(h=r[o],c=0;c<h.length;c++)W=h[c],(E=d.children.indexOf(W))>=0&&d.children.splice(E,1);for(o in U("apply"),B=g,C)Object.prototype.hasOwnProperty.call(C,o)&&(e[o]=C[o]);var f=null;for(o in r)if(Object.prototype.hasOwnProperty.call(r,o)&&(d=Z[o])){h=r[o];var H=[];for(Q=0;Q<h.length;Q++)if(W=h[Q],t=d.hot._acceptedDependencies[W]){if(-1!==H.indexOf(t))continue;H.push(t)}for(Q=0;Q<H.length;Q++){t=H[Q];try{t(h)}catch(e){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:o,dependencyId:h[Q],error:e}),n.ignoreErrored||f||(f=e)}}}for(Q=0;Q<N.length;Q++){var T=N[Q];o=T.module,s=[o];try{L(o)}catch(e){if("function"==typeof T.errorHandler)try{T.errorHandler(e)}catch(t){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:o,error:t,originalError:e}),n.ignoreErrored||f||(f=t),f||(f=e)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:o,error:e}),n.ignoreErrored||f||(f=e)}}return f?(U("fail"),Promise.reject(f)):(U("idle"),new Promise((function(e){e(u)})))}var Z={};function L(n){if(Z[n])return Z[n].exports;var t=Z[n]={i:n,l:!1,exports:{},hot:o(n),parents:(c=s,s=[],c),children:[]};return e[n].call(t.exports,t,t.exports,d(n)),t.l=!0,t.exports}return L.m=e,L.c=Z,L.d=function(e,n,t){L.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},L.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},L.t=function(e,n){if(1&n&&(e=L(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(L.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var Q in e)L.d(t,Q,function(n){return e[n]}.bind(null,Q));return t},L.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return L.d(n,"a",n),n},L.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},L.p="/static/",L.h=function(){return B},d(0)(L.s=0)}([function(e,n,t){e.exports=t(1)},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "World", function() { return /* reexport */ World_World; });\n__webpack_require__.d(__webpack_exports__, "createEntity", function() { return /* reexport */ createEntity; });\n__webpack_require__.d(__webpack_exports__, "createSystem", function() { return /* reexport */ createSystem; });\n\n// CONCATENATED MODULE: ./src/ComponentCollection.ts\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass ComponentCollection {\n  constructor() {\n    _defineProperty(this, "components", new Map());\n\n    _defineProperty(this, "add", component => {\n      this.components.set(component.type, component);\n    });\n\n    _defineProperty(this, "update", (cType, func) => {\n      if (this.components.has(cType)) {\n        const c = this.components.get(cType);\n\n        if (c) {\n          const updatedComponent = func(c);\n          this.components.set(cType, updatedComponent);\n        }\n      }\n    });\n\n    _defineProperty(this, "get", cType => {\n      if (!this.components.has(cType)) {\n        throw new Error(`ComponentCollection does not have component of type ${cType}`);\n      }\n\n      return this.components.get(cType);\n    });\n\n    _defineProperty(this, "has", cType => {\n      if (Array.isArray(cType)) {\n        return cType.every(ct => this.components.has(ct) === true);\n      } else {\n        return this.components.has(cType);\n      }\n    });\n  }\n\n  get size() {\n    return this.components.size;\n  }\n\n}\n// CONCATENATED MODULE: ./src/World.ts\nfunction World_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass World_World {\n  constructor() {\n    World_defineProperty(this, "componentCollections", new Map());\n\n    World_defineProperty(this, "entities", new Map());\n\n    World_defineProperty(this, "entitiesByCTypes", new Map());\n\n    World_defineProperty(this, "find", predicate => {\n      for (const entity of this.entities.values()) {\n        if (predicate(entity)) {\n          return entity;\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "findAll", predicate => {\n      const results = [];\n\n      for (const entity of this.entities.values()) {\n        if (predicate(entity)) {\n          results.push(entity);\n        }\n      }\n\n      return results;\n    });\n\n    World_defineProperty(this, "locate", cTypes => {\n      for (const entity of this.entities.values()) {\n        if (entity.components.has(cTypes)) {\n          return entity;\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "locateAll", cTypes => {\n      const results = [];\n\n      for (const entity of this.entities.values()) {\n        if (entity.components.has(cTypes)) {\n          results.push(entity);\n        }\n      }\n\n      return results;\n    });\n\n    World_defineProperty(this, "grab", cType => {\n      const entity = this.locate(cType);\n\n      if (entity) {\n        const cc = this.componentCollections.get(entity.id);\n        const component = cc.get(cType);\n        return {\n          entity,\n          component\n        };\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "grabBy", (cType, predicate) => {\n      const entities = this.locateAll(cType);\n\n      for (const entity of entities) {\n        const cc = this.componentCollections.get(entity.id);\n        const component = cc.get(cType);\n\n        if (predicate(component)) {\n          return {\n            component,\n            entity\n          };\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "grabAll", cType => {\n      return this.locateAll(cType).map(entity => ({\n        entity,\n        component: entity.components.get(cType)\n      }));\n    });\n\n    World_defineProperty(this, "set", (eid, component) => {\n      const cc = this.componentCollections.get(eid) || new ComponentCollection();\n      cc.add(component);\n      this.componentCollections.set(eid, cc);\n\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\n        if (ctArr.every(cc.has)) {\n          entitySet.add(eid);\n        }\n      }\n    });\n  }\n\n  registerSystem(cTypes) {\n    this.entitiesByCTypes.set(cTypes, new Set());\n  }\n\n  registerEntity(entity) {\n    const cc = new ComponentCollection();\n    this.componentCollections.set(entity.id, cc);\n    this.entities.set(entity.id, entity);\n  }\n\n  clearEntityComponents(eid) {\n    this.componentCollections.set(eid, new ComponentCollection());\n\n    for (const entitySet of this.entitiesByCTypes.values()) {\n      if (entitySet.has(eid)) {\n        entitySet.delete(eid);\n      }\n    }\n  }\n\n  destroyEntity(eid) {\n    this.componentCollections.delete(eid);\n    this.entities.delete(eid);\n\n    for (const entitySet of this.entitiesByCTypes.values()) {\n      if (entitySet.has(eid)) {\n        entitySet.delete(eid);\n      }\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != \'undefined\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != \'undefined\' && typeof msCrypto.getRandomValues == \'function\' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error(\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\');\n  }\n\n  return getRandomValues(rnds8);\n}\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/bytesToUuid.js\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var bytesToUuid_i = 0; bytesToUuid_i < 256; ++bytesToUuid_i) {\n  byteToHex[bytesToUuid_i] = (bytesToUuid_i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join(\'\');\n}\n\n/* harmony default export */ var esm_browser_bytesToUuid = (bytesToUuid);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\n\n\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == \'string\') {\n    buf = options === \'binary\' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || esm_browser_bytesToUuid(rnds);\n}\n\n/* harmony default export */ var esm_browser_v4 = (v4);\n// CONCATENATED MODULE: ./src/Entity.ts\nfunction Entity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass Entity_Entity {\n  constructor(world) {\n    Entity_defineProperty(this, "id", void 0);\n\n    Entity_defineProperty(this, "world", void 0);\n\n    this.id = esm_browser_v4();\n    this.world = world;\n    /*\n    Registering with the World.\n    */\n\n    this.world.registerEntity(this);\n  }\n\n  add(component) {\n    this.world.set(this.id, component);\n    return this;\n  } // TODO: figure out some much better error handling throughout this library.\n  //       Probably throw some errors.\n\n\n  get(cType) {\n    const cc = this.world.entities.get(this.id);\n\n    if (!cc) {\n      console.error(\'unable to find component collection for specified entity: \', this.id);\n    }\n\n    const component = cc.get(cType);\n\n    if (!component) {\n      console.error(`Unable to find component of type ${cType} in entity ${this.id}`);\n    }\n\n    return component;\n  }\n\n  getAll() {\n    return this.world.componentCollections.get(this.id);\n  }\n\n  get components() {\n    return this.world.componentCollections.get(this.id);\n  }\n  /** Clears all components from an Entity */\n\n\n  clear() {\n    this.world.clearEntityComponents(this.id);\n    return this;\n  }\n\n  destroy() {\n    this.world.destroyEntity(this.id);\n  }\n\n}\nfunction createEntity(world) {\n  const entity = new Entity_Entity(world);\n  return entity;\n}\n// CONCATENATED MODULE: ./src/System.ts\nfunction createSystem(world, cTypes, systemFunc) {\n  world.registerSystem(cTypes);\n  return () => {\n    let index = 0;\n    const size = world.entitiesByCTypes.size; // Used for matching the array of ComponentTypes which is the key\n    // of where the ComponentCollection is, with the array of ComponentTypes\n    // that are passes.\n    // Might be nice in the future to go back to a ref check on cTypes, but\n    // for now this doesn\'t seem to be that much of a perf hit.\n    // for (const ct of world.entitiesByCTypes.keys()) {\n    //   if (cTypes.length === ct.length && cTypes.every(c => ct.includes(c))) {\n    //     for (const eid of world.entitiesByCTypes.get(cTypes)) {\n    //       const args: SystemFuncArgs<CT> = {\n    //         entity: world.entities.get(eid),\n    //         components: world.componentCollections.get(eid),\n    //         world,\n    //         index,\n    //         size,\n    //         isFirst: index === 0,\n    //         isLast: index + 1 === size,\n    //       }\n    //       systemFunc(args);\n    //       index += 1;\n    //     }\n    //   }\n    // }\n\n    for (const eid of world.entitiesByCTypes.get(cTypes)) {\n      const args = {\n        entity: world.entities.get(eid),\n        components: world.componentCollections.get(eid),\n        world,\n        index,\n        size,\n        isFirst: index === 0,\n        isLast: index + 1 === size\n      };\n      systemFunc(args);\n      index += 1;\n    }\n  };\n}\n// CONCATENATED MODULE: ./src/index.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')}])}));