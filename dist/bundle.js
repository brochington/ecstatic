!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("ecstatic",[],t):"object"==typeof exports?exports.ecstatic=t():n.ecstatic=t()}(self,()=>(()=>{"use strict";var __webpack_modules__={309:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('{// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Entity: () => (/* reexport */ Entity_Entity),\n  World: () => (/* reexport */ World_World),\n  trackComponent: () => (/* reexport */ trackComponent)\n});\n\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== \'undefined\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== \'undefined\' && typeof msCrypto.getRandomValues === \'function\' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error(\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/regex.js\n/* ESM default export */ const regex = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/validate.js\n\n\nfunction validate(uuid) {\n  return typeof uuid === \'string\' && regex.test(uuid);\n}\n\n/* ESM default export */ const esm_browser_validate = (validate);\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/stringify.js\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var stringify_i = 0; stringify_i < 256; ++stringify_i) {\n  byteToHex.push((stringify_i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It\'s been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \'-\' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \'-\' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \'-\' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \'-\' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it\'s likely due to one\n  // of the following:\n  // - One or more input array values don\'t map to a hex octet (leading to\n  // "undefined" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!esm_browser_validate(uuid)) {\n    throw TypeError(\'Stringified UUID is invalid\');\n  }\n\n  return uuid;\n}\n\n/* ESM default export */ const esm_browser_stringify = (stringify);\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\n\n\n\nfunction v4_v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return esm_browser_stringify(rnds);\n}\n\n/* ESM default export */ const v4 = (v4_v4);\n;// CONCATENATED MODULE: ./src/guards.ts\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nfunction isComponentInstance(Class, comp) {\n    if (!comp) {\n        return false;\n    }\n    if (!_instanceof(comp, Class)) {\n        return false;\n    }\n    return true;\n}\n\n;// CONCATENATED MODULE: ./src/ComponentCollection.ts\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n\nvar ComponentCollection_ComponentCollection = /*#__PURE__*/ function() {\n    "use strict";\n    function ComponentCollection() {\n        var _this = this;\n        _class_call_check(this, ComponentCollection);\n        _define_property(this, "components", new Map());\n        // instance of a component\n        _define_property(this, "add", function(component) {\n            _this.components.set(component.constructor.name, component);\n        });\n        _define_property(this, "update", function(cl, func) {\n            var c = _this.components.get(cl.name);\n            if (isComponentInstance(cl, c)) {\n                var updatedComponent = func(c);\n                _this.components.set(cl.name, updatedComponent);\n            }\n        });\n        /**\n   * Remove a component.\n   * @param cType Class of component to remove.\n   */ _define_property(this, "remove", function(cType) {\n            _this.components.delete(cType.name);\n        });\n        /**\n   * Get a component that matches the passed class.\n   * Will throw an error if an instance of the given component\n   * doesn\'t exist in the collection, so if you don\'t know if it\'s safe\n   * to get a component, you should test with has() or hasByName() first.\n   * You have been warned.\n   * @param cl component Class reference.\n   */ _define_property(this, "get", function(cl) {\n            var comp = _this.components.get(cl.name);\n            if (isComponentInstance(cl, comp)) {\n                return comp;\n            } else {\n                throw new Error("ComponentCollection does not have component of type ".concat(cl.name));\n            }\n        });\n        /**\n   * Test to see if the collection contains a specific Class or Classes.\n   * @param cType component Class, or array of component Classes.\n   */ _define_property(this, "has", function(cType) {\n            return Array.isArray(cType) ? cType.every(function(ct) {\n                return _this.components.has(ct.name) === true;\n            }) : _this.components.has(cType.name);\n        });\n        /**\n   * Test to see if the collection has a component instance based on a\n   * class name. Some build steps/minifiers will change the name of Classes,\n   * so it\'s usually best to pass in a MyClass.name instead of \'MyClass\'.\n   * @param cName The name of a Class, or array of Class names.\n   */ _define_property(this, "hasByName", function(cName) {\n            return Array.isArray(cName) ? cName.every(function(ct) {\n                return _this.components.has(ct) === true;\n            }) : _this.components.has(cName);\n        });\n    }\n    _create_class(ComponentCollection, [\n        {\n            key: "componentTypes",\n            get: /**\n   * Get the component type names that are currently being used in the collection.\n   */ function get() {\n                return _to_consumable_array(this.components.keys());\n            }\n        },\n        {\n            key: "size",\n            get: /**\n   * Get the current number of components that are in the collection.\n   */ function get() {\n                return this.components.size;\n            }\n        },\n        {\n            key: "toDevComponents",\n            value: function toDevComponents() {\n                var obj = {};\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.components[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = _sliced_to_array(_step.value, 2), compName = _step_value[0], comp = _step_value[1];\n                        obj[compName] = comp;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return obj;\n            }\n        }\n    ]);\n    return ComponentCollection;\n}();\n// CT is a Union, like `type = FirstComponent | SecondComponent`.\n\n\n;// CONCATENATED MODULE: ./src/DevEntity.ts\nfunction DevEntity_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction DevEntity_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction DevEntity_array_without_holes(arr) {\n    if (Array.isArray(arr)) return DevEntity_array_like_to_array(arr);\n}\nfunction DevEntity_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction DevEntity_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction DevEntity_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) DevEntity_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) DevEntity_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction DevEntity_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction DevEntity_iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction DevEntity_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction DevEntity_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevEntity_non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevEntity_sliced_to_array(arr, i) {\n    return DevEntity_array_with_holes(arr) || DevEntity_iterable_to_array_limit(arr, i) || DevEntity_unsupported_iterable_to_array(arr, i) || DevEntity_non_iterable_rest();\n}\nfunction DevEntity_to_consumable_array(arr) {\n    return DevEntity_array_without_holes(arr) || DevEntity_iterable_to_array(arr) || DevEntity_unsupported_iterable_to_array(arr) || DevEntity_non_iterable_spread();\n}\nfunction DevEntity_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return DevEntity_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DevEntity_array_like_to_array(o, minLen);\n}\nvar DevEntity_DevEntity = /*#__PURE__*/ function() {\n    "use strict";\n    function DevEntity(entity, world) {\n        DevEntity_class_call_check(this, DevEntity);\n        DevEntity_define_property(this, "id", void 0);\n        DevEntity_define_property(this, "components", void 0);\n        DevEntity_define_property(this, "tags", void 0);\n        DevEntity_define_property(this, "systems", []);\n        DevEntity_define_property(this, "state", void 0);\n        this.id = entity.id;\n        this.components = entity.components.toDevComponents(), this.tags = DevEntity_to_consumable_array(entity.tags);\n        this.state = entity.state;\n        var compNames = Object.keys(this.components);\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = world.systems.compNamesBySystemName[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _step_value = DevEntity_sliced_to_array(_step.value, 2), systemName = _step_value[0], cNames = _step_value[1];\n                if (cNames.every(function(cName) {\n                    return compNames.includes(cName);\n                })) {\n                    this.systems.push(systemName);\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    DevEntity_create_class(DevEntity, [\n        {\n            key: "toTableRow",\n            value: function toTableRow() {\n                return {\n                    id: this.id,\n                    components: Object.keys(this.components).join(", "),\n                    tags: this.tags.join(", "),\n                    systems: this.systems.join(\', \')\n                };\n            }\n        }\n    ]);\n    return DevEntity;\n}();\n/* ESM default export */ const src_DevEntity = (DevEntity_DevEntity);\n\n;// CONCATENATED MODULE: ./src/SimpleFSM.ts\nfunction SimpleFSM_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction SimpleFSM_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction SimpleFSM_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) SimpleFSM_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) SimpleFSM_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction SimpleFSM_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar SimpleFSM_SimpleFSM = /*#__PURE__*/ function() {\n    "use strict";\n    function SimpleFSM(initialState, transitions) {\n        SimpleFSM_class_call_check(this, SimpleFSM);\n        SimpleFSM_define_property(this, "current", void 0);\n        SimpleFSM_define_property(this, "inital", void 0);\n        SimpleFSM_define_property(this, "transitions", void 0);\n        this.inital = initialState;\n        this.current = initialState;\n        this.transitions = transitions;\n    }\n    SimpleFSM_create_class(SimpleFSM, [\n        {\n            key: "next",\n            value: function next(data) {\n                if (this.transitions[this.current]) {\n                    this.current = this.transitions[this.current](data, this.current);\n                }\n            }\n        },\n        {\n            key: "reset",\n            value: function reset() {\n                this.current = this.inital;\n            }\n        },\n        {\n            key: "is",\n            value: function is(checkState) {\n                return this.current === checkState;\n            }\n        }\n    ]);\n    return SimpleFSM;\n}();\n\n\n;// CONCATENATED MODULE: ./src/Entity.ts\nfunction Entity_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction Entity_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction Entity_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction Entity_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction Entity_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) Entity_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) Entity_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction Entity_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction Entity_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction Entity_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction Entity_sliced_to_array(arr, i) {\n    return Entity_array_with_holes(arr) || Entity_iterable_to_array_limit(arr, i) || Entity_unsupported_iterable_to_array(arr, i) || Entity_non_iterable_rest();\n}\nfunction Entity_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return Entity_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Entity_array_like_to_array(o, minLen);\n}\n\n\n\n\nvar Entity_Entity = /*#__PURE__*/ function() {\n    "use strict";\n    function Entity(world) {\n        var _this = this;\n        Entity_class_call_check(this, Entity);\n        Entity_define_property(this, "_id", void 0);\n        Entity_define_property(this, "_world", void 0);\n        Entity_define_property(this, "_error", void 0);\n        Entity_define_property(this, "_state", void 0);\n        this._id = v4();\n        this._world = world;\n        this._error = null;\n        var fsmTransition = function(ns) {\n            if (ns === "error" || _this._error) return "error";\n            return ns;\n        };\n        this._state = new SimpleFSM_SimpleFSM("creating", {\n            creating: fsmTransition,\n            created: fsmTransition,\n            destroying: fsmTransition,\n            destroyed: function() {\n                return "destroyed";\n            },\n            error: function() {\n                return "error";\n            }\n        });\n        /*\n    Registering with the World.\n    */ this._world.registerEntity(this);\n        if (this._world.systems.compNamesBySystemName.size === 0) {\n            this._state.next(\'created\');\n        }\n    }\n    Entity_create_class(Entity, [\n        {\n            key: "id",\n            get: function get() {\n                return this._id;\n            }\n        },\n        {\n            key: "world",\n            get: function get() {\n                return this._world;\n            }\n        },\n        {\n            key: "state",\n            get: function get() {\n                return this._state.current;\n            }\n        },\n        {\n            /* LifeCycle methods, meant to be overridden */ key: "onCreate",\n            value: function onCreate(world) {\n            // abstract\n            }\n        },\n        {\n            key: "onDestroy",\n            value: function onDestroy(world) {\n            // abstract\n            }\n        },\n        {\n            key: "onComponentAdd",\n            value: function onComponentAdd(args) {\n            // abstract\n            }\n        },\n        {\n            key: "onTrackedComponentUpdate",\n            value: function onTrackedComponentUpdate(args) {\n            // abstract\n            }\n        },\n        {\n            key: "onComponentRemove",\n            value: function onComponentRemove(args) {\n            // abstract\n            }\n        },\n        {\n            /**\n   * Add a component to an Entity, doh.\n   */ key: "add",\n            value: function add(component) {\n                this._world.add(this._id, component);\n                return this;\n            }\n        },\n        {\n            /**\n   * Add a tag to a component\n   */ key: "addTag",\n            value: function addTag(tag) {\n                var entitySet = this._world.entitiesByTags.has(tag) ? this._world.entitiesByTags.get(tag) : new Set();\n                if (entitySet) {\n                    entitySet.add(this._id);\n                    this._world.entitiesByTags.set(tag, entitySet);\n                }\n                return this;\n            }\n        },\n        {\n            /**\n   * Determines if an entity has a component related to it.\n   */ key: "has",\n            value: function has(cType) {\n                var cc = this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n                return cc.has(cType);\n            }\n        },\n        {\n            /**\n   * Check to see if an entity tagged with a given tag.\n   */ key: "hasTag",\n            value: function hasTag(tag) {\n                if (this._world.entitiesByTags.has(tag)) {\n                    var entitySet = this._world.entitiesByTags.get(tag);\n                    if (entitySet) {\n                        return entitySet.has(this._id);\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            /**\n   * Get a component that belongs to an entity.\n   */ key: "get",\n            value: function get(cl) {\n                var cc = this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n                var component = cc.get(cl);\n                return component;\n            }\n        },\n        {\n            /**\n   * Get all components that have been added to an entity, via a ComponentCollection\n   */ key: "getAll",\n            value: function getAll() {\n                return this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n            }\n        },\n        {\n            /**\n   * Remove a component from an entity.\n   * @param cType A component class, eg MyComponent\n   */ key: "remove",\n            value: function remove(cType) {\n                this._world.remove(this._id, cType);\n                return this;\n            }\n        },\n        {\n            /**\n   * Remove a tag from an entity\n   */ key: "removeTag",\n            value: function removeTag(tag) {\n                if (this._world.entitiesByTags.has(tag)) {\n                    var entitySet = this._world.entitiesByTags.get(tag);\n                    if (entitySet) {\n                        entitySet.delete(this._id);\n                        if (entitySet.size === 0) {\n                            this._world.entitiesByTags.delete(tag);\n                        }\n                    }\n                }\n                return this;\n            }\n        },\n        {\n            /** Clears all components from an Entity */ key: "clear",\n            value: function clear() {\n                this._world.clearEntityComponents(this._id);\n                return this;\n            }\n        },\n        {\n            /**\n   * Remove all tags on an entity\n   */ key: "clearTags",\n            value: function clearTags() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this._world.entitiesByTags.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = Entity_sliced_to_array(_step.value, 2), tag = _step_value[0], entitySet = _step_value[1];\n                        entitySet.delete(this._id);\n                        if (entitySet.size === 0) {\n                            this._world.entitiesByTags.delete(tag);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return this;\n            }\n        },\n        {\n            /**\n   * Sets the state of the entity to \'created\'. that\'s it.\n   */ key: "finishCreation",\n            value: function finishCreation() {\n                this._state.next(\'created\');\n            }\n        },\n        {\n            /**\n   * Destroy an entity. Actual destruction is deferred until after the next pass of systems.\n   * This gives the systems a chance to do any cleanup that might be needed.\n   */ key: "destroy",\n            value: function destroy() {\n                // If no systems are added, the destroy immediately.\n                if (this._world.systems.compNamesBySystemName.size === 0) {\n                    this.destroyImmediately();\n                    return;\n                }\n                // Mark as "destroying" so that systems can act on it before actually being destroyed.\n                this._state.next(\'destroying\');\n            }\n        },\n        {\n            key: "destroyImmediately",\n            value: function destroyImmediately() {\n                // Right now calling before the actual destorying of the entity.\n                // Might want to change this to post destruction in the future, who knows.\n                this.onDestroy(this._world);\n                // Actually destroy entity.\n                this._world.destroyEntity(this._id); // should return an error??\n                this._state.next(\'destroyed\');\n            }\n        },\n        {\n            key: "components",\n            get: /**\n   * Get all components that have been added to an entity, via a ComponentCollection.\n   * Does the same thing as entityInstance.getAll().\n   */ function get() {\n                return this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\n            }\n        },\n        {\n            key: "tags",\n            get: /**\n   * Retrieves all the tags that have been added to this entity.\n   */ function get() {\n                var tags = new Set();\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this._world.entitiesByTags.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = Entity_sliced_to_array(_step.value, 2), tag = _step_value[0], entitySet = _step_value[1];\n                        if (entitySet.has(this._id)) {\n                            tags.add(tag);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return tags;\n            }\n        },\n        {\n            /**\n   * Convert Entity to a DevEntity. Very helpful in for debugging.\n   */ key: "toDevEntity",\n            value: function toDevEntity() {\n                return new src_DevEntity(this, this._world);\n            }\n        }\n    ]);\n    return Entity;\n}();\n\n\n;// CONCATENATED MODULE: ./src/DevTools.ts\nfunction DevTools_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction DevTools_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction DevTools_array_without_holes(arr) {\n    if (Array.isArray(arr)) return DevTools_array_like_to_array(arr);\n}\nfunction DevTools_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction DevTools_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction DevTools_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) DevTools_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) DevTools_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction DevTools_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction DevTools_iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction DevTools_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction DevTools_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevTools_non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction DevTools_sliced_to_array(arr, i) {\n    return DevTools_array_with_holes(arr) || DevTools_iterable_to_array_limit(arr, i) || DevTools_unsupported_iterable_to_array(arr, i) || DevTools_non_iterable_rest();\n}\nfunction DevTools_to_consumable_array(arr) {\n    return DevTools_array_without_holes(arr) || DevTools_iterable_to_array(arr) || DevTools_unsupported_iterable_to_array(arr) || DevTools_non_iterable_spread();\n}\nfunction DevTools_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return DevTools_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DevTools_array_like_to_array(o, minLen);\n}\nvar DevTools_DevTools = /*#__PURE__*/ function() {\n    "use strict";\n    function DevTools(world) {\n        DevTools_class_call_check(this, DevTools);\n        DevTools_define_property(this, "world", void 0);\n        this.world = world;\n    }\n    DevTools_create_class(DevTools, [\n        {\n            key: "systemComponents",\n            get: /**\n   * display the all systems of the world, and the components required by each system.\n   * Super helpful to use with console.table()\n   * @example\n   * ```\n   * console.table(world.dev.systemComponents);\n   * ```\n   */ function get() {\n                var compsBySystems = [];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.world.systems.compNamesBySystemName[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = DevTools_sliced_to_array(_step.value, 2), system = _step_value[0], compNames = _step_value[1];\n                        compsBySystems.push({\n                            system: system,\n                            components: compNames.join(", ")\n                        });\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return compsBySystems;\n            }\n        },\n        {\n            key: "entities",\n            get: /**\n   * Create an array of DevEntites. Can be very helpful for things like inspecting component state,\n   * and which systems will be called on an entity.\n   * @example\n   * ```\n   * console.table(world.dev.entities);\n   *\n   * // Pro tip! try displaying a table of entities with console.table and DevEntity.toTableRow().\n   * console.table(world.dev.entities.map(devEntity => devEntity.toTableRow()));\n   * ```\n   */ function get() {\n                return DevTools_to_consumable_array(this.world.entities.values()).map(function(e) {\n                    return e.toDevEntity();\n                });\n            }\n        }\n    ]);\n    return DevTools;\n}();\n/* ESM default export */ const src_DevTools = (DevTools_DevTools);\n\n;// CONCATENATED MODULE: ./src/Systems.ts\nfunction Systems_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction Systems_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction Systems_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction Systems_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction Systems_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) Systems_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) Systems_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction Systems_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction Systems_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction Systems_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction Systems_sliced_to_array(arr, i) {\n    return Systems_array_with_holes(arr) || Systems_iterable_to_array_limit(arr, i) || Systems_unsupported_iterable_to_array(arr, i) || Systems_non_iterable_rest();\n}\nfunction Systems_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return Systems_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Systems_array_like_to_array(o, minLen);\n}\n\n\nvar Systems_Systems = /*#__PURE__*/ function() {\n    "use strict";\n    function Systems(world) {\n        Systems_class_call_check(this, Systems);\n        Systems_define_property(this, "world", void 0);\n        Systems_define_property(this, "systemFuncBySystemName", void 0); // double check to make sure that maps are ordered.\n        Systems_define_property(this, "compNamesBySystemName", void 0);\n        this.world = world;\n        this.systemFuncBySystemName = new Map();\n        this.compNamesBySystemName = new Map();\n    }\n    Systems_create_class(Systems, [\n        {\n            key: "add",\n            value: function add(cTypes, systemFunc, funcName) {\n                var cNames = cTypes.map(function(ct) {\n                    return ct.name;\n                });\n                var name = systemFunc.name;\n                if (systemFunc.name === "") {\n                    // Super brute force, and might lead to errors in the future, but for now\n                    // using the stringified system function if the function doesn\'t already have a name.\n                    // This is useful for anonymous functions used as a system function.\n                    // Might be good to figure out how to get a hash of the function string.\n                    name = systemFunc.toString().slice(0, 30);\n                }\n                if (funcName) {\n                    name = funcName;\n                }\n                this.systemFuncBySystemName.set(name, systemFunc);\n                this.compNamesBySystemName.set(name, cNames);\n                this.world.entitiesByCTypes.set(cNames, new Set());\n                return this;\n            }\n        },\n        {\n            key: "run",\n            value: function run() {\n                var size = this.world.entitiesByCTypes.size;\n                var entitiesInCreatingState = [];\n                var entitiesInDestroyingState = [];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.world.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entity = _step.value;\n                        if (entity.state === "creating") {\n                            entitiesInCreatingState.push(entity);\n                        }\n                        if (entity.state === "destroying") {\n                            entitiesInDestroyingState.push(entity);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = this.systemFuncBySystemName.entries()[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var _step_value = Systems_sliced_to_array(_step1.value, 2), funcName = _step_value[0], systemFunc = _step_value[1];\n                        var index = 0;\n                        var cNames = this.compNamesBySystemName.get(funcName) || [];\n                        var cTypeArrs = this.world.entitiesByCTypes.get(cNames) || new Set();\n                        var _iteratorNormalCompletion2 = true, _didIteratorError2 = false, _iteratorError2 = undefined;\n                        try {\n                            for(var _iterator2 = cTypeArrs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){\n                                var eid = _step2.value;\n                                var args = {\n                                    entity: this.world.entities.get(eid) || new Entity_Entity(this.world),\n                                    components: this.world.componentCollections.get(eid) || new ComponentCollection_ComponentCollection(),\n                                    world: this.world,\n                                    index: index,\n                                    size: size,\n                                    isFirst: index === 0,\n                                    isLast: index + 1 === size\n                                };\n                                systemFunc(args);\n                                index += 1;\n                            }\n                        } catch (err) {\n                            _didIteratorError2 = true;\n                            _iteratorError2 = err;\n                        } finally{\n                            try {\n                                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                                    _iterator2.return();\n                                }\n                            } finally{\n                                if (_didIteratorError2) {\n                                    throw _iteratorError2;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion3 = true, _didIteratorError3 = false, _iteratorError3 = undefined;\n                try {\n                    for(var _iterator3 = entitiesInCreatingState[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true){\n                        var entity1 = _step3.value;\n                        entity1.finishCreation();\n                    }\n                } catch (err) {\n                    _didIteratorError3 = true;\n                    _iteratorError3 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                            _iterator3.return();\n                        }\n                    } finally{\n                        if (_didIteratorError3) {\n                            throw _iteratorError3;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion4 = true, _didIteratorError4 = false, _iteratorError4 = undefined;\n                try {\n                    for(var _iterator4 = entitiesInDestroyingState[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true){\n                        var entity2 = _step4.value;\n                        entity2.destroyImmediately();\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                            _iterator4.return();\n                        }\n                    } finally{\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n            }\n        }\n    ]);\n    return Systems;\n}();\n\n\n;// CONCATENATED MODULE: ./src/TrackedComponent.ts\nfunction TrackedComponent_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction TrackedComponent_array_without_holes(arr) {\n    if (Array.isArray(arr)) return TrackedComponent_array_like_to_array(arr);\n}\nfunction _construct(Parent, args, Class) {\n    if (_is_native_reflect_construct()) {\n        _construct = Reflect.construct;\n    } else {\n        _construct = function construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) _set_prototype_of(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return _construct.apply(null, arguments);\n}\nfunction TrackedComponent_iterable_to_array(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nfunction TrackedComponent_non_iterable_spread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _set_prototype_of(o, p);\n}\nfunction TrackedComponent_to_consumable_array(arr) {\n    return TrackedComponent_array_without_holes(arr) || TrackedComponent_iterable_to_array(arr) || TrackedComponent_unsupported_iterable_to_array(arr) || TrackedComponent_non_iterable_spread();\n}\nfunction TrackedComponent_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return TrackedComponent_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return TrackedComponent_array_like_to_array(o, minLen);\n}\nfunction _is_native_reflect_construct() {\n    try {\n        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (_) {}\n    return (_is_native_reflect_construct = function() {\n        return !!result;\n    })();\n}\n// Waiting for Typescript 4.2 to come out so that Symbols are supporded keys.\nvar TrackedCompSymbolKeys = {\n    isTracked: Symbol.for("ecs.trackedComponent.isTracked"),\n    world: Symbol.for("ecs.trackedComponent.world"),\n    entityIDs: Symbol.for("ecs.trackedComponent.entityIDs"),\n    getEntities: Symbol.for("ecs.trackedComponent.getEntities"),\n    setWorld: Symbol.for("ecs.trackedComponent.setWorld"),\n    onAdd: Symbol.for("ecs.trackedComponent.onAdd"),\n    onUpdate: Symbol.for("ecs.trackedComponent.onUpdate"),\n    onRemove: Symbol.for("ecs.trackedComponent.onRemove")\n};\n// NOTE: Really need to get symbols working as keys in Typescript.\n//       Until then will have to cast to keyof CT.\n// https://stackoverflow.com/questions/54324323/typescript-type-string-is-not-assignable-to-type-keyof\n// https://github.com/microsoft/TypeScript/pull/26797\nfunction createClassInstanceProxyHandlers(trackedEventHandlers) {\n    var updatedProps = new Set();\n    return {\n        set: function set(component, property, value) {\n            updatedProps.add(property);\n            //@ts-ignore\n            var world = component[TrackedCompSymbolKeys.world];\n            var previousVal = component[property];\n            component[property] = value;\n            //@ts-ignore\n            var entities = component[TrackedCompSymbolKeys.getEntities](world);\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    entity.onTrackedComponentUpdate({\n                        world: world,\n                        component: component\n                    });\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            if (trackedEventHandlers.onUpdate) {\n                trackedEventHandlers.onUpdate({\n                    entities: entities,\n                    world: world,\n                    component: component,\n                    previousVal: previousVal,\n                    property: property\n                });\n            }\n            return true;\n        }\n    };\n}\nfunction trackComponent(CompClass, trackedEventHandlers) {\n    return new Proxy(CompClass, {\n        construct: function construct(Component, args) {\n            var component = _construct(Component, TrackedComponent_to_consumable_array(args));\n            // For use in identifing a "tracked" class through the proxy.\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.isTracked] = true;\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.setWorld] = function(world) {\n                //@ts-ignore\n                component[TrackedCompSymbolKeys.world] = world;\n            };\n            // Holds entities that this component has been added to.\n            // Added and removed in world.add()/world.remove().\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.entityIDs] = new Set();\n            // Helper function to get the Entities from entityIDs\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.getEntities] = function(world) {\n                var entities = new Map();\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    //@ts-ignore\n                    for(var _iterator = component[TrackedCompSymbolKeys.entityIDs][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var eid = _step.value;\n                        var entity = world.entities.get(eid);\n                        if (entity) {\n                            entities.set(eid, entity);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return entities;\n            };\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.onAdd] = function(world, entity) {\n                if (trackedEventHandlers.onAdd) {\n                    //@ts-ignore\n                    var entities = component[TrackedCompSymbolKeys.getEntities](world);\n                    trackedEventHandlers.onAdd({\n                        component: component,\n                        world: world,\n                        entity: entity,\n                        entities: entities\n                    });\n                }\n            };\n            //@ts-ignore\n            component[TrackedCompSymbolKeys.onRemove] = function(world, entity) {\n                if (trackedEventHandlers.onRemove) {\n                    //@ts-ignore\n                    var entities = component[TrackedCompSymbolKeys.getEntities](world);\n                    trackedEventHandlers.onRemove({\n                        component: component,\n                        world: world,\n                        entity: entity,\n                        entities: entities\n                    });\n                }\n            };\n            return new Proxy(component, createClassInstanceProxyHandlers(trackedEventHandlers));\n        }\n    });\n}\n\n;// CONCATENATED MODULE: ./src/World.ts\nfunction World_array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction World_array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction World_class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\nfunction World_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction World_create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) World_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) World_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction World_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction World_iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i["return"] != null) _i["return"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction World_non_iterable_rest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nfunction World_sliced_to_array(arr, i) {\n    return World_array_with_holes(arr) || World_iterable_to_array_limit(arr, i) || World_unsupported_iterable_to_array(arr, i) || World_non_iterable_rest();\n}\nfunction World_unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return World_array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(n);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return World_array_like_to_array(o, minLen);\n}\n\n\n\n\n\nvar World_World = /*#__PURE__*/ function() {\n    "use strict";\n    function World() {\n        var _this = this;\n        World_class_call_check(this, World);\n        World_define_property(this, "componentCollections", new Map());\n        World_define_property(this, "entities", new Map());\n        World_define_property(this, "entitiesByCTypes", new Map());\n        World_define_property(this, "entitiesByTags", new Map());\n        World_define_property(this, "systems", void 0);\n        World_define_property(this, "dev", void 0);\n        /**\n   * "finds" a single entity based on a predicate\n   */ World_define_property(this, "find", function(predicate) {\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (predicate(entity)) {\n                        return entity;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return null;\n        });\n        /**\n   * "finds" all entities based on a predicate, kinda like filter.\n   */ World_define_property(this, "findAll", function(predicate) {\n            var results = [];\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (predicate(entity)) {\n                        results.push(entity);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return results;\n        });\n        /**\n   * "locates" a single entity based on its Components.\n   */ World_define_property(this, "locate", function(cl) {\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (entity.components.has(cl)) {\n                        return entity;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return null;\n        });\n        /**\n   * Locates all entities that contain the components named\n   */ World_define_property(this, "locateAll", function(cl) {\n            var results = [];\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entities.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    if (entity.components.has(cl)) {\n                        results.push(entity);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return results;\n        });\n        /**\n   * Grabs the first entity, and its related component, that matches the component type.\n   * @example\n   * ```\n   * const { entity, component } = world.grab(MyComponent);\n   * ```\n   */ World_define_property(this, "grab", function(cl) {\n            var entity = _this.locate(cl);\n            if (entity) {\n                var cc = _this.componentCollections.get(entity.id) || new ComponentCollection_ComponentCollection();\n                var component = cc.get(cl);\n                return {\n                    entity: entity,\n                    component: component\n                };\n            }\n            return null;\n        });\n        /**\n   * Grab single component based on component type and predicate.\n   *\n   * @example\n   * ```typescript\n   * const { entity, component } = world.grabBy(FirstComponent, (comp) => comp.id == \'awesome\')\n   * ```\n   */ World_define_property(this, "grabBy", function(cl, predicate) {\n            var entities = _this.locateAll(cl);\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                // const entities = this.locateAll((cl as unknown) as CT);\n                for(var _iterator = entities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var entity = _step.value;\n                    var cc = _this.componentCollections.get(entity.id) || new ComponentCollection_ComponentCollection();\n                    var component = cc.get(cl);\n                    if (predicate(component)) {\n                        return {\n                            component: component,\n                            entity: entity\n                        };\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return null;\n        });\n        /**\n   * Grab all the components primarily, and the entities if needed\n   */ World_define_property(this, "grabAll", function(cl) {\n            var entities = _this.locateAll(cl);\n            return entities.map(function(entity) {\n                return {\n                    entity: entity,\n                    component: entity.components.get(cl)\n                };\n            });\n        });\n        // TODO: Add grabAllBy method\n        /**\n   * Given an entity id and componentType, returns component\n   */ World_define_property(this, "get", function(eid, cl) {\n            var cc = _this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\n            return cc.get(cl);\n        });\n        /**\n   * Find and get the first instance of a component, without any associated entities.\n   * Helpful is you know that only one instance of a component exists across all entities.\n   * @param cl Component Class Contructor\n   * @param defaultValue A default component instance if no components are found.\n   */ World_define_property(this, "getComponent", function(cl, defaultValue) {\n            var result = _this.grab(cl);\n            if (!result) {\n                return defaultValue ? defaultValue : null;\n            }\n            return result.component;\n        });\n        /**\n   * Get an entity that has been tagged with the given tag, or return null;\n   */ World_define_property(this, "getTagged", function(tag) {\n            var tagEntityIds = _this.entitiesByTags.get(tag);\n            if (tagEntityIds) {\n                var entityId = tagEntityIds.values().next().value;\n                var entity = _this.entities.get(entityId);\n                if (entity) {\n                    return entity;\n                }\n            }\n            return null;\n        });\n        /**\n   * Gett all entities that have been tagged with the given tag.\n   * @param tag A string or number.\n   */ World_define_property(this, "getAllTagged", function(tag) {\n            var entities = []; // eslint-disable-line\n            var tagEntityIds = _this.entitiesByTags.get(tag);\n            if (tagEntityIds) {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = tagEntityIds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entityId = _step.value;\n                        var entity = _this.entities.get(entityId);\n                        if (entity) {\n                            entities.push(entity);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n            return entities;\n        });\n        /**\n   * Add a component on the given entity\n   */ World_define_property(this, "add", function(eid, component) {\n            var cc = _this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\n            var entity = _this.entities.get(eid);\n            if (!entity) {\n                throw new Error("world.add: Unable to locate entity with id ".concat(eid));\n            }\n            cc.add(component);\n            _this.componentCollections.set(eid, cc);\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = _this.entitiesByCTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var _step_value = World_sliced_to_array(_step.value, 2), ctArr = _step_value[0], entitySet = _step_value[1];\n                    if (ctArr.every(cc.hasByName)) {\n                        entitySet.add(eid);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            // @ts-ignore\n            if (component[TrackedCompSymbolKeys.isTracked]) {\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.setWorld](_this);\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.entityIDs].add(eid);\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.onAdd](_this, entity);\n            }\n            entity.onComponentAdd({\n                world: _this,\n                component: component\n            });\n            return _this;\n        });\n        /**\n   * Remove a component from the given entity.\n   * NOTE: This will change what systems will be called on the entity.\n   */ World_define_property(this, "remove", function(eid, cType) {\n            var cc = _this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\n            // need to get component instance...\n            var component = cc.get(cType);\n            // @ts-ignore\n            if (component[TrackedCompSymbolKeys.isTracked]) {\n                var entity = _this.entities.get(eid);\n                if (!entity) {\n                    throw new Error("world.remove: Unable to locate entity. eid: ".concat(eid, ", cType: ").concat(cType.name));\n                }\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.entityIDs].delete(eid);\n                // @ts-ignore\n                component[TrackedCompSymbolKeys.onRemove](_this, entity);\n            }\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                // remove entity from current entitiesByCTypes\n                for(var _iterator = _this.entitiesByCTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var _step_value = World_sliced_to_array(_step.value, 2), ctArr = _step_value[0], entitySet = _step_value[1];\n                    if (ctArr.every(cc.hasByName)) {\n                        entitySet.delete(eid);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            cc.remove(cType);\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                // Move entityId to new CTypes if needed.\n                for(var _iterator1 = _this.entitiesByCTypes[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var _step_value1 = World_sliced_to_array(_step1.value, 2), ctArr1 = _step_value1[0], entitySet1 = _step_value1[1];\n                    if (ctArr1.every(cc.hasByName)) {\n                        entitySet1.add(eid);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            var entity1 = _this.entities.get(eid);\n            if (entity1) {\n                entity1.onComponentRemove({\n                    world: _this,\n                    component: component\n                });\n            }\n            return _this;\n        });\n        this.dev = new src_DevTools(this);\n        this.systems = new Systems_Systems(this);\n    }\n    World_create_class(World, [\n        {\n            /**\n   * Method for adding systems.\n   */ key: "addSystem",\n            value: function addSystem(cTypes, systemFunc, funcName) {\n                this.systems.add(cTypes, systemFunc, funcName);\n                return this;\n            }\n        },\n        {\n            /**\n   * Setup an entity to exist in the given world. This is mostly an internal method, but exposed just in case.\n   */ key: "registerEntity",\n            value: function registerEntity(entity) {\n                var cc = new ComponentCollection_ComponentCollection();\n                this.componentCollections.set(entity.id, cc);\n                this.entities.set(entity.id, entity);\n                entity.onCreate(this);\n                return this;\n            }\n        },\n        {\n            /**\n   * Remove all components that belong to an entity.\n   */ key: "clearEntityComponents",\n            value: function clearEntityComponents(entityId) {\n                this.componentCollections.set(entityId, new ComponentCollection_ComponentCollection());\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.entitiesByCTypes.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entitySet = _step.value;\n                        if (entitySet.has(entityId)) {\n                            entitySet.delete(entityId);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return this;\n            }\n        },\n        {\n            /**\n   * Create an entity that is in the world.\n   * Basically just new Entity(world), but saves an import of Entity.\n   */ key: "createEntity",\n            value: function createEntity() {\n                var entity = new Entity_Entity(this);\n                return entity;\n            // Register entity here....\n            }\n        },\n        {\n            /**\n   * Destroys an entity.\n   * Same as entity.destroy().\n   */ key: "destroyEntity",\n            value: function destroyEntity(entityId) {\n                this.componentCollections.delete(entityId);\n                var entity = this.entities.get(entityId);\n                if (!entity) {\n                    throw new Error("world.destroyEntity: No entity found. entity id: ".concat(entityId));\n                }\n                this.entities.delete(entityId);\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.entitiesByCTypes.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var entitySet = _step.value;\n                        if (entitySet.has(entityId)) {\n                            entitySet.delete(entityId);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    // remove any tag associations with destroyed entities.\n                    for(var _iterator1 = this.entitiesByTags[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var _step_value = World_sliced_to_array(_step1.value, 2), tag = _step_value[0], entitySet1 = _step_value[1];\n                        if (entitySet1.has(entityId)) {\n                            entitySet1.delete(entityId);\n                        }\n                        if (entitySet1.size === 0) {\n                            this.entitiesByTags.delete(tag);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n                return this;\n            }\n        }\n    ]);\n    return World;\n}();\n\n\n;// CONCATENATED MODULE: ./src/index.ts\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///309\n\n}')}},__webpack_module_cache__={};function __webpack_require__(n){var t=__webpack_module_cache__[n];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var e=__webpack_module_cache__[n]={id:n,exports:{}};try{var r={id:n,module:e,factory:__webpack_modules__[n],require:__webpack_require__};if(__webpack_require__.i.forEach(function(n){n(r)}),e=r.module,!r.factory)throw console.error("undefined factory",n),Error("RuntimeError: factory is undefined ("+n+")");r.factory.call(e.exports,e,e.exports,r.require)}catch(n){throw e.error=n,n}return e.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.c=__webpack_module_cache__,__webpack_require__.i=[],(()=>{__webpack_require__.d=(n,t)=>{for(var e in t)__webpack_require__.o(t,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})}})(),(()=>{__webpack_require__.hu=n=>"hot/hot-update.js"})(),(()=>{__webpack_require__.hmrF=function(){return"hot/hot-update.json"}})(),(()=>{__webpack_require__.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t)})(),(()=>{var n,t,e,r={},o=__webpack_require__.c,i=[],l=[],Q="idle",s=0,a=[];function B(t,e){var r=o[e];if(!r)return t;var l=function(l){if(r.hot.active){if(o[l]){var Q=o[l].parents;-1===Q.indexOf(e)&&Q.push(e)}else i=[e],n=l;-1===r.children.indexOf(l)&&r.children.push(l)}else console.warn("[HMR] unexpected require("+l+") from disposed module "+e),i=[];return t(l)},Q=function(n){return{configurable:!0,enumerable:!0,get:function(){return t[n]},set:function(e){t[n]=e}}};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&"e"!==s&&Object.defineProperty(l,s,Q(s));return l.e=function(n,e){return F(t.e(n,e))},l}function c(o,s){var a=n!==o,B={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:a,_requireSelf:function(){i=s.parents.slice(),n=a?void 0:o,__webpack_require__(o)},active:!0,accept:function(n,t,e){if(void 0===n)B._selfAccepted=!0;else if("function"==typeof n)B._selfAccepted=n;else if("object"==typeof n&&null!==n)for(var r=0;r<n.length;r++)B._acceptedDependencies[n[r]]=t||function(){},B._acceptedErrorHandlers[n[r]]=e;else B._acceptedDependencies[n]=t||function(){},B._acceptedErrorHandlers[n]=e},decline:function(n){if(void 0===n)B._selfDeclined=!0;else if("object"==typeof n&&null!==n)for(var t=0;t<n.length;t++)B._declinedDependencies[n[t]]=!0;else B._declinedDependencies[n]=!0},dispose:function(n){B._disposeHandlers.push(n)},addDisposeHandler:function(n){B._disposeHandlers.push(n)},removeDisposeHandler:function(n){var t=B._disposeHandlers.indexOf(n);t>=0&&B._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,Q){case"idle":t=[],Object.keys(__webpack_require__.hmrI).forEach(function(n){__webpack_require__.hmrI[n](o,t)}),d("ready");break;case"ready":Object.keys(__webpack_require__.hmrI).forEach(function(n){__webpack_require__.hmrI[n](o,t)});break;case"prepare":case"check":case"dispose":case"apply":(e=e||[]).push(o)}},check:u,apply:b,status:function(n){if(!n)return Q;l.push(n)},addStatusHandler:function(n){l.push(n)},removeStatusHandler:function(n){var t=l.indexOf(n);t>=0&&l.splice(t,1)},data:r[o]};return n=void 0,B}function d(n){Q=n;for(var t=[],e=0;e<l.length;e++)t[e]=l[e].call(null,n);return Promise.all(t).then(function(){})}function U(){0==--s&&d("ready").then(function(){if(0===s){var n=a;a=[];for(var t=0;t<n.length;t++)n[t]()}})}function F(n){switch(Q){case"ready":d("prepare");case"prepare":return s++,n.then(U,U),n;default:return n}}function I(n){return 0===s?n():new Promise(function(t){a.push(function(){t(n())})})}function u(n){if("idle"!==Q)throw Error("check() is only allowed in idle status");return d("check").then(__webpack_require__.hmrM).then(function(e){return e?d("prepare").then(function(){var r=[];return t=[],Promise.all(Object.keys(__webpack_require__.hmrC).reduce(function(n,o){return __webpack_require__.hmrC[o](e.c,e.r,e.m,n,t,r),n},[])).then(function(){return I(function(){return n?g(n):d("ready").then(function(){return r})})})}):d(C()?"ready":"idle").then(function(){return null})})}function b(n){return"ready"!==Q?Promise.resolve().then(function(){throw Error("apply() is only allowed in ready status (state: "+Q+")")}):g(n)}function g(n){n=n||{},C();var r,o=t.map(function(t){return t(n)});t=void 0;var i=o.map(function(n){return n.error}).filter(Boolean);if(i.length>0)return d("abort").then(function(){throw i[0]});var l=d("dispose");o.forEach(function(n){n.dispose&&n.dispose()});var Q=d("apply"),s=function(n){r||(r=n)},a=[];return o.forEach(function(n){if(n.apply){var t=n.apply(s);if(t)for(var e=0;e<t.length;e++)a.push(t[e])}}),Promise.all([l,Q]).then(function(){return r?d("fail").then(function(){throw r}):e?g(n).then(function(n){return a.forEach(function(t){0>n.indexOf(t)&&n.push(t)}),n}):d("idle").then(function(){return a})})}function C(){if(e)return t||(t=[]),Object.keys(__webpack_require__.hmrI).forEach(function(n){e.forEach(function(e){__webpack_require__.hmrI[n](e,t)})}),e=void 0,!0}__webpack_require__.hmrD=r,__webpack_require__.i.push(function(n){var t=n.module,e=B(n.require,n.id);t.hot=c(n.id,t),t.parents=i,t.children=[],i=[],n.require=e}),__webpack_require__.hmrC={},__webpack_require__.hmrI={}})(),(()=>{var n={},t="ecstatic:";__webpack_require__.l=function(e,r,o,i){if(n[e])return void n[e].push(r);if(void 0!==o)for(var l,Q,s=document.getElementsByTagName("script"),a=0;a<s.length;a++){var B=s[a];if(B.getAttribute("src")==e||B.getAttribute("data-webpack")==t+o){l=B;break}}l||(Q=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,__webpack_require__.nc&&l.setAttribute("nonce",__webpack_require__.nc),l.setAttribute("data-webpack",t+o),l.src=e),n[e]=[r];var c=function(t,r){l.onerror=l.onload=null,clearTimeout(d);var o=n[e];if(delete n[e],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach(function(n){return n(r)}),t)return t(r)},d=setTimeout(c.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=c.bind(null,l.onerror),l.onload=c.bind(null,l.onload),Q&&document.head.appendChild(l)}})(),(()=>{__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}})(),(()=>{__webpack_require__.p="/static/"})(),(()=>{var n,t,e,r,o,i=__webpack_require__.hmrS_jsonp=__webpack_require__.hmrS_jsonp||{889:0},l={};function Q(t,e){return n=e,new Promise((n,e)=>{l[t]=n;var r=__webpack_require__.p+__webpack_require__.hu(t),o=Error(),i=n=>{if(l[t]){l[t]=void 0;var r=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading hot update chunk "+t+" failed.\n("+r+": "+i+")",o.name="ChunkLoadError",o.type=r,o.request=i,e(o)}};__webpack_require__.l(r,i)})}function s(n){function l(n){for(var t=[n],e={},r=t.map(function(n){return{chain:[n],id:n}});r.length>0;){var o=r.pop(),i=o.id,l=o.chain,s=__webpack_require__.c[i];if(s&&(!s.hot._selfAccepted||s.hot._selfInvalidated)){if(s.hot._selfDeclined)return{type:"self-declined",chain:l,moduleId:i};if(s.hot._main)return{type:"unaccepted",chain:l,moduleId:i};for(var a=0;a<s.parents.length;a++){var B=s.parents[a],c=__webpack_require__.c[B];if(c){if(c.hot._declinedDependencies[i])return{type:"declined",chain:l.concat([B]),moduleId:i,parentId:B};if(-1===t.indexOf(B)){if(c.hot._acceptedDependencies[i]){e[B]||(e[B]=[]),Q(e[B],[i]);continue}delete e[B],t.push(B),r.push({chain:l.concat([B]),id:B})}}}}}return{type:"accepted",moduleId:n,outdatedModules:t,outdatedDependencies:e}}function Q(n,t){for(var e=0;e<t.length;e++){var r=t[e];-1===n.indexOf(r)&&n.push(r)}}__webpack_require__.f&&delete __webpack_require__.f.jsonpHmr,t=void 0;var s,a={},B=[],c={},d=function(n){console.warn("[HMR] unexpected require("+n.id+") to disposed module")};for(var U in e)if(__webpack_require__.o(e,U)){var F=e[U],I=F?l(U):{type:"disposed",moduleId:U},u=!1,b=!1,g=!1,C="";switch(I.chain&&(C="\nUpdate propagation: "+I.chain.join(" -> ")),I.type){case"self-declined":n.onDeclined&&n.onDeclined(I),n.ignoreDeclined||(u=Error("Aborted because of self decline: "+I.moduleId+C));break;case"declined":n.onDeclined&&n.onDeclined(I),n.ignoreDeclined||(u=Error("Aborted because of declined dependency: "+I.moduleId+" in "+I.parentId+C));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(I),n.ignoreUnaccepted||(u=Error("Aborted because "+U+" is not accepted"+C));break;case"accepted":n.onAccepted&&n.onAccepted(I),b=!0;break;case"disposed":n.onDisposed&&n.onDisposed(I),g=!0;break;default:throw Error("Unexception type "+I.type)}if(u)return{error:u};if(b)for(U in c[U]=F,Q(B,I.outdatedModules),I.outdatedDependencies)__webpack_require__.o(I.outdatedDependencies,U)&&(a[U]||(a[U]=[]),Q(a[U],I.outdatedDependencies[U]));g&&(Q(B,[I.moduleId]),c[U]=d)}e=void 0;for(var y=[],G=0;G<B.length;G++){var m=B[G],p=__webpack_require__.c[m];p&&(p.hot._selfAccepted||p.hot._main)&&c[m]!==d&&!p.hot._selfInvalidated&&y.push({module:m,require:p.hot._requireSelf,errorHandler:p.hot._selfAccepted})}return{dispose:function(){r.forEach(function(n){delete i[n]}),r=void 0;for(var n,t,e=B.slice();e.length>0;){var o=e.pop(),l=__webpack_require__.c[o];if(l){var Q={},c=l.hot._disposeHandlers;for(G=0;G<c.length;G++)c[G].call(null,Q);for(__webpack_require__.hmrD[o]=Q,l.hot.active=!1,delete __webpack_require__.c[o],delete a[o],G=0;G<l.children.length;G++){var d=__webpack_require__.c[l.children[G]];d&&(n=d.parents.indexOf(o))>=0&&d.parents.splice(n,1)}}}for(var U in a)if(__webpack_require__.o(a,U)&&(l=__webpack_require__.c[U]))for(G=0,s=a[U];G<s.length;G++)t=s[G],(n=l.children.indexOf(t))>=0&&l.children.splice(n,1)},apply:function(t){for(var e in c)__webpack_require__.o(c,e)&&(__webpack_require__.m[e]=c[e]);for(var r=0;r<o.length;r++)o[r](__webpack_require__);for(var i in a)if(__webpack_require__.o(a,i)){var l=__webpack_require__.c[i];if(l){s=a[i];for(var Q=[],d=[],U=[],F=0;F<s.length;F++){var I=s[F],u=l.hot._acceptedDependencies[I],b=l.hot._acceptedErrorHandlers[I];if(u){if(-1!==Q.indexOf(u))continue;Q.push(u),d.push(b),U.push(I)}}for(var g=0;g<Q.length;g++)try{Q[g].call(null,s)}catch(e){if("function"==typeof d[g])try{d[g](e,{moduleId:i,dependencyId:U[g]})}catch(r){n.onErrored&&n.onErrored({type:"accept-error-handler-errored",moduleId:i,dependencyId:U[g],error:r,originalError:e}),n.ignoreErrored||(t(r),t(e))}else n.onErrored&&n.onErrored({type:"accept-errored",moduleId:i,dependencyId:U[g],error:e}),n.ignoreErrored||t(e)}}}for(var C=0;C<y.length;C++){var G=y[C],m=G.module;try{G.require(m)}catch(e){if("function"==typeof G.errorHandler)try{G.errorHandler(e,{moduleId:m,module:__webpack_require__.c[m]})}catch(r){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:m,error:r,originalError:e}),n.ignoreErrored||(t(r),t(e))}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:m,error:e}),n.ignoreErrored||t(e)}}return B}}}self.webpackHotUpdateecstatic=(t,r,i)=>{for(var Q in r)__webpack_require__.o(r,Q)&&(e[Q]=r[Q],n&&n.push(Q));i&&o.push(i),l[t]&&(l[t](),l[t]=void 0)},__webpack_require__.hmrI.jsonp=function(n,t){e||(e={},o=[],r=[],t.push(s)),__webpack_require__.o(e,n)||(e[n]=__webpack_require__.m[n])},__webpack_require__.hmrC.jsonp=function(n,l,a,B,c,d){c.push(s),t={},r=l,e=a.reduce(function(n,t){return n[t]=!1,n},{}),o=[],n.forEach(function(n){__webpack_require__.o(i,n)&&void 0!==i[n]?(B.push(Q(n,d)),t[n]=!0):t[n]=!1}),__webpack_require__.f&&(__webpack_require__.f.jsonpHmr=function(n,e){t&&__webpack_require__.o(t,n)&&!t[n]&&(e.push(Q(n)),t[n]=!0)})},__webpack_require__.hmrM=()=>{if("undefined"==typeof fetch)throw Error("No browser support: need fetch API");return fetch(__webpack_require__.p+__webpack_require__.hmrF()).then(n=>{if(404!==n.status){if(!n.ok)throw Error("Failed to fetch update manifest "+n.statusText);return n.json()}})}})();var __webpack_exports__=__webpack_require__(309);return __webpack_exports__})());