!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("ecstatic",[],n):"object"==typeof exports?exports.ecstatic=n():e.ecstatic=n()}(window,(function(){return function(e){var n=window.webpackHotUpdateecstatic;window.webpackHotUpdateecstatic=function(e,Q){!function(e,n){if(!p[e]||!y[e])return;for(var Q in y[e]=!1,n)Object.prototype.hasOwnProperty.call(n,Q)&&(b[Q]=n[Q]);0==--u&&0===r&&X()}(e,Q),n&&n(e,Q)};var Q,t=!0,B="ade155c5c31697d24db2",i={},c=[],s=[];function d(e){var n=R[e];if(!n)return N;var t=function(t){return n.hot.active?(R[t]?-1===R[t].parents.indexOf(e)&&R[t].parents.push(e):(c=[e],Q=t),-1===n.children.indexOf(t)&&n.children.push(t)):(console.warn("[HMR] unexpected require("+t+") from disposed module "+e),c=[]),N(t)},B=function(e){return{configurable:!0,enumerable:!0,get:function(){return N[e]},set:function(n){N[e]=n}}};for(var i in N)Object.prototype.hasOwnProperty.call(N,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(t,i,B(i));return t.e=function(e){return"ready"===l&&o("prepare"),r++,N.e(e).then(n,(function(e){throw n(),e}));function n(){r--,"prepare"===l&&(G[e]||x(e),0===r&&0===u&&X())}},t.t=function(e,n){return 1&n&&(e=t(e)),N.t(e,-2&n)},t}function F(n){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:Q!==n,active:!0,accept:function(e,n){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var Q=0;Q<e.length;Q++)t._acceptedDependencies[e[Q]]=n||function(){};else t._acceptedDependencies[e]=n||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._declinedDependencies[e[n]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=t._disposeHandlers.indexOf(e);n>=0&&t._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,l){case"idle":(b={})[n]=e[n],o("ready");break;case"ready":L(n);break;case"prepare":case"check":case"dispose":case"apply":(C=C||[]).push(n)}},check:V,apply:Z,status:function(e){if(!e)return l;U.push(e)},addStatusHandler:function(e){U.push(e)},removeStatusHandler:function(e){var n=U.indexOf(e);n>=0&&U.splice(n,1)},data:i[n]};return Q=void 0,t}var U=[],l="idle";function o(e){l=e;for(var n=0;n<U.length;n++)U[n].call(null,e)}var I,b,g,C,u=0,r=0,G={},y={},p={};function a(e){return+e+""===e?+e:e}function V(e){if("idle"!==l)throw new Error("check() is only allowed in idle status");return t=e,o("check"),(n=1e4,n=n||1e4,new Promise((function(e,Q){if("undefined"==typeof XMLHttpRequest)return Q(new Error("No browser support"));try{var t=new XMLHttpRequest,B=N.p+"hot/hot-update.json";t.open("GET",B,!0),t.timeout=n,t.send(null)}catch(e){return Q(e)}t.onreadystatechange=function(){if(4===t.readyState)if(0===t.status)Q(new Error("Manifest request to "+B+" timed out."));else if(404===t.status)e();else if(200!==t.status&&304!==t.status)Q(new Error("Manifest request to "+B+" failed."));else{try{var n=JSON.parse(t.responseText)}catch(e){return void Q(e)}e(n)}}}))).then((function(e){if(!e)return o(E()?"ready":"idle"),null;y={},G={},p=e.c,g=e.h,o("prepare");var n=new Promise((function(e,n){I={resolve:e,reject:n}}));b={};return x(0),"prepare"===l&&0===r&&0===u&&X(),n}));var n}function x(e){var n;p[e]?(y[e]=!0,u++,(n=document.createElement("script")).charset="utf-8",n.src=N.p+"hot/hot-update.js",document.head.appendChild(n)):G[e]=!0}function X(){o("ready");var e=I;if(I=null,e)if(t)Promise.resolve().then((function(){return Z(t)})).then((function(n){e.resolve(n)}),(function(n){e.reject(n)}));else{var n=[];for(var Q in b)Object.prototype.hasOwnProperty.call(b,Q)&&n.push(a(Q));e.resolve(n)}}function Z(n){if("ready"!==l)throw new Error("apply() is only allowed in ready status");return function n(t){var s,d,F,U,l;function I(e){for(var n=[e],Q={},t=n.map((function(e){return{chain:[e],id:e}}));t.length>0;){var B=t.pop(),i=B.id,c=B.chain;if((U=R[i])&&(!U.hot._selfAccepted||U.hot._selfInvalidated)){if(U.hot._selfDeclined)return{type:"self-declined",chain:c,moduleId:i};if(U.hot._main)return{type:"unaccepted",chain:c,moduleId:i};for(var s=0;s<U.parents.length;s++){var d=U.parents[s],F=R[d];if(F){if(F.hot._declinedDependencies[i])return{type:"declined",chain:c.concat([d]),moduleId:i,parentId:d};-1===n.indexOf(d)&&(F.hot._acceptedDependencies[i]?(Q[d]||(Q[d]=[]),u(Q[d],[i])):(delete Q[d],n.push(d),t.push({chain:c.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:Q}}function u(e,n){for(var Q=0;Q<n.length;Q++){var t=n[Q];-1===e.indexOf(t)&&e.push(t)}}E();var r={},G=[],y={},V=function(){console.warn("[HMR] unexpected require("+X.moduleId+") to disposed module")};for(var x in b)if(Object.prototype.hasOwnProperty.call(b,x)){var X;l=a(x),X=b[x]?I(l):{type:"disposed",moduleId:x};var Z=!1,L=!1,m=!1,A="";switch(X.chain&&(A="\nUpdate propagation: "+X.chain.join(" -> ")),X.type){case"self-declined":t.onDeclined&&t.onDeclined(X),t.ignoreDeclined||(Z=new Error("Aborted because of self decline: "+X.moduleId+A));break;case"declined":t.onDeclined&&t.onDeclined(X),t.ignoreDeclined||(Z=new Error("Aborted because of declined dependency: "+X.moduleId+" in "+X.parentId+A));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(X),t.ignoreUnaccepted||(Z=new Error("Aborted because "+l+" is not accepted"+A));break;case"accepted":t.onAccepted&&t.onAccepted(X),L=!0;break;case"disposed":t.onDisposed&&t.onDisposed(X),m=!0;break;default:throw new Error("Unexception type "+X.type)}if(Z)return o("abort"),Promise.reject(Z);if(L)for(l in y[l]=b[l],u(G,X.outdatedModules),X.outdatedDependencies)Object.prototype.hasOwnProperty.call(X.outdatedDependencies,l)&&(r[l]||(r[l]=[]),u(r[l],X.outdatedDependencies[l]));m&&(u(G,[X.moduleId]),y[l]=V)}var W,D=[];for(d=0;d<G.length;d++)l=G[d],R[l]&&R[l].hot._selfAccepted&&y[l]!==V&&!R[l].hot._selfInvalidated&&D.push({module:l,parents:R[l].parents.slice(),errorHandler:R[l].hot._selfAccepted});o("dispose"),Object.keys(p).forEach((function(e){!1===p[e]&&function(e){delete installedChunks[e]}(e)}));var h,v,f=G.slice();for(;f.length>0;)if(l=f.pop(),U=R[l]){var S={},H=U.hot._disposeHandlers;for(F=0;F<H.length;F++)(s=H[F])(S);for(i[l]=S,U.hot.active=!1,delete R[l],delete r[l],F=0;F<U.children.length;F++){var T=R[U.children[F]];T&&((W=T.parents.indexOf(l))>=0&&T.parents.splice(W,1))}}for(l in r)if(Object.prototype.hasOwnProperty.call(r,l)&&(U=R[l]))for(v=r[l],F=0;F<v.length;F++)h=v[F],(W=U.children.indexOf(h))>=0&&U.children.splice(W,1);o("apply"),void 0!==g&&(B=g,g=void 0);for(l in b=void 0,y)Object.prototype.hasOwnProperty.call(y,l)&&(e[l]=y[l]);var Y=null;for(l in r)if(Object.prototype.hasOwnProperty.call(r,l)&&(U=R[l])){v=r[l];var k=[];for(d=0;d<v.length;d++)if(h=v[d],s=U.hot._acceptedDependencies[h]){if(-1!==k.indexOf(s))continue;k.push(s)}for(d=0;d<k.length;d++){s=k[d];try{s(v)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:l,dependencyId:v[d],error:e}),t.ignoreErrored||Y||(Y=e)}}}for(d=0;d<D.length;d++){var w=D[d];l=w.module,c=w.parents,Q=l;try{N(l)}catch(e){if("function"==typeof w.errorHandler)try{w.errorHandler(e)}catch(n){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:l,error:n,originalError:e}),t.ignoreErrored||Y||(Y=n),Y||(Y=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:l,error:e}),t.ignoreErrored||Y||(Y=e)}}if(Y)return o("fail"),Promise.reject(Y);if(C)return n(t).then((function(e){return G.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e}));return o("idle"),new Promise((function(e){e(G)}))}(n=n||{})}function E(){if(C)return b||(b={}),C.forEach(L),C=void 0,!0}function L(n){Object.prototype.hasOwnProperty.call(b,n)||(b[n]=e[n])}var R={};function N(n){if(R[n])return R[n].exports;var Q=R[n]={i:n,l:!1,exports:{},hot:F(n),parents:(s=c,c=[],s),children:[]};return e[n].call(Q.exports,Q,Q.exports,d(n)),Q.l=!0,Q.exports}return N.m=e,N.c=R,N.d=function(e,n,Q){N.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:Q})},N.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},N.t=function(e,n){if(1&n&&(e=N(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var Q=Object.create(null);if(N.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)N.d(Q,t,function(n){return e[n]}.bind(null,t));return Q},N.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return N.d(n,"a",n),n},N.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},N.p="/static/",N.h=function(){return B},d(0)(N.s=0)}([function(e,n,Q){e.exports=Q(1)},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "World", function() { return /* reexport */ World_World; });\n__webpack_require__.d(__webpack_exports__, "createEntity", function() { return /* reexport */ createEntity; });\n__webpack_require__.d(__webpack_exports__, "createSystem", function() { return /* reexport */ createSystem; });\n\n// CONCATENATED MODULE: ./src/ComponentCollection.ts\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass ComponentCollection {\n  constructor() {\n    _defineProperty(this, "components", new Map());\n\n    _defineProperty(this, "add", component => {\n      this.components.set(component.type, component);\n    });\n\n    _defineProperty(this, "update", (cType, func) => {\n      if (this.components.has(cType)) {\n        const c = this.components.get(cType);\n\n        if (c) {\n          const updatedComponent = func(c);\n          this.components.set(cType, updatedComponent);\n        }\n      }\n    });\n\n    _defineProperty(this, "remove", cType => {\n      this.components.delete(cType);\n    });\n\n    _defineProperty(this, "get", cType => {\n      if (!this.components.has(cType)) {\n        throw new Error(`ComponentCollection does not have component of type ${cType}`);\n      }\n\n      return this.components.get(cType);\n    });\n\n    _defineProperty(this, "has", cType => {\n      if (Array.isArray(cType)) {\n        return cType.every(ct => this.components.has(ct) === true);\n      } else {\n        return this.components.has(cType);\n      }\n    });\n  }\n\n  get componentTypes() {\n    return [...this.components.keys()];\n  }\n\n  get size() {\n    return this.components.size;\n  }\n\n}\n// CONCATENATED MODULE: ./src/World.ts\nfunction World_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass World_World {\n  constructor() {\n    World_defineProperty(this, "componentCollections", new Map());\n\n    World_defineProperty(this, "entities", new Map());\n\n    World_defineProperty(this, "entitiesByCTypes", new Map());\n\n    World_defineProperty(this, "find", predicate => {\n      for (const entity of this.entities.values()) {\n        if (predicate(entity)) {\n          return entity;\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "findAll", predicate => {\n      const results = [];\n\n      for (const entity of this.entities.values()) {\n        if (predicate(entity)) {\n          results.push(entity);\n        }\n      }\n\n      return results;\n    });\n\n    World_defineProperty(this, "locate", cTypes => {\n      for (const entity of this.entities.values()) {\n        if (entity.components.has(cTypes)) {\n          return entity;\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "locateAll", cTypes => {\n      const results = [];\n\n      for (const entity of this.entities.values()) {\n        if (entity.components.has(cTypes)) {\n          results.push(entity);\n        }\n      }\n\n      return results;\n    });\n\n    World_defineProperty(this, "grab", cType => {\n      const entity = this.locate(cType);\n\n      if (entity) {\n        const cc = this.componentCollections.get(entity.id) || new ComponentCollection();\n        const component = cc.get(cType);\n        return {\n          entity,\n          component\n        };\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "grabBy", (cType, predicate) => {\n      const entities = this.locateAll(cType);\n\n      for (const entity of entities) {\n        const cc = this.componentCollections.get(entity.id) || new ComponentCollection();\n        const component = cc.get(cType);\n\n        if (predicate(component)) {\n          return {\n            component,\n            entity\n          };\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "grabAll", cType => {\n      return this.locateAll(cType).map(entity => ({\n        entity,\n        component: entity.components.get(cType)\n      }));\n    });\n\n    World_defineProperty(this, "get", (eid, cType) => {\n      const cc = this.componentCollections.get(eid) || new ComponentCollection();\n      return cc.get(cType);\n    });\n\n    World_defineProperty(this, "set", (eid, component) => {\n      const cc = this.componentCollections.get(eid) || new ComponentCollection();\n      cc.add(component);\n      this.componentCollections.set(eid, cc);\n\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\n        if (ctArr.every(cc.has)) {\n          entitySet.add(eid);\n        }\n      }\n    });\n\n    World_defineProperty(this, "remove", (eid, cType) => {\n      const cc = this.componentCollections.get(eid) || new ComponentCollection(); // remove entity from current entitiesByCTypes\n\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\n        if (ctArr.every(cc.has)) {\n          entitySet.delete(eid);\n        }\n      }\n\n      cc.remove(cType); // Move entityId to new CTypes if needed.\n\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\n        if (ctArr.every(cc.has)) {\n          entitySet.add(eid);\n        }\n      }\n    });\n  }\n\n  registerSystem(cTypes) {\n    this.entitiesByCTypes.set(cTypes, new Set());\n  }\n\n  registerEntity(entity) {\n    const cc = new ComponentCollection();\n    this.componentCollections.set(entity.id, cc);\n    this.entities.set(entity.id, entity);\n  }\n\n  clearEntityComponents(eid) {\n    this.componentCollections.set(eid, new ComponentCollection());\n\n    for (const entitySet of this.entitiesByCTypes.values()) {\n      if (entitySet.has(eid)) {\n        entitySet.delete(eid);\n      }\n    }\n  }\n\n  destroyEntity(eid) {\n    this.componentCollections.delete(eid);\n    this.entities.delete(eid);\n\n    for (const entitySet of this.entitiesByCTypes.values()) {\n      if (entitySet.has(eid)) {\n        entitySet.delete(eid);\n      }\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== \'undefined\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== \'undefined\' && typeof msCrypto.getRandomValues === \'function\' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error(\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\');\n  }\n\n  return getRandomValues(rnds8);\n}\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/bytesToUuid.js\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var bytesToUuid_i = 0; bytesToUuid_i < 256; ++bytesToUuid_i) {\n  byteToHex.push((bytesToUuid_i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset_) {\n  var offset = offset_ || 0; // Note: Be careful editing this code!  It\'s been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (byteToHex[buf[offset + 0]] + byteToHex[buf[offset + 1]] + byteToHex[buf[offset + 2]] + byteToHex[buf[offset + 3]] + \'-\' + byteToHex[buf[offset + 4]] + byteToHex[buf[offset + 5]] + \'-\' + byteToHex[buf[offset + 6]] + byteToHex[buf[offset + 7]] + \'-\' + byteToHex[buf[offset + 8]] + byteToHex[buf[offset + 9]] + \'-\' + byteToHex[buf[offset + 10]] + byteToHex[buf[offset + 11]] + byteToHex[buf[offset + 12]] + byteToHex[buf[offset + 13]] + byteToHex[buf[offset + 14]] + byteToHex[buf[offset + 15]]).toLowerCase();\n}\n\n/* harmony default export */ var esm_browser_bytesToUuid = (bytesToUuid);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return esm_browser_bytesToUuid(rnds);\n}\n\n/* harmony default export */ var esm_browser_v4 = (v4);\n// CONCATENATED MODULE: ./src/Entity.ts\nfunction Entity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nclass Entity_Entity {\n  constructor(world) {\n    Entity_defineProperty(this, "_id", void 0);\n\n    Entity_defineProperty(this, "_world", void 0);\n\n    this._id = esm_browser_v4();\n    this._world = world;\n    /*\n    Registering with the World.\n    */\n\n    this._world.registerEntity(this);\n  }\n  /**\n   * Add a component to an Entity, doh.\n   */\n\n\n  add(component) {\n    this._world.set(this._id, component);\n\n    return this;\n  }\n  /**\n   * Determines if an entity has a component related to it.\n   */\n\n\n  has(cType) {\n    const cc = this._world.componentCollections.get(this._id) || new ComponentCollection();\n    return cc.has(cType);\n  }\n\n  get(cType) {\n    const cc = this._world.componentCollections.get(this._id) || new ComponentCollection();\n    const component = cc.get(cType);\n    return component;\n  }\n\n  getAll() {\n    return this._world.componentCollections.get(this._id) || new ComponentCollection();\n  }\n\n  get components() {\n    return this._world.componentCollections.get(this._id) || new ComponentCollection();\n  }\n\n  remove(cType) {\n    this._world.remove(this._id, cType);\n\n    return this;\n  }\n  /** Clears all components from an Entity */\n\n\n  clear() {\n    this._world.clearEntityComponents(this._id);\n\n    return this;\n  }\n\n  destroy() {\n    this._world.destroyEntity(this._id);\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get world() {\n    return this._world;\n  }\n\n}\nfunction createEntity(world) {\n  const entity = new Entity_Entity(world);\n  return entity;\n}\n// CONCATENATED MODULE: ./src/System.ts\n\n\nfunction createSystem(world, cTypes, systemFunc) {\n  world.registerSystem(cTypes);\n  return () => {\n    let index = 0;\n    const size = world.entitiesByCTypes.size; // Used for matching the array of ComponentTypes which is the key\n    // of where the ComponentCollection is, with the array of ComponentTypes\n    // that are passes.\n    // Might be nice in the future to go back to a ref check on cTypes, but\n    // for now this doesn\'t seem to be that much of a perf hit.\n    // for (const ct of world.entitiesByCTypes.keys()) {\n    //   if (cTypes.length === ct.length && cTypes.every(c => ct.includes(c))) {\n    //     for (const eid of world.entitiesByCTypes.get(cTypes)) {\n    //       const args: SystemFuncArgs<CT> = {\n    //         entity: world.entities.get(eid),\n    //         components: world.componentCollections.get(eid),\n    //         world,\n    //         index,\n    //         size,\n    //         isFirst: index === 0,\n    //         isLast: index + 1 === size,\n    //       }\n    //       systemFunc(args);\n    //       index += 1;\n    //     }\n    //   }\n    // }\n\n    const cTypeArrs = world.entitiesByCTypes.get(cTypes) || new Set();\n\n    for (const eid of cTypeArrs) {\n      const args = {\n        entity: world.entities.get(eid) || new Entity_Entity(world),\n        components: world.componentCollections.get(eid) || new ComponentCollection(),\n        world,\n        index,\n        size,\n        isFirst: index === 0,\n        isLast: index + 1 === size\n      };\n      systemFunc(args);\n      index += 1;\n    }\n  };\n}\n// CONCATENATED MODULE: ./src/index.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')}])}));