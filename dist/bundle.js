!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("ecstatic",[],e):"object"==typeof exports?exports.ecstatic=e():n.ecstatic=e()}(window,(function(){return function(n){var e=window.webpackHotUpdateecstatic;window.webpackHotUpdateecstatic=function(n,t){!function(n,e){if(!a[n]||!G[n])return;for(var t in G[n]=!1,e)Object.prototype.hasOwnProperty.call(e,t)&&(I[t]=e[t]);0==--r&&0===C&&X()}(n,t),e&&e(n,t)};var t,Q=!0,B="9df9667fb5a518c7fb80",i={},c=[],s=[];function F(n){var e=Z[n];if(!e)return R;var Q=function(Q){return e.hot.active?(Z[Q]?-1===Z[Q].parents.indexOf(n)&&Z[Q].parents.push(n):(c=[n],t=Q),-1===e.children.indexOf(Q)&&e.children.push(Q)):(console.warn("[HMR] unexpected require("+Q+") from disposed module "+n),c=[]),R(Q)},B=function(n){return{configurable:!0,enumerable:!0,get:function(){return R[n]},set:function(e){R[n]=e}}};for(var i in R)Object.prototype.hasOwnProperty.call(R,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(Q,i,B(i));return Q.e=function(n){return"ready"===o&&U("prepare"),C++,R.e(n).then(e,(function(n){throw e(),n}));function e(){C--,"prepare"===o&&(u[n]||y(n),0===C&&0===r&&X())}},Q.t=function(n,e){return 1&e&&(n=Q(n)),R.t(n,-2&e)},Q}function l(n){var e={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:t!==n,active:!0,accept:function(n,t){if(void 0===n)e._selfAccepted=!0;else if("function"==typeof n)e._selfAccepted=n;else if("object"==typeof n)for(var Q=0;Q<n.length;Q++)e._acceptedDependencies[n[Q]]=t||function(){};else e._acceptedDependencies[n]=t||function(){}},decline:function(n){if(void 0===n)e._selfDeclined=!0;else if("object"==typeof n)for(var t=0;t<n.length;t++)e._declinedDependencies[n[t]]=!0;else e._declinedDependencies[n]=!0},dispose:function(n){e._disposeHandlers.push(n)},addDisposeHandler:function(n){e._disposeHandlers.push(n)},removeDisposeHandler:function(n){var t=e._disposeHandlers.indexOf(n);t>=0&&e._disposeHandlers.splice(t,1)},check:x,apply:V,status:function(n){if(!n)return o;d.push(n)},addStatusHandler:function(n){d.push(n)},removeStatusHandler:function(n){var e=d.indexOf(n);e>=0&&d.splice(e,1)},data:i[n]};return t=void 0,e}var d=[],o="idle";function U(n){o=n;for(var e=0;e<d.length;e++)d[e].call(null,n)}var b,I,g,r=0,C=0,u={},G={},a={};function p(n){return+n+""===n?+n:n}function x(n){if("idle"!==o)throw new Error("check() is only allowed in idle status");return Q=n,U("check"),(e=1e4,e=e||1e4,new Promise((function(n,t){if("undefined"==typeof XMLHttpRequest)return t(new Error("No browser support"));try{var Q=new XMLHttpRequest,B=R.p+"hot/hot-update.json";Q.open("GET",B,!0),Q.timeout=e,Q.send(null)}catch(n){return t(n)}Q.onreadystatechange=function(){if(4===Q.readyState)if(0===Q.status)t(new Error("Manifest request to "+B+" timed out."));else if(404===Q.status)n();else if(200!==Q.status&&304!==Q.status)t(new Error("Manifest request to "+B+" failed."));else{try{var e=JSON.parse(Q.responseText)}catch(n){return void t(n)}n(e)}}}))).then((function(n){if(!n)return U("idle"),null;G={},u={},a=n.c,g=n.h,U("prepare");var e=new Promise((function(n,e){b={resolve:n,reject:e}}));I={};return y(0),"prepare"===o&&0===C&&0===r&&X(),e}));var e}function y(n){var e;a[n]?(G[n]=!0,r++,(e=document.createElement("script")).charset="utf-8",e.src=R.p+"hot/hot-update.js",document.head.appendChild(e)):u[n]=!0}function X(){U("ready");var n=b;if(b=null,n)if(Q)Promise.resolve().then((function(){return V(Q)})).then((function(e){n.resolve(e)}),(function(e){n.reject(e)}));else{var e=[];for(var t in I)Object.prototype.hasOwnProperty.call(I,t)&&e.push(p(t));n.resolve(e)}}function V(e){if("ready"!==o)throw new Error("apply() is only allowed in ready status");var t,Q,s,F,l;function d(n){for(var e=[n],t={},Q=e.map((function(n){return{chain:[n],id:n}}));Q.length>0;){var B=Q.pop(),i=B.id,c=B.chain;if((F=Z[i])&&!F.hot._selfAccepted){if(F.hot._selfDeclined)return{type:"self-declined",chain:c,moduleId:i};if(F.hot._main)return{type:"unaccepted",chain:c,moduleId:i};for(var s=0;s<F.parents.length;s++){var l=F.parents[s],d=Z[l];if(d){if(d.hot._declinedDependencies[i])return{type:"declined",chain:c.concat([l]),moduleId:i,parentId:l};-1===e.indexOf(l)&&(d.hot._acceptedDependencies[i]?(t[l]||(t[l]=[]),b(t[l],[i])):(delete t[l],e.push(l),Q.push({chain:c.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:n,outdatedModules:e,outdatedDependencies:t}}function b(n,e){for(var t=0;t<e.length;t++){var Q=e[t];-1===n.indexOf(Q)&&n.push(Q)}}e=e||{};var r={},C=[],u={},G=function(){console.warn("[HMR] unexpected require("+y.moduleId+") to disposed module")};for(var x in I)if(Object.prototype.hasOwnProperty.call(I,x)){var y;l=p(x);var X=!1,V=!1,L=!1,m="";switch((y=I[x]?d(l):{type:"disposed",moduleId:x}).chain&&(m="\nUpdate propagation: "+y.chain.join(" -> ")),y.type){case"self-declined":e.onDeclined&&e.onDeclined(y),e.ignoreDeclined||(X=new Error("Aborted because of self decline: "+y.moduleId+m));break;case"declined":e.onDeclined&&e.onDeclined(y),e.ignoreDeclined||(X=new Error("Aborted because of declined dependency: "+y.moduleId+" in "+y.parentId+m));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(y),e.ignoreUnaccepted||(X=new Error("Aborted because "+l+" is not accepted"+m));break;case"accepted":e.onAccepted&&e.onAccepted(y),V=!0;break;case"disposed":e.onDisposed&&e.onDisposed(y),L=!0;break;default:throw new Error("Unexception type "+y.type)}if(X)return U("abort"),Promise.reject(X);if(V)for(l in u[l]=I[l],b(C,y.outdatedModules),y.outdatedDependencies)Object.prototype.hasOwnProperty.call(y.outdatedDependencies,l)&&(r[l]||(r[l]=[]),b(r[l],y.outdatedDependencies[l]));L&&(b(C,[y.moduleId]),u[l]=G)}var E,N=[];for(Q=0;Q<C.length;Q++)l=C[Q],Z[l]&&Z[l].hot._selfAccepted&&u[l]!==G&&N.push({module:l,errorHandler:Z[l].hot._selfAccepted});U("dispose"),Object.keys(a).forEach((function(n){!1===a[n]&&function(n){delete installedChunks[n]}(n)}));for(var W,A,D=C.slice();D.length>0;)if(l=D.pop(),F=Z[l]){var h={},v=F.hot._disposeHandlers;for(s=0;s<v.length;s++)(t=v[s])(h);for(i[l]=h,F.hot.active=!1,delete Z[l],delete r[l],s=0;s<F.children.length;s++){var f=Z[F.children[s]];f&&((E=f.parents.indexOf(l))>=0&&f.parents.splice(E,1))}}for(l in r)if(Object.prototype.hasOwnProperty.call(r,l)&&(F=Z[l]))for(A=r[l],s=0;s<A.length;s++)W=A[s],(E=F.children.indexOf(W))>=0&&F.children.splice(E,1);for(l in U("apply"),B=g,u)Object.prototype.hasOwnProperty.call(u,l)&&(n[l]=u[l]);var S=null;for(l in r)if(Object.prototype.hasOwnProperty.call(r,l)&&(F=Z[l])){A=r[l];var H=[];for(Q=0;Q<A.length;Q++)if(W=A[Q],t=F.hot._acceptedDependencies[W]){if(-1!==H.indexOf(t))continue;H.push(t)}for(Q=0;Q<H.length;Q++){t=H[Q];try{t(A)}catch(n){e.onErrored&&e.onErrored({type:"accept-errored",moduleId:l,dependencyId:A[Q],error:n}),e.ignoreErrored||S||(S=n)}}}for(Q=0;Q<N.length;Q++){var T=N[Q];l=T.module,c=[l];try{R(l)}catch(n){if("function"==typeof T.errorHandler)try{T.errorHandler(n)}catch(t){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:l,error:t,originalError:n}),e.ignoreErrored||S||(S=t),S||(S=n)}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:l,error:n}),e.ignoreErrored||S||(S=n)}}return S?(U("fail"),Promise.reject(S)):(U("idle"),new Promise((function(n){n(C)})))}var Z={};function R(e){if(Z[e])return Z[e].exports;var t=Z[e]={i:e,l:!1,exports:{},hot:l(e),parents:(s=c,c=[],s),children:[]};return n[e].call(t.exports,t,t.exports,F(e)),t.l=!0,t.exports}return R.m=n,R.c=Z,R.d=function(n,e,t){R.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},R.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},R.t=function(n,e){if(1&e&&(n=R(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(R.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var Q in n)R.d(t,Q,function(e){return n[e]}.bind(null,Q));return t},R.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return R.d(e,"a",e),e},R.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},R.p="/static/",R.h=function(){return B},F(0)(R.s=0)}([function(n,e,t){n.exports=t(1)},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "World", function() { return /* reexport */ World_World; });\n__webpack_require__.d(__webpack_exports__, "createEntity", function() { return /* reexport */ createEntity; });\n__webpack_require__.d(__webpack_exports__, "createSystem", function() { return /* reexport */ createSystem; });\n\n// CONCATENATED MODULE: ./src/ComponentCollection.ts\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass ComponentCollection {\n  constructor() {\n    _defineProperty(this, "components", new Map());\n\n    _defineProperty(this, "add", component => {\n      this.components.set(component.type, component);\n    });\n\n    _defineProperty(this, "update", (cType, func) => {\n      if (this.components.has(cType)) {\n        const c = this.components.get(cType);\n\n        if (c) {\n          const updatedComponent = func(c);\n          this.components.set(cType, updatedComponent);\n        }\n      }\n    });\n\n    _defineProperty(this, "get", cType => {\n      if (!this.components.has(cType)) {\n        throw new Error(`ComponentCollection does not have component of type ${cType}`);\n      }\n\n      return this.components.get(cType);\n    });\n\n    _defineProperty(this, "has", cType => {\n      if (Array.isArray(cType)) {\n        return cType.every(ct => this.components.has(ct) === true);\n      } else {\n        return this.components.has(cType);\n      }\n    });\n  }\n\n  get size() {\n    return this.components.size;\n  }\n\n}\n// CONCATENATED MODULE: ./src/World.ts\nfunction World_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass World_World {\n  constructor() {\n    World_defineProperty(this, "componentCollections", new Map());\n\n    World_defineProperty(this, "entities", new Map());\n\n    World_defineProperty(this, "entitiesByCTypes", new Map());\n\n    World_defineProperty(this, "find", predicate => {\n      for (const entity of this.entities.values()) {\n        if (predicate(entity)) {\n          return entity;\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "findAll", predicate => {\n      const results = [];\n\n      for (const entity of this.entities.values()) {\n        if (predicate(entity)) {\n          results.push(entity);\n        }\n      }\n\n      return results;\n    });\n\n    World_defineProperty(this, "locate", cTypes => {\n      for (const entity of this.entities.values()) {\n        if (entity.components.has(cTypes)) {\n          return entity;\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "locateAll", cTypes => {\n      const results = [];\n\n      for (const entity of this.entities.values()) {\n        if (entity.components.has(cTypes)) {\n          results.push(entity);\n        }\n      }\n\n      return results;\n    });\n\n    World_defineProperty(this, "grab", cType => {\n      const entity = this.locate(cType);\n\n      if (entity) {\n        const cc = this.componentCollections.get(entity.id);\n        const component = cc.get(cType);\n        return {\n          entity,\n          component\n        };\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "grabBy", (cType, predicate) => {\n      const entities = this.locateAll(cType);\n\n      for (const entity of entities) {\n        const cc = this.componentCollections.get(entity.id);\n        const component = cc.get(cType);\n\n        if (predicate(component)) {\n          return {\n            component,\n            entity\n          };\n        }\n      }\n\n      return null;\n    });\n\n    World_defineProperty(this, "grabAll", cType => {\n      return this.locateAll(cType).map(entity => ({\n        entity,\n        component: entity.components.get(cType)\n      }));\n    });\n\n    World_defineProperty(this, "get", (eid, cType) => {\n      const cc = this.componentCollections.get(eid);\n      return cc.get(cType);\n    });\n\n    World_defineProperty(this, "set", (eid, component) => {\n      const cc = this.componentCollections.get(eid) || new ComponentCollection();\n      cc.add(component);\n      this.componentCollections.set(eid, cc);\n\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\n        if (ctArr.every(cc.has)) {\n          entitySet.add(eid);\n        }\n      }\n    });\n  }\n\n  registerSystem(cTypes) {\n    this.entitiesByCTypes.set(cTypes, new Set());\n  }\n\n  registerEntity(entity) {\n    const cc = new ComponentCollection();\n    this.componentCollections.set(entity.id, cc);\n    this.entities.set(entity.id, entity);\n  }\n\n  clearEntityComponents(eid) {\n    this.componentCollections.set(eid, new ComponentCollection());\n\n    for (const entitySet of this.entitiesByCTypes.values()) {\n      if (entitySet.has(eid)) {\n        entitySet.delete(eid);\n      }\n    }\n  }\n\n  destroyEntity(eid) {\n    this.componentCollections.delete(eid);\n    this.entities.delete(eid);\n\n    for (const entitySet of this.entitiesByCTypes.values()) {\n      if (entitySet.has(eid)) {\n        entitySet.delete(eid);\n      }\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != \'undefined\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != \'undefined\' && typeof msCrypto.getRandomValues == \'function\' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error(\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\');\n  }\n\n  return getRandomValues(rnds8);\n}\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/bytesToUuid.js\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var bytesToUuid_i = 0; bytesToUuid_i < 256; ++bytesToUuid_i) {\n  byteToHex[bytesToUuid_i] = (bytesToUuid_i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], \'-\', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join(\'\');\n}\n\n/* harmony default export */ var esm_browser_bytesToUuid = (bytesToUuid);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\n\n\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == \'string\') {\n    buf = options === \'binary\' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || esm_browser_bytesToUuid(rnds);\n}\n\n/* harmony default export */ var esm_browser_v4 = (v4);\n// CONCATENATED MODULE: ./src/Entity.ts\nfunction Entity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass Entity_Entity {\n  constructor(world) {\n    Entity_defineProperty(this, "id", void 0);\n\n    Entity_defineProperty(this, "world", void 0);\n\n    this.id = esm_browser_v4();\n    this.world = world;\n    /*\n    Registering with the World.\n    */\n\n    this.world.registerEntity(this);\n  }\n\n  add(component) {\n    this.world.set(this.id, component);\n    return this;\n  } // TODO: figure out some much better error handling throughout this library.\n  //       Probably throw some errors.\n\n\n  get(cType) {\n    const cc = this.world.entities.get(this.id);\n\n    if (!cc) {\n      console.error(\'unable to find component collection for specified entity: \', this.id);\n    }\n\n    const component = cc.get(cType);\n\n    if (!component) {\n      console.error(`Unable to find component of type ${cType} in entity ${this.id}`);\n    }\n\n    return component;\n  }\n\n  getAll() {\n    return this.world.componentCollections.get(this.id);\n  }\n\n  get components() {\n    return this.world.componentCollections.get(this.id);\n  }\n  /** Clears all components from an Entity */\n\n\n  clear() {\n    this.world.clearEntityComponents(this.id);\n    return this;\n  }\n\n  destroy() {\n    this.world.destroyEntity(this.id);\n  }\n\n}\nfunction createEntity(world) {\n  const entity = new Entity_Entity(world);\n  return entity;\n}\n// CONCATENATED MODULE: ./src/System.ts\nfunction createSystem(world, cTypes, systemFunc) {\n  world.registerSystem(cTypes);\n  return () => {\n    let index = 0;\n    const size = world.entitiesByCTypes.size; // Used for matching the array of ComponentTypes which is the key\n    // of where the ComponentCollection is, with the array of ComponentTypes\n    // that are passes.\n    // Might be nice in the future to go back to a ref check on cTypes, but\n    // for now this doesn\'t seem to be that much of a perf hit.\n    // for (const ct of world.entitiesByCTypes.keys()) {\n    //   if (cTypes.length === ct.length && cTypes.every(c => ct.includes(c))) {\n    //     for (const eid of world.entitiesByCTypes.get(cTypes)) {\n    //       const args: SystemFuncArgs<CT> = {\n    //         entity: world.entities.get(eid),\n    //         components: world.componentCollections.get(eid),\n    //         world,\n    //         index,\n    //         size,\n    //         isFirst: index === 0,\n    //         isLast: index + 1 === size,\n    //       }\n    //       systemFunc(args);\n    //       index += 1;\n    //     }\n    //   }\n    // }\n\n    for (const eid of world.entitiesByCTypes.get(cTypes)) {\n      const args = {\n        entity: world.entities.get(eid),\n        components: world.componentCollections.get(eid),\n        world,\n        index,\n        size,\n        isFirst: index === 0,\n        isLast: index + 1 === size\n      };\n      systemFunc(args);\n      index += 1;\n    }\n  };\n}\n// CONCATENATED MODULE: ./src/index.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')}])}));